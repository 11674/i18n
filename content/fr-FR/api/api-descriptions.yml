---
app:
  description: Contrôle le cycle de vie des événements de votre application.
  methods:
    quit:
      description: >-
        Essayez de fermer toutes les fenêtres. L’événement avant-quit retentit d’abord. Si toutes les fenêtres sont fermées avec succès, l’événement-j’arrête la volonté sera émise et mettra fin à l’application par défaut. Cette méthode garantit que tous les gestionnaires d’événements de beforeunload et de déchargement sont correctement exécutées. Il est possible qu’une fenêtre annule la quitter en retournant false dans le gestionnaire d’événements beforeunload.
    exit:
      description: >-
        Termine immédiatement avec exitCode.  exitCode par défaut est 0. Toutes les fenêtres se ferment immédiatement sans demander à l’utilisateur et les événements avant de cesser de fumer et la volonté-quit ne retentira pas.
    relaunch:
      description: >-
        Relance l’app lors de l’instance en cours se termine. Par défaut, la nouvelle instance utilisera le même répertoire de travail et les arguments de ligne de commande avec l’instance actuelle. Si args est spécifié, les args sera passée comme arguments de ligne de commande au lieu de cela. Lorsque execPath est spécifié, l’execPath sera exécutée pour relancer au lieu de l’actuel App. Note que cette méthode ne termine pas à l’application lors de l’exécution, vous devez appeler app.quit ou app.exit après l’appel à app.relaunch pour redémarrer l’application. Lorsque app.relaunch est appelé à plusieurs reprises, plusieurs instances démarre après avoir quitté l’instance actuelle. Un exemple de redémarrer l’instance en cours immédiatement et en ajoutant un nouvel argument de ligne de commande pour la nouvelle instance :
    isReady:
      returns:
        description: 'true is Electron a terminé l''initialisation, sinon false.'
    focus:
      description: >-
        Sur Linux, met l’accent sur la première fenêtre visible. Sur macOS, rend l’application de l’application active. Sous Windows, se concentre sur la première fenêtre de l’application.
    hide:
      description: Masque toutes les fenêtres d’application sans les minimiser.
    show:
      description: >-
        Montre les fenêtres d’application après qu’ils étaient cachés. Ne leur porte pas automatiquement.
    getAppPath:
      returns:
        description: Le répertoire de l’application actuelle.
    getPath:
      description: 'Vous pouvez demander les chemins suivants sous le nom :'
      returns:
        description: >-
          Un chemin vers un répertoire spécial ou un fichier associé au nom. Si une erreur survient, une erreur est générée.
    getFileIcon:
      description: >-
        Récupère l’icône associée d’un tracé. Sous Windows, il y a 2 sortes d’icônes : sous Linux et macOS, icônes dépendent de l’application associée de type mime du fichier.
    setPath:
      description: >-
        Remplace le chemin d’accès à un répertoire spécial ou un fichier associé au nom. Si le chemin d’accès spécifie un répertoire qui n’existe pas, le répertoire sera créé par cette méthode. Si une erreur survient, une erreur est générée. Vous pouvez remplacer uniquement les chemins d’un nom défini dans app.getPath. Par défaut, les cookies et les caches des pages web seront stockées sous le répertoire userData. Si vous souhaitez modifier cet emplacement, vous devez substituer le chemin d’accès d’userData avant l’événement ready du module app est émis.
    getVersion:
      returns:
        description: >-
          La version de l’application chargée. Si aucune version n’est trouvée dans le fichier package.json de l’application, la version du paquet actuel ou exécutable est retournée.
    getName:
      description: >-
        Le champ nom de package.json est généralement un nom en minuscule court, selon les spécifications de modules NGP. Habituellement, vous devriez également spécifier un champ productName, qui est capitalisée et prénom de votre application, et qui sera préféré au nom de l’électron.
      returns:
        description: >-
          Nom de l’application actuelle, qui est le nom de fichier package.json de l’application.
    setName:
      description: Substitue le nom de l’application actuelle.
    getLocale:
      description: >-
        Remarque : Lorsque vous distribuez votre application packagée, vous devrez également expédier le dossier des paramètres régionaux. Remarque : Sous Windows vous devez l’appeler après les événements de prêts est émise.
      returns:
        description: >-
          La localisation de l’application actuelle. Valeurs de retour possibles sont documentés ici.
    addRecentDocument:
      description: >-
        Ajoute le chemin d’accès à la liste des documents récents. Cette liste est gérée par le système d’exploitation. Sous Windows vous pouvez visiter la liste de la barre des tâches et sur macOS, vous pouvez le visiter du menu du dock.
    clearRecentDocuments:
      description: Efface la liste des documents récents.
    setAsDefaultProtocolClient:
      description: >-
        Cette méthode définit le fichier exécutable actuel comme gestionnaire par défaut pour un protocole (aka le modèle URI). Il vous permet d’intégrer votre application plus profondément dans le système d’exploitation. Une fois inscrit, tous les liens avec votre protocole : / / s’ouvrira avec le fichier exécutable actuel. Le lien entier, y compris le protocole, est transmis à votre application en tant que paramètre. Sous Windows, vous pouvez fournir des paramètres optionnels path, le chemin d’accès de votre fichier exécutable et args, un tableau d’arguments à passer à votre exécutable lors de son lancement. Remarque : Sous macOS, vous pouvez inscrire uniquement les protocoles qui ont été ajoutés à info.plist votre application, qui ne peuvent pas être modifiés lors de l’exécution. Vous pouvez toutefois modifier le fichier avec un éditeur de texte simple ou un script durant la compilation. Veuillez vous reporter à la documentation d’Apple pour plus de détails. L’API utilise le registre de Windows et LSSetDefaultHandlerForURLScheme en interne.
      parameters:
        protocol:
          description: >-
            Le nom de votre protocole, sans ' : / /'. Si vous souhaitez que votre application pour gérer les « électrons : / /' liens, appelez cette méthode avec « électronique » comme paramètre.
        path:
          description: Par défaut, « process.execPath »
        args:
          description: Par défaut, un tableau vide
      returns:
        description: Si l’appel a réussi.
    removeAsDefaultProtocolClient:
      description: >-
        Cette méthode vérifie si le fichier exécutable actuel comme gestionnaire par défaut pour un protocole (aka le modèle URI). Dans l’affirmative, il enlèvera l’app comme gestionnaire par défaut.
      parameters:
        protocol:
          description: 'Le nom de votre protocole, sans '' : / /''.'
        path:
          description: Par défaut, « process.execPath »
        args:
          description: Par défaut, un tableau vide
      returns:
        description: Si l’appel a réussi.
    isDefaultProtocolClient:
      description: >-
        Cette méthode vérifie si le fichier exécutable actuel est le gestionnaire par défaut pour un protocole (aka le modèle URI). Dans l’affirmative, il retourne true. Sinon, elle retournera false. Remarque : Sous macOS, vous pouvez utiliser cette méthode pour vérifier si l’application a été enregistrée comme le gestionnaire de protocole par défaut pour un protocole. Vous pouvez également vérifier cela en vérifiant ~/Library/Preferences/com.apple.LaunchServices.plist sur la machine de macOS. Veuillez vous reporter à la documentation d’Apple pour plus de détails. L’API utilise le registre de Windows et LSCopyDefaultHandlerForURLScheme en interne.
      parameters:
        protocol:
          description: 'Le nom de votre protocole, sans '' : / /''.'
        path:
          description: Par défaut, « process.execPath »
        args:
          description: Par défaut, un tableau vide
    setUserTasks:
      description: >-
        Ajoute des tâches à la catégorie de tâches de la JumpList sur Windows. tâches est un tableau d’objets Task. Remarque : Si vous souhaitez personnaliser la liste de raccourcis encore plus utilisent app.setJumpList(categories).
      parameters:
        tasks:
          description: Tableau d’objets « Tâche »
      returns:
        description: Si l’appel a réussi.
    getJumpListSettings:
      returns:
        properties:
          - 
            description: >-
              Le nombre minimal d’éléments qui seront affichés dans la liste de raccourcis (pour une description plus détaillée de cette valeur, consultez la).
          - 
            description: >-
              Tableau d’objets JumpListItem qui correspondent aux éléments que l’utilisateur a explicitement supprimé à partir des catégories personnalisées dans la liste de raccourcis. Ces éléments de ne doit pas être rajouté à la liste de raccourcis dans l’appel à app.setJumpList(), Windows n’affiche pas une catégorie personnalisée qui contient un élément supprimé.
    setJumpList:
      description: >-
        Définit ou supprime une liste de raccourcis personnalisés pour l’application et retourne l’une des chaînes suivantes : si les catégories est nulle la préalablement réglé liste de raccourcis personnalisés (le cas échéant) sera remplacée par la liste de raccourcis standard de l’application (gérée par Windows). Remarque : Si un objet JumpListCategory n’a ni le type ni le jeu de propriétés de nom puis son type est censé pour être des tâches. Si la propriété type est omise, la propriété name est définie mais il est supposé que le type pour être personnalisé. Remarque : Les utilisateurs peuvent supprimer des éléments des catégories personnalisées, et Windows ne permettra pas un élément supprimé à ajouter dans une catégorie personnalisée qu’après le prochain appel avec succès à app.setJumpList(categories). Toute tentative de rajouter un élément supprimé dans une catégorie personnalisée antérieures à la version qui se traduira par l’ensemble de la catégorie personnalisée étant omis dans la liste de raccourcis. La liste d’éléments supprimés peut être obtenue à l’aide de app.getJumpListSettings(). Voici un exemple très simple de créer une liste de raccourcis personnalisés :
      parameters:
        categories:
          description: ou « null » Array « JumpListCategory » objets.
    makeSingleInstance:
      description: >-
        Cette méthode permet à votre application une Application à Instance unique - au lieu de permettre à plusieurs instances de votre application pour exécuter, cela garantira que qu’une seule instance de votre application est en cours d’exécution, et d’autres instances du signal cette instance et la sortie. rappel s’appellera avec rappel (argv, workingDirectory) quand une deuxième instance a été exécutée. argv est un tableau d’arguments de ligne de commande de la deuxième instance et workingDirectory est son répertoire de travail courant. Les applications répondent habituellement à cela en faisant leur fenêtre principale centrée et non réduits au minimum. Le rappel est garanti doit être exécutée après que l’événement ready de app obtient émis. Cette méthode retourne false si votre processus est l’instance principale de l’application et votre application devrait continuer le chargement. Et retourne la valeur true si le processus a envoyé ses paramètres vers une autre instance, et vous devez immédiatement cesser de fumer. Sur macOS le système applique seule instance automatiquement lorsque les utilisateurs essaient d’ouvrir une deuxième instance de votre application dans le Finder et les événements de fichier ouvert et libre-url seront émises pour cela. Toutefois, lorsque les utilisateurs démarrent votre application en ligne de commande mécanisme unique instance du système est contourné et vous devez utiliser cette méthode pour assurer la seule instance. Un exemple d’activation de la fenêtre de l’instance primaire lorsqu’une deuxième instance démarre :
      parameters:
        callback:
          parameters:
            argv:
              description: Un tableau d’arguments de ligne de commande de la deuxième instance
            workingDirectory:
              description: Répertoire de travail de la deuxième instance
      returns:
        description: '.'
    releaseSingleInstance:
      description: >-
        Libère tous les verrous qui ont été créés par makeSingleInstance. Cela permettra à plusieurs instances de l’application s’exécute une fois de plus à côté.
    setUserActivity:
      description: >-
        Crée un NSUserActivity et la définit comme l’activité en cours. L’activité est admissible à la procédure de transfert vers un autre appareil par la suite.
      parameters:
        type:
          description: Identifie de manière unique l’activité. Cartes à.
        userInfo:
          description: État d’App spécifique pour stocker pour une utilisation par un autre appareil.
        webpageURL:
          description: >-
            La page Web de charger dans un navigateur, si aucune application appropriée n’est installée sur le dispositif de reprise. Le régime doit être « http » ou « https ».
    getCurrentActivityType:
      returns:
        description: Le type de l’activité en cours d’exécution.
    setAppUserModelId:
      description: Modifie l’ID de modèle d’Application utilisateur ID.
    importCertificate:
      description: >-
        Stocker les importations le certificat au format pkcs12 dans le certificat de la plate-forme. rappel est appelé avec le résultat de l’opération d’importation, d’une valeur de 0 indique le succès alors que toute autre valeur indique un échec selon net_error_list de chrome.
      parameters:
        options:
          properties:
            certificate:
              description: Chemin d’accès du fichier pkcs12.
            password:
              description: Mot de passe pour le certificat.
        callback:
          parameters:
            result:
              description: Résultat de l’importation.
    disableHardwareAcceleration:
      description: >-
        Désactive l’accélération matérielle pour l’application actuelle. Cette méthode peut uniquement être appelée avant que app est prêt.
    getAppMemoryInfo:
      description: >-
        Retours ProcessMemoryInfo [] : Tableau de ProcessMemoryInfo des objets qui correspondent aux statistiques d’utilisation de mémoire de tous les processus associés à l’application.
    setBadgeCount:
      description: >-
        Définit le compteur de badge pendant env. actuelles affectant le nombre 0 masquera l’insigne. Sur macOS, il affiche sur l’icône du dock. Sur Linux il ne fonctionne que pour le lanceur d’unité, Note : lanceur d’unité requiert l’existence d’un fichier .desktop pour travailler, pour plus d’informations, veuillez lire Desktop environnement Integration.
      returns:
        description: Si l’appel a réussi.
    getBadgeCount:
      returns:
        description: La valeur actuelle affichée dans l’insigne du compteur.
    isUnityRunning:
      returns:
        description: Si l’environnement de bureau actuel est lanceur d’unité.
    getLoginItemSettings:
      description: >-
        Si vous avez fourni des options path et args pour app.setLoginItemSettings puis vous devez passer les mêmes arguments ici pour openAtLogin être définie correctement. Remarque : Cette API n’a aucun effet sur les versions de MAS.
      parameters:
        options:
          properties:
            path:
              description: >-
                Le chemin exécutable à comparer. Par défaut, process.execPath.
            args:
              description: >-
                Les arguments de ligne de commande à comparer. Par défaut, un tableau vide.
      returns:
        properties:
          - 
            properties:
              - 
                description: >-
                  Le chemin exécutable à comparer. Par défaut, process.execPath.
              - 
                description: >-
                  Les arguments de ligne de commande à comparer. Par défaut, un tableau vide.
          - 
            description: true si l’application est prête à ouvrir à la connexion.
          - 
            description: >-
              true si l’application est prête à ouvrir comme masqués lors de la connexion. Ce paramètre est uniquement pris en charge sur Mac OS.
          - 
            description: >-
              true si l’application a été ouvert lors de la connexion automatiquement. Ce paramètre est uniquement pris en charge sur Mac OS.
          - 
            description: >-
              true si l’application a été ouvert comme un élément de connexion cachée. Cela indique que l’application ne devrait pas ouvrir les fenêtres au démarrage. Ce paramètre est uniquement pris en charge sur Mac OS.
          - 
            description: >-
              true si l’application a été ouvert comme un point de connexion qui devrait rétablir l’état de la session précédente. Cela indique que l’application doit restaurer les fenêtres qui étaient ouvertes à la dernière fois que l’application a été fermée. Ce paramètre est uniquement pris en charge sur Mac OS.
    setLoginItemSettings:
      description: >-
        La valeur de connexion de l’application paramètres article. Pour travailler avec autoUpdater de l’électron sous Windows, qui utilise l’écureuil, vous aurez envie de définir le chemin de lancement à Update.exe et passer des arguments qui spécifient le nom de votre application. Par exemple : Note : cette API n’a aucun effet sur les versions de MAS.
      parameters:
        settings:
          properties:
            openAtLogin:
              description: >-
                true pour ouvrir l’application lors de la connexion, false pour supprimer l’application comme un élément de connexion. Par défaut, false.
            openAsHidden:
              description: >-
                true pour ouvrir l’app comme masqués. Par défaut, false. L’utilisateur peut modifier ce paramètre dans les préférences système, alors app.getLoginItemStatus () .wasOpenedAsHidden devrait être vérifié lorsque l’application est ouverte de savoir la valeur actuelle. Ce paramètre est uniquement pris en charge sur Mac OS.
        path:
          description: L’exécutable à lancer lors de la connexion. Par défaut, « process.execPath ».
        args:
          description: >-
            Les arguments de ligne de commande à passer à l’exécutable. Par défaut, un tableau vide. Prendre soin d’envelopper les chemins d’accès entre guillemets.
    isAccessibilitySupportEnabled:
      returns:
        description: >-
          true si la prise en charge de l’accessibilité de Chrome est activé, false sinon. Cette API retourne true si l’utilisation de technologies d’aide comme les lecteurs d’écran, n’a été détectée. Voir https://www.chromium.org/developers/design-documents/accessibility pour plus de détails.
    setAboutPanelOptions:
      description: >-
        Définir le sujet options du panneau. Cela remplace les valeurs définies dans le fichier .plist du PPA. Voir les docs Apple pour plus de détails.
      parameters:
        options:
          properties:
            applicationName:
              description: Nom de l’application.
            applicationVersion:
              description: Version de l’application.
            copyright:
              description: Informations sur les droits d'auteur.
            credits:
              description: Informations de crédit.
            version:
              description: Numéro de version de l’application.
  events:
    will-finish-launching:
      description: >-
        Émis lorsque l’application a terminé de démarrage de base. Sous Windows et Linux, l’événement sera-finition-lancement est le même que l’événement ready ; sur macOS, cet événement représente la notification applicationWillFinishLaunching de NSApplication. Vous habituellement mis en place des écouteurs pour les événements de fichier ouvert et libre-url ici et commencez le Rapporteur de plantage et auto updater. Dans la plupart des cas, vous devriez juste faire tout dans le gestionnaire d’événement ready.
    ready:
      description: >-
        Émis lorsque l’électron a terminé l’initialisation. Sur macOS, launchInfo détient l’userInfo de la NSUserNotification qui a été utilisée pour ouvrir l’application, si elle a été lancée depuis le centre de Notification. Vous pouvez appeler app.isReady() pour vérifier si cet événement a déjà été déclenchée.
    window-all-closed:
      description: >-
        Émis lorsque toutes les fenêtres ont été fermées. Si vous n’êtes pas abonné à cet événement et toutes les fenêtres sont fermées, le comportement par défaut consiste à quitter l’application ; Toutefois, si vous vous abonnez, vous contrôlez si l’app se ferme ou non. Si l’utilisateur appuie sur Cmd + Q, ou le développeur appelé app.quit(), Electron essaie d’abord fermer toutes les fenêtres et puis émettent de l’événement-j’arrête la volonté, et dans ce cas l’événement de fermeture de fenêtre-tout ne serait pas émise.
    before-quit:
      description: >-
        Émis avant l’application se ferme ses fenêtres. Appel Event.preventDefault () permet d’éviter le comportement par défaut, laquelle se termine l’application. Remarque : Si la demande de cesser de fumer a été initié par autoUpdater.quitAndInstall() puis avant de quitter est émis après émettant fermé événement sur toutes les fenêtres et leur fermeture.
    will-quit:
      description: >-
        Émis lorsque toutes les fenêtres ont été fermées et l’application va se fermer. Appel Event.preventDefault () permet d’éviter le comportement par défaut, laquelle se termine l’application. Consultez la description de l’événement de fermeture de fenêtre-tous les différences entre les manifestations de volonté-quit et fenêtre-tout-fermée.
    quit:
      description: Émis lorsque l’application est arrêter de fumer.
    open-file:
      description: >-
        Émis lorsque l’utilisateur souhaite ouvrir un fichier avec l’application. L’événement du fichier ouvert est habituellement émis lorsque l’application est déjà ouvert et le système d’exploitation souhaite réutiliser l’application pour ouvrir le fichier. fichier ouvert est également émis lorsqu’un fichier est déposé sur le dock et l’application n’est pas encore en cours d’exécution. Assurez-vous d’écouter l’événement fichier ouvert très tôt dans votre démarrage de l’application de gérer ce cas (même avant que l’événement ready est émis). Vous devez appeler Event.preventDefault () si vous souhaitez gérer cet événement. Sous Windows, vous devrez analyser process.argv (dans le processus principal) pour obtenir le chemin d’accès.
    open-url:
      description: >-
        Émis lorsque l’utilisateur souhaite ouvrir une URL avec l’application. Fichier Info.plist de votre application doit définir le schéma d’url dans la clé CFBundleURLTypes et NSPrincipalClass la valeur AtomApplication. Vous devez appeler Event.preventDefault () si vous souhaitez gérer cet événement.
    activate:
      description: >-
        Émis lorsque l’application est activée. Différentes actions peuvent déclencher cet événement, comme le lancement de l’application pour la première fois, essayez de relancer l’application lorsqu’elle est déjà en cours d’exécution, ou en cliquant sur le dock de l’application ou de l’icône de la barre des tâches.
    continue-activity:
      description: >-
        Émis au cours de la procédure de transfert quand une activité depuis un périphérique différent veut reprendre. Vous devez appeler Event.preventDefault () si vous souhaitez gérer cet événement. Une activité de l’utilisateur peut être poursuivie que dans une application qui a le même développeur équipe ID comme application de source de l’activité et qui prend en charge le type de l’activité. Prise en charge d’activité types sont spécifiés dans le fichier Info.plist du PPA sous la clé NSUserActivityTypes.
      returns:
        type:
          description: Une chaîne qui identifie l’activité. Cartes à.
        userInfo:
          description: >-
            Contient l’état d’app spécifique stocké par l’activité sur un autre périphérique.
    browser-window-blur:
      description: Émis lorsqu’un browserWindow obtient un peu floues.
    browser-window-focus:
      description: Émis lorsqu’un browserWindow est porté.
    browser-window-created:
      description: Émis lorsqu’un nouveau browserWindow est créé.
    web-contents-created:
      description: Émis lorsqu’un nouveau webContents est créé.
    certificate-error:
      description: >-
        Émis lorsque n’a pas vérifié le certificat pour les url, pour approuver le certificat, vous devez empêcher le comportement par défaut avec Event.preventDefault () et composez le callback(true).
      returns:
        error:
          description: Le code d’erreur
        callback:
          parameters:
            isTrusted:
              description: S’il faut examiner le certificat comme étant approuvé
    select-client-certificate:
      description: >-
        Émis lorsqu’un certificat client est requis. L’url correspond à l’entrée de navigation demandant le certificat client et rappel peut être appelée avec une entrée filtrée dans la liste. L’utilisation d’Event.preventDefault () empêche l’application d’utiliser le premier certificat dans le magasin.
    login:
      description: >-
        Émis lorsque webContents veut faire base auth. Le comportement par défaut consiste à annuler toutes les authentifications, pour remplacer cela vous devez empêcher le comportement par défaut avec Event.preventDefault () et composez le rappel (nom d’utilisateur, mot de passe) avec les informations d’identification.
    gpu-process-crashed:
      description: Émis lorsque le gpu processus se bloque ou sont tué.
    accessibility-support-changed:
      description: >-
        Émis lorsque le support de l’accessibilité du Chrome change. Cet événement se déclenche lorsque les technologies d’assistance, tels que les lecteurs d’écran sont activés ou désactivés. Voir https://www.chromium.org/developers/design-documents/accessibility pour plus de détails.
      returns:
        accessibilitySupportEnabled:
          description: >-
            « true » lorsque fonctions de Chrome d’accessibilité sont activé, « faux » dans le cas contraire.
  properties:
    commandLine:
      properties:
        appendSwitch:
          description: >-
            Ajouter un interrupteur (avec valeur facultative) à la ligne de commande de chrome. Remarque : Ceci n’affectera pas les process.argv et est principalement utilisée par les développeurs pour contrôler certains comportements de chrome à basse altitude.
          parameters:
            switch:
              description: Un commutateur de ligne de commande
            value:
              description: Une valeur pour le commutateur donné
        appendArgument:
          description: >-
            Ajouter un argument de ligne de commande de chrome. L’argument sera cité correctement. Remarque : Cela n’affectera pas process.argv.
          parameters:
            value:
              description: L’argument à ajouter à la ligne de commande
    dock:
      properties:
        bounce:
          description: >-
            Lorsque la critique est passée, l’icône du dock rebondira jusqu'à ce que l’application devenue active ou la demande est annulée. Lorsque informationnel est passé, l’icône du dock rebondira pendant une seconde. Toutefois, la requête reste active jusqu'à ce que l’application devenue active ou la demande est annulée.
          parameters:
            type:
              description: >-
                Peut être « critiques » ou « d’information ». La valeur par défaut est « d’information »
          returns:
            description: un ID qui représente la requête.
        cancelBounce:
          description: Annuler le rebond d’identité.
        downloadFinished:
          description: >-
            Rebondit la pile téléchargements si le chemin d’accès se trouve dans le dossier téléchargements.
        setBadge:
          description: Définit la chaîne à afficher dans la zone badging de la station.
        getBadge:
          returns:
            description: La chaîne de l’insigne du quai.
        hide:
          description: Masquer l’icône du dock.
        show:
          description: Affiche l’icône du dock.
        isVisible:
          returns:
            description: >-
              Si l’icône du dock est visible. L’appel de app.dock.show() est asynchrone si cette méthode peut ne pas retourner true, immédiatement après cet appel.
        setMenu:
          description: Définit le menu du dock de l’application.
        setIcon:
          description: Définit l’image associée à cette icône du dock.
autoUpdater:
  description: Activez les apps pour mettre automatiquement à jour eux-mêmes.
  methods:
    setFeedURL:
      description: Définit l’url et l’initialiser l’updater automatique.
      parameters:
        requestHeaders:
          description: En-têtes de requête HTTP.
    getFeedURL:
      returns:
        description: La version actualisée URL de flux.
    checkForUpdates:
      description: >-
        Demande au serveur s’il y a une mise à jour. Vous devez appeler setFeedURL avant d’utiliser cette API.
    quitAndInstall:
      description: >-
        Redémarre l’application et installe la mise à jour après qu’il a été téléchargé. Il ne doit être appelée qu’après que mise à jour téléchargée a été émise. Remarque : autoUpdater.quitAndInstall() sera d’abord fermer toutes les fenêtres d’application et émettent seulement événement avant de quitter l’application après cela. Ceci est différent de la séquence de l’événement quit normal.
  events:
    error:
      description: Émis lorsqu’il y a une erreur en mettant à jour.
    checking-for-update:
      description: Émis lors de la vérification si une mise à jour a commencé.
    update-available:
      description: >-
        Émis lorsqu’il y a une mise à jour disponible. La mise à jour est téléchargé automatiquement.
    update-not-available:
      description: Émis quand il n’y a aucune mise à jour disponible.
    update-downloaded:
      description: >-
        Émis lorsqu’une mise à jour a été téléchargée. Sous Windows seulement releaseName est disponible.
BrowserView:
  description: Créer et contrôler les vues.
  constructorMethod:
    parameters:
      - 
        properties:
          - 
            description: Voir.
  instanceMethods:
    setAutoResize:
      parameters:
        options:
          properties:
            width:
              description: >-
                Si true, largeur de la vue va se développer et de réduire ainsi que de la fenêtre. false par défaut.
            height:
              description: >-
                Si true, hauteur de la vue va se développer et de réduire ainsi que de la fenêtre. false par défaut.
    setBounds:
      description: >-
        Redimensionne et déplace la vue vers les limites fournies par rapport à la fenêtre.
    setBackgroundColor:
      parameters:
        color:
          description: 'Couleur en forme de « #aarrggbb » ou « #argb ». Le canal alpha est facultatif.'
  instanceProperties:
    webContents:
      description: Un objet WebContents appartenu à ce point de vue.
    id:
      description: Un entier représentant l’ID unique de la vue.
BrowserWindow:
  description: Créer et contrôler des fenêtres du navigateur.
  staticMethods:
    getAllWindows:
      returns:
        description: Un tableau de toutes les fenêtres de navigateur ouvertes.
    getFocusedWindow:
      returns:
        description: >-
          La fenêtre qui se concentre dans cette application, sinon retourne null.
    fromWebContents:
      returns:
        description: La fenêtre qui détient la donnée webContents.
    fromId:
      returns:
        description: La fenêtre avec l’id indiqué.
    addDevToolsExtension:
      description: >-
        Ajoute l’extension DevTools située au chemin d’accès et retourne le nom de l’extension. L’extension se souviendra alors vous suffit d’appeler cette API une fois, cette API n’est pas pour l’utilisation de la programmation. Si vous tentez d’ajouter une extension qui a déjà été chargée, cette méthode reviendra pas, connectez-vous à la place un avertissement à la console. La méthode ne retourne également si le manifeste de l’extension est manquantes ou incomplètes. Remarque : Cette API ne peut pas être appelée avant que l’événement ready du module app est émis.
    removeDevToolsExtension:
      description: >-
        Supprimer une extension de DevTools par nom. Remarque : Cette API ne peut pas être appelée avant que l’événement ready du module app est émis.
    getDevToolsExtensions:
      description: >-
        Pour vérifier si une extension DevTools est installée, vous pouvez exécuter ce qui suit : Remarque : cette API ne peut être appelée avant que l’événement ready du module app est émis.
      returns:
        description: >-
          Les clés sont les noms d’extension et chaque valeur est un objet contenant les propriétés name et version.
  constructorMethod:
    parameters:
      - 
        properties:
          - 
            description: Largeur de la fenêtre en pixels. Valeur par défaut est de 800.
          - 
            description: Hauteur de la fenêtre en pixels. Valeur par défaut est 600.
          - 
            description: >-
              (s’il y est utilisé) Décalage à gauche de la fenêtre de l’écran. Valeur par défaut est au centre de la fenêtre.
          - 
            description: >-
              (si x est utilisé) Décalage de supérieur de la fenêtre de l’écran. Valeur par défaut est au centre de la fenêtre.
          - 
            description: >-
              La largeur et la hauteur servirait comme taille de la page web, ce qui veut dire la taille de la fenêtre actuelle comprendra taille de châssis de fenêtre et être légèrement plus grand. Valeur par défaut est false.
          - 
            description: Afficher la fenêtre dans le centre de l’écran.
          - 
            description: Largeur minimale de la fenêtre. Valeur par défaut est 0.
          - 
            description: Hauteur minimale de la fenêtre. Valeur par défaut est 0.
          - 
            description: Largeur maximale de la fenêtre. Valeur par défaut est sans limite.
          - 
            description: Hauteur maximale de la fenêtre. Valeur par défaut est sans limite.
          - 
            description: Si la fenêtre est redimensionnable. Valeur par défaut est true.
          - 
            description: >-
              Si la fenêtre est mobile. Ce n’est pas implémenté sur Linux. Valeur par défaut est true.
          - 
            description: >-
              Si la fenêtre est minimizable. Ce n’est pas implémenté sur Linux. Valeur par défaut est true.
          - 
            description: >-
              Si la fenêtre est maximizable. Ce n’est pas implémenté sur Linux. Valeur par défaut est true.
          - 
            description: >-
              Si la fenêtre est liquidable. Ce n’est pas implémenté sur Linux. Valeur par défaut est true.
          - 
            description: |2-
                      
              Whether the window can be focused. Default is true. On Windows setting focusable:
                false also implies setting skipTaskbar:
                  true. On Linux setting focusable: faux rend la fenêtre arrêter interagissant avec wm, donc la fenêtre sera toujours rester au top dans tous les espaces de travail.
          - 
            description: >-
              Si la fenêtre doit toujours rester au-dessus des autres fenêtres. Valeur par défaut est false.
          - 
            description: >-
              Si la fenêtre devrait afficher en plein écran. Quand explicitement défini à false, le bouton plein écran sera masqué ou désactivé sur macOS. Valeur par défaut est false.
          - 
            description: >-
              Si la fenêtre peut être mises en mode plein écran. Sur macOS, aussi savoir si le bouton de zoom/agrandir devrait basculer plein écran mode ou agrandir la fenêtre. Valeur par défaut est true.
          - 
            description: Si vous souhaitez afficher la fenêtre dans la barre des tâches. Valeur par défaut est false.
          - 
            description: Le mode kiosk. Valeur par défaut est false.
          - 
            description: Titre de fenêtre par défaut. Valeur par défaut est « Electron ».
          - 
            description: >-
              L’icône de la fenêtre. Sous Windows, qu'il est recommandé d’utiliser des icônes de l’ICO pour obtenir les meilleurs effets visuels, vous pouvez également laisser indéfini alors l’icône de l’exécutable sera utilisé.
          - 
            description: Si la fenêtre doit être indiqué lorsque créé. Valeur par défaut est true.
          - 
            description: Spécifiez false pour créer un. Valeur par défaut est true.
          - 
            description: Spécifier la fenêtre parent. Valeur par défaut est null.
          - 
            description: >-
              S’il s’agit d’une fenêtre modale. Cela ne fonctionne que lorsque la fenêtre est une fenêtre enfant. Valeur par défaut est false.
          - 
            description: >-
              Si l’affichage des pages web accepte un seul événement de la souris vers le bas qui actionne simultanément la fenêtre. Valeur par défaut est false.
          - 
            description: Que ce soit cacher le curseur lors de la saisie. Valeur par défaut est false.
          - 
            description: >-
              Masquer automatiquement la barre de menu à moins que vous appuyez sur la touche Alt enfoncée. Valeur par défaut est false.
          - 
            description: >-
              Activez la fenêtre redimensionnement supérieure de l’écran. Valeur par défaut est false.
          - 
            description: >-
              Couleur d’arrière-plan de la fenêtre comme valeur hexadécimale, comme
          - 
            description: >-
              Si la fenêtre devrait avoir une ombre. C’est seulement mis en œuvre sur macOS. Valeur par défaut est true.
          - 
            description: >-
              Les forces à l’aide de thème sombre pour la fenêtre, ne fonctionne que sur certains GTK + 3 environnements de bureau. Valeur par défaut est false.
          - 
            description: Rend la fenêtre. Valeur par défaut est false.
          - 
            description: >-
              Le type de fenêtre, valeur par défaut est fenêtre normale. Voir plus d’infos sur ci dessous.
          - 
            description: >-
              Le style de barre de titre. Valeur par défaut est la valeur par défaut. Les valeurs possibles sont :
            possibleValues:
              - 
                description: Résultats dans la barre titre opaque grise standard Mac.
              - 
                description: >-
                  Résultats dans une barre de titre caché et un contenu de fenêtre, la barre de titre et pourtant a toujours les contrôles de fenêtre standard (« feux de circulation ») en haut à gauche de pleine grandeur.
              - 
                description: >-
                  Résultats dans une barre de titre caché avec un regard alternatif où les boutons de feux de circulation sont légèrement plus incrustés depuis le bord de la fenêtre.
          - 
            description: >-
              Utilisez WS_THICKFRAME style pour fenêtres sans cadre sur Windows qui ajoute les châssis de fenêtre standard. Il affectant la valeur false supprime ombre de fenêtre et des animations de la fenêtre. Valeur par défaut est true.
          - 
            description: >-
              Ajouter un type de prise d’effet de dynamisme à la fenêtre, uniquement sur macOS. Peut être axée sur l’aspect, clair, foncé, titlebar, sélection, menu, kangourou, sidebar, medium-léger ou ultra foncé.
          - 
            description: >-
              Contrôle le comportement sur macOS lorsque l’option-clic sur le bouton de feu vert sur la barre d’outils ou en cliquant sur la fenêtre > le menu Zoom. Si true, la fenêtre se développera à la largeur par défaut de la page web avec zoom, faux fera effectuer un zoom sur la largeur de l’écran. Cela affectera aussi le comportement lors de l’appel maximize() directement. Valeur par défaut est false.
          - 
            description: >-
              L’onglet nom du groupe, permet l’ouverture de la fenêtre comme un onglet natif sur Mac OS 10.12 +. Windows avec le même identificateur de tabulation seront regroupés.
          - 
            description: Paramètres des fonctionnalités de la page web.
            properties:
              - 
                description: >-
                  Si vous voulez activer DevTools. Si elle est définie sur false, ne pouvez pas utiliser BrowserWindow.webContents.openDevTools() pour ouvrir DevTools. Valeur par défaut est true.
              - 
                description: Si l’intégration de nœud est activée. Valeur par défaut est true.
              - 
                description: >-
                  Si l’intégration de nœud est activée chez les travailleurs du web. Valeur par défaut est false. Plus à ce sujet se trouvent dans.
              - 
                description: >-
                  Spécifie un script qui sera chargé avant les autres scripts s’exécutent dans la page. Ce script aura toujours accès au nœud API n’importe si intégration de nœud est activée ou désactivé. La valeur doit être le chemin d’accès absolu au fichier du script. Intégration de nœud est éteint, le script précharge peut rétablir ce nœud symboles globaux de nouveau à la portée globale. Voir l’exemple.
              - 
                description: >-
                  Si défini, cela sera sandbox le convertisseur associé à la fenêtre, rendant compatible avec le bac à sable au niveau du système d’exploitation chrome et en désactivant le moteur Node.js. Ce n’est pas identique à l’option nodeIntegration et les API disponibles pour le script de précontrainte sont plus limitées. En savoir plus sur l’option. Cette option est actuellement expérimentale et peut-être changer ou être supprimées à l’avenir de presse électronique.
              - 
                description: >-
                  Définit la session utilisée par la page. Au lieu de passer directement l’objet de Session, vous pouvez également choisir d’utiliser l’option de la partition au lieu de cela, qui accepte une chaîne de la partition. Lorsque la session et la partition sont fournis, la session sera préférée. Valeur par défaut est la session par défaut.
              - 
                description: |2-
                          
                  "Sets the session used by the page according to the session's partition string. If partition starts with persist:, the page will use a persistent session available to all pages in the app with the same partition. If there is no persist": préfixe, la page utilise une session en mémoire. En affectant la même partition, plusieurs pages peuvent partager la même session. Valeur par défaut est la session par défaut.
              - 
                description: >-
                  Le facteur de zoom par défaut de la page, 3.0 représente 300 %. Valeur par défaut est 1.0.
              - 
                description: Permet le support de JavaScript. Valeur par défaut est true.
              - 
                description: >-
                  Si la valeur false, il va désactiver la stratégie de même origine (habituellement à l’aide du test sites Web par des personnes) et allowRunningInsecureContent la valeur true si cette option n’a pas été défini par l’utilisateur. Valeur par défaut est true.
              - 
                description: >-
                  Permettent d’exécuter JavaScript, CSS ou plugins des URL http d’une page https. Valeur par défaut est false.
              - 
                description: Permet le support de l’image. Valeur par défaut est true.
              - 
                description: Rendre les éléments TextArea redimensionnable. Valeur par défaut est true.
              - 
                description: Permet le support de WebGL. Valeur par défaut est true.
              - 
                description: Permet le support de WebAudio. Valeur par défaut est true.
              - 
                description: Si les plugins doivent être activées. Valeur par défaut est false.
              - 
                description: Active les fonctionnalités expérimentales de chrome. Valeur par défaut est false.
              - 
                description: >-
                  Active les fonctionnalités expérimentales toile de chrome. Valeur par défaut est false.
              - 
                description: >-
                  Permet de faire défiler effet rebond (bandes de caoutchouc) sur Mac OS. Valeur par défaut est false.
              - 
                description: >-
                  Une liste de chaînes de fonctionnalité séparés par,, comme CSSVariables, KeyboardEventKey à activer. On trouvera la liste complète des chaînes des fonctionnalités prises en charge dans le fichier.
              - 
                description: >-
                  Une liste de chaînes de fonctionnalité séparés par,, comme CSSVariables, KeyboardEventKey pour désactiver. On trouvera la liste complète des chaînes des fonctionnalités prises en charge dans le fichier.
              - 
                description: Définit la police par défaut pour la famille de polices.
                properties:
                  - 
                    description: Valeur par défaut est Times New Roman.
                  - 
                    description: Valeur par défaut est Times New Roman.
                  - 
                    description: Par défaut, Arial.
                  - 
                    description: Par défaut, Courier New.
                  - 
                    description: Par défaut, Script.
                  - 
                    description: Par défaut, à l’Impact.
              - 
                description: Par défaut, 16.
              - 
                description: Par défaut, 13.
              - 
                description: 0 par défaut.
              - 
                description: Par défaut, ISO-8859-1.
              - 
                description: >-
                  Que ce soit d’étrangler des animations et des minuteries lorsque la page redevient fond. La valeur par défaut true.
              - 
                description: >-
                  S’il faut activer le rendu hors de l’écran pour la fenêtre du navigateur. Par défaut, false. Consultez le pour plus de détails.
              - 
                description: >-
                  S’il faut exécuter des APIs de l’électron et le spécifié précharger le script dans un contexte distinct de JavaScript. Par défaut, false. Le contexte que les pistes de précharge script auront toujours un accès complet à la globals de document et de la fenêtre, mais il utilisera son propre ensemble de JavaScript builtins (Array, Object, JSON, etc.) et est isolé de toute modification apportée à l’environnement global de la page chargée. L’API d’électron ne sera disponible dans le script de précharge et pas la page chargée. Cette option doit être utilisée lors du chargement de contenu distant potentiellement non fiable pour s’assurer que le contenu chargé ne peut altérer le script précharge et aucune API d’électrons utilisés. Cette option utilise la même technique utilisée par. Vous pouvez accéder à cet égard dans les outils de dev en sélectionnant l’entrée « Électron isolé contexte » dans la zone de liste déroulante en haut de l’onglet Console. Cette option est actuellement expérimentale et peut-être changer ou être supprimées à l’avenir de presse électronique.
  instanceMethods:
    destroy:
      description: >-
        Fermeture de force l’événement de la fenêtre, le déchargement et le beforeunload ne sera pas émis pour la page web et fermer l’événement sera également pas émis pour cette fenêtre, mais il garantit que l’événement closed retentit.
    close:
      description: >-
        Essayez de fermer la fenêtre. Cela a le même effet qu’un utilisateur manuellement en cliquant sur le bouton fermer de la fenêtre. La page web peut annuler la clôture bien. Voir l’événement close.
    focus:
      description: Met l’accent sur la fenêtre.
    blur:
      description: Supprime focus à partir de la fenêtre.
    isFocused:
      returns:
        description: Si la fenêtre est centrée.
    isDestroyed:
      returns:
        description: Si la fenêtre est détruite.
    show:
      description: Montre et donne le focus à la fenêtre.
    showInactive:
      description: Affiche la fenêtre mais ne pas se concentrer sur elle.
    hide:
      description: Masque la fenêtre.
    isVisible:
      returns:
        description: Si la fenêtre est visible par l’utilisateur.
    isModal:
      returns:
        description: Si la fenêtre active est une fenêtre modale.
    maximize:
      description: >-
        Agrandit la fenêtre. Cela montrera également (mais pas d’accent) la fenêtre si elle n’est pas déjà affiché.
    unmaximize:
      description: Unmaximizes la fenêtre.
    isMaximized:
      returns:
        description: Si la fenêtre est agrandie.
    minimize:
      description: >-
        Minimise la fenêtre. Sur certaines plateformes la fenêtre réduite apparaît dans le Dock.
    restore:
      description: Restaure la fenêtre d’État réduite à son état précédent.
    isMinimized:
      returns:
        description: Si la fenêtre est réduite.
    setFullScreen:
      description: Définit si la fenêtre doit être en mode plein écran.
    isFullScreen:
      returns:
        description: Si la fenêtre est en mode plein écran.
    setAspectRatio:
      description: >-
        Cela va faire une fenêtre de maintenir un ratio d’aspect. La taille supplémentaire permet à un développeur d’avoir l’espace, spécifiée en pixels, non inclus dans le calcul des proportions. Cette API prend déjà en compte la différence entre la taille de la fenêtre et sa taille du contenu. Pensez à une fenêtre normale avec un lecteur vidéo HD et les contrôles associés. Il y a peut-être 15 pixels de contrôles sur le bord gauche, 25 pixels de contrôles sur le bord droit et 50 pixels de contrôles sous le lecteur. Afin de maintenir un ratio d’aspect 16:9 (proportions standard pour HD @1920 x 1080) dans le lecteur lui-même nous appellerions cette fonction avec les arguments de 16/9 et [40, 50]. Le deuxième argument ne tient pas où la largeur supplémentaire et hauteur au sein de l’affichage de contenu--seulement qu’ils existent. Juste une somme toute zones largeur et hauteur supplémentaires, que vous avez au sein de l’affichage du contenu dans l’ensemble.
      parameters:
        aspectRatio:
          description: Les proportions de maintenir pour une partie de l’affichage du contenu.
        extraSize:
          description: >-
            La taille supplémentaire ne pas de figurer tout en conservant les proportions.
    previewFile:
      description: Utilise le coup de œil pour afficher un aperçu d’un fichier à un emplacement donné.
      parameters:
        path:
          description: >-
            Le chemin absolu vers le fichier à prévisualiser avec QuickLook. Ceci est important car le coup de œil utilise le nom de fichier et l’extension de fichier sur le chemin d’accès pour déterminer le type de contenu du fichier à ouvrir.
        displayName:
          description: >-
            Le nom du fichier à afficher sur la vue modal Quick Look. C’est purement visuel et n’affecte pas le type de contenu du fichier. Par défaut, « chemin ».
    closeFilePreview:
      description: Ferme le panneau de Quick Look actuellement ouvert.
    setBounds:
      description: Redimensionne et déplace la fenêtre vers les limites fournies
    setContentBounds:
      description: >-
        Redimensionne et déplace la zone cliente de la fenêtre (par exemple, la page web) vers les limites fournies.
    setSize:
      description: Redimensionne la fenêtre à la largeur et la hauteur.
    getSize:
      returns:
        description: Contient la largeur et la hauteur de la fenêtre.
    setContentSize:
      description: >-
        Redimensionne la zone cliente de la fenêtre (par exemple, la page web) à la largeur et la hauteur.
    getContentSize:
      returns:
        description: Contient la largeur et la hauteur de la zone de la fenêtre client.
    setMinimumSize:
      description: Définit la taille minimale de la fenêtre à la largeur et la hauteur.
    getMinimumSize:
      returns:
        description: Contient la largeur minimale et la hauteur de la fenêtre.
    setMaximumSize:
      description: Définit la taille maximale de la fenêtre à la largeur et la hauteur.
    getMaximumSize:
      returns:
        description: Contient la hauteur et la largeur maximale de la fenêtre.
    setResizable:
      description: Définit si la fenêtre peut être redimensionnée manuellement par l’utilisateur.
    isResizable:
      returns:
        description: Si la fenêtre peut être redimensionnée de manuellement par l’utilisateur.
    setMovable:
      description: Définit si la fenêtre peut être déplacée par l’utilisateur. Sous Linux, il ne fait rien.
    isMovable:
      description: Sur Linux retourne toujours true.
      returns:
        description: Si la fenêtre peut être déplacée par l’utilisateur.
    setMinimizable:
      description: >-
        Définit si la fenêtre peut être minimisée manuellement par l’utilisateur. Sous Linux, il ne fait rien.
    isMinimizable:
      description: Sur Linux retourne toujours true.
      returns:
        description: Si la fenêtre peut être manuellement réduite par utilisateur
    setMaximizable:
      description: >-
        Définit si la fenêtre peut être agrandie manuellement par l’utilisateur. Sous Linux, il ne fait rien.
    isMaximizable:
      description: Sur Linux retourne toujours true.
      returns:
        description: Si la fenêtre peut être agrandie de manuellement par l’utilisateur.
    setFullScreenable:
      description: >-
        Définit si le bouton Agrandir/zoom de la fenêtre active/désactive le mode plein écran ou agrandit la fenêtre.
    isFullScreenable:
      returns:
        description: >-
          Si le bouton Agrandir/zoom de la fenêtre active/désactive le mode plein écran ou agrandit la fenêtre.
    setClosable:
      description: >-
        Définit si la fenêtre peut être fermée manuellement par l’utilisateur. Sous Linux, il ne fait rien.
    isClosable:
      description: Sur Linux retourne toujours true.
      returns:
        description: Si la fenêtre peut être fermée de manuellement par l’utilisateur.
    setAlwaysOnTop:
      description: >-
        Définit si la fenêtre doit afficher toujours au-dessus des autres fenêtres. Après ce réglage, la fenêtre est toujours une fenêtre normale, pas une fenêtre de la boîte à outils qui ne peut pas se concentrer sur.
      parameters:
        level:
          description: >-
            Les valeurs incluent « normale », « flottant », « déchiré-hors-menu », « panneau modal », « menu principal », « statut », « pop-up-menu », « économiseur d’écran » et (Deprecated). La valeur par défaut est « flottantes ». Consultez le pour plus de détails.
        relativeLevel:
          description: >-
            Le nombre de couches supérieures pour définir cette fenêtre par rapport à la donnée « niveau ». La valeur par défaut est '0'. Notez que Apple décourage la définition des niveaux supérieurs à 1 ci-dessus « économiseur d’écran ».
    isAlwaysOnTop:
      returns:
        description: Si la fenêtre est toujours au-dessus des autres fenêtres.
    center:
      description: Déplace la fenêtre vers le centre de l’écran.
    setPosition:
      description: Déplace la fenêtre à x et y.
    getPosition:
      returns:
        description: Contient la position actuelle de la fenêtre.
    setTitle:
      description: Remplace le titre de la fenêtre native par titre.
    getTitle:
      description: >-
        Remarque : Le titre de page web peut être différent du titre de la fenêtre native.
      returns:
        description: Le titre de la fenêtre native.
    setSheetOffset:
      description: >-
        Modifie le point d’attache des feuilles sur macOS. Par défaut, les plaques sont fixées juste en dessous de la fenêtre frame, mais vous pouvez les afficher sous une barre d’outils de rendu HTML. Par exemple :
    flashFrame:
      description: Démarre ou arrête de clignoter la fenêtre pour attirer l’attention de l’utilisateur.
    setSkipTaskbar:
      description: Rend la fenêtre s’affiche ne pas dans la barre des tâches.
    setKiosk:
      description: Entre ou quitte le mode kiosk.
    isKiosk:
      returns:
        description: Si la fenêtre est en mode kiosk.
    getNativeWindowHandle:
      description: >-
        Le type natif de la poignée est HWND sur Windows, NSView * sur macOS et fenêtre (unsigned long) sur Linux.
      returns:
        description: Handle de la fenêtre spécifique à la plateforme.
    hookWindowMessage:
      description: >-
        Crochets à un message windows. Le rappel est appelé lorsque le message est reçu dans le WndProc.
    isWindowMessageHooked:
      returns:
        description: true ou false selon si le message est accroché.
    unhookWindowMessage:
      description: Décrocher le message de fenêtre.
    unhookAllWindowMessages:
      description: Déconnecte tous les messages de fenêtre.
    setRepresentedFilename:
      description: >-
        Définit le chemin d’accès du fichier la fenêtre représente, et l’icône du fichier apparaîtra dans la barre de titre de la fenêtre.
    getRepresentedFilename:
      returns:
        description: Le chemin d’accès du fichier que représente la fenêtre.
    setDocumentEdited:
      description: >-
        Spécifie si le document de la fenêtre a été édité, et l’icône dans la barre de titre deviendra gris lorsque défini à true.
    isDocumentEdited:
      returns:
        description: Si le document de la fenêtre a été édité.
    capturePage:
      description: 'Identique à webContents.capturePage ([rect,] rappel).'
      parameters:
        rect:
          description: Les limites de capture
    loadURL:
      description: >-
        Identique à webContents.loadURL (url [, options]). L’url peut être une adresse distante (par exemple http://) ou le chemin d’un fichier HTML local en utilisant le protocole file://. Pour s’assurer que l’URL de fichier est correctement mis en forme, il est recommandé d’utiliser la méthode url.format du nœud : vous pouvez charger une URL en utilisant une requête POST avec des données codées URL en procédant comme suit :
      parameters:
        options:
          properties:
            httpReferrer:
              description: Une url HTTP Referrer.
            userAgent:
              description: Un agent utilisateur provenant de la demande.
            extraHeaders:
              description: En-têtes supplémentaires séparés par « \n »
            baseURLForDataURL:
              description: >-
                Url (avec séparateur de chemin d’accès arrière) pour les fichiers à charger par l’url des données de base. Cela est nécessaire uniquement si l’url spécifiée est une url de données et a besoin de charger les autres fichiers.
    reload:
      description: Identique à webContents.reload.
    setMenu:
      description: >-
        Définit le menu barre de menu de la fenêtre la, paramètre à null supprime la barre de menus.
    setProgressBar:
      description: >-
        Ensembles d’étape valeur dans la barre de progression. Plage valide s’étend [0, 1.0]. Supprimer les progrès bar quand progrès < 0 ; Changement de mode pour une période indéterminée quelle progression > 1. Sur Linux plate-forme, prend uniquement en charge les environnement de bureau Unity, vous devez spécifier le nom du fichier.Desktop au champ desktopName dans package.json. Par défaut, elle assumera app.getName () .desktop. Sous Windows, un mode peut être passé. Les valeurs acceptées sont none, normal, pour une période indéterminée, erreur et fait une pause. Si vous appelez setProgressBar sans un ensemble de mode (mais avec une valeur dans la plage valide), normal sera assumé.
      parameters:
        options:
          properties:
            mode:
              description: >-
                Mode pour la barre de progression. Peut être none, normal, pour une période indéterminée, erreur, ou en pause.
    setOverlayIcon:
      description: >-
        Définit une superposition de 16 x 16 pixels sur l’icône de barre des tâches actuelles, généralement utilisée pour exprimer une sorte d’état de la demande ou passivement notifier l’utilisateur.
      parameters:
        overlay:
          description: >-
            l’icône à afficher dans le coin inférieur droit de l’icône de la barre des tâches. Si ce paramètre a « null », la superposition est effacée
        description:
          description: une description qui sera fournie aux lecteurs d’écran accessibilité
    setHasShadow:
      description: >-
        Définit si la fenêtre doit avoir une ombre. Sur Windows et Linux, il ne fait rien.
    hasShadow:
      description: Sur Windows et Linux retourne toujours true.
      returns:
        description: Si la fenêtre a une ombre.
    setThumbarButtons:
      description: >-
        Ajouter une barre d’outils miniature avec un ensemble de boutons à la vignette d’une fenêtre dans une disposition de boutons de barre des tâches. Retourne qu'un objet Boolean indique si la vignette a été ajoutée avec succès. Le nombre de boutons dans la barre d’outils miniature doit être pas plu de 7 en raison de la faible marge de manœuvre. Une fois que vous installer la barre d’outils miniature, la barre d’outils ne peut être enlevé en raison de la limitation de la plate-forme. Mais vous pouvez appeler l’API avec un tableau vide pour nettoyer les boutons. Les boutons sont un tableau d’objets Button : les drapeaux sont un tableau qui peut inclure des suite de chaînes :
      returns:
        description: Si les boutons ont été ajoutés avec succès
    setThumbnailClip:
      description: >-
        Affecte la zone de la fenêtre pour montrer que l’image miniature affichée lors du survol de la fenêtre dans la barre des tâches. Vous pouvez réinitialiser la vignette pour être la fenêtre entière en spécifiant une région vide : {x : 0, y : 0, largeur : 0, hauteur : 0}.
      parameters:
        region:
          description: Région de la fenêtre
    setThumbnailToolTip:
      description: >-
        Définit l’info-bulle qui s’affiche lors du survol de la vignette de fenêtre dans la barre des tâches.
    setAppDetails:
      description: >-
        Définit les propriétés de bouton de barre des tâches de la fenêtre. Remarque : relaunchCommand et relaunchDisplayName doivent toujours être réglés ensemble. Si une de ces propriétés n’est pas définie, aucun va être utilisé.
      parameters:
        options:
          properties:
            appId:
              description: >-
                Fenêtre. Il doit être réglé, sinon les autres options n’auront aucun effet.
            appIconPath:
              description: Fenêtre.
            appIconIndex:
              description: >-
                Index de l’icône dans appIconPath. Ignoré lors de l’appIconPath n’est pas définie. Valeur par défaut est 0.
            relaunchCommand:
              description: Fenêtre.
            relaunchDisplayName:
              description: Fenêtre.
    showDefinitionForSelection:
      description: Identique à webContents.showDefinitionForSelection().
    setIcon:
      description: Icône de changements de fenêtre.
    setAutoHideMenuBar:
      description: >-
        Définit si la barre de menus de fenêtre doit se cacher automatiquement. Une fois définie la barre de menu affiche uniquement lorsque les utilisateurs enfoncent la touche Alt unique. Si la barre de menu est déjà visible, setAutoHideMenuBar(true) appelant ne cacher immédiatement.
    isMenuBarAutoHide:
      returns:
        description: Si la barre de menu automatiquement se cache.
    setMenuBarVisibility:
      description: >-
        Définit si la barre de menus doit être visible. Si la barre de menu est cacher, utilisateurs peuvent toujours afficher la barre de menu en appuyant sur la touche Alt unique.
    isMenuBarVisible:
      returns:
        description: Si la barre de menu est visible.
    setVisibleOnAllWorkspaces:
      description: >-
        Définit si la fenêtre doit être visible sur tous les espaces de travail. Remarque : Cette API ne fait rien sur Windows.
    isVisibleOnAllWorkspaces:
      description: 'Remarque : Cette API retourne toujours false sous Windows.'
      returns:
        description: Si la fenêtre est visible sur tous les espaces de travail.
    setIgnoreMouseEvents:
      description: >-
        Rend la fenêtre ignore tous les événements de souris. Tous les événements souris qui s’est passé dans cette fenêtre sera passé à la fenêtre en dessous de cette fenêtre, mais si cette fenêtre a le focus, il recevra encore des événements de clavier.
    setContentProtection:
      description: >-
        Le contenu de la fenêtre empêche d’être capturé par d’autres applications. Sur macOS, il définit sharingType de la NSWindow à NSWindowSharingNone. Sous Windows, il appelle SetWindowDisplayAffinity avec WDA_MONITOR.
    setFocusable:
      description: Change si la fenêtre peut se concentrer.
    setParentWindow:
      description: >-
        Parent de séries comme fenêtre de parent de la fenêtre actuelle, en passant null fenêtre actuelle deviendra une fenêtre de niveau supérieur.
    getParentWindow:
      returns:
        description: La fenêtre parente.
    getChildWindows:
      returns:
        description: Toutes les fenêtres enfants.
    setAutoHideCursor:
      description: Détermine s’il faut masquer le curseur lors de la saisie.
    setVibrancy:
      description: >-
        Ajoute un effet de dynamisme à la fenêtre du navigateur. En passant la valeur null ou une chaîne vide va supprimer l’effet de vibration sur la fenêtre.
      parameters:
        type:
          description: >-
            Peut être « axée sur l’aspect », « light », « dark », « titlebar », « sélection », « menu », « kangourou », « sidebar », « medium-light » ou « ultra dark ». Consultez le pour plus de détails.
    setTouchBar:
      description: >-
        Définit la disposition de la barre pour la fenêtre active. Spécifier null ou undefined efface la barre tactile. Cette méthode n’a d’effet si la machine dispose d’un bar tactile et fonctionne sur macOS 10.12.1+. Note : L’API de la barre est actuellement expérimental et peut changer ou être supprimées à l’avenir de presse électronique.
    setBrowserView:
      description: >-
        Note : L’API BrowserView est actuellement expérimental et peut changer ou être supprimées à l’avenir de presse électronique.
  instanceProperties:
    webContents:
      description: >-
        Un objet WebContents est propriétaire de cette fenêtre. Toutes les pages web liées des événements et des opérations seront effectuées par elle. Consultez la documentation de webContents pour ses méthodes et les événements.
    id:
      description: Un entier représentant l’ID unique de la fenêtre.
  instanceEvents:
    page-title-updated:
      description: >-
        Émis lorsque le document a changé son titre, appelant Event.preventDefault () empêchera le titre de la fenêtre native de changer.
    close:
      description: >-
        Émis lorsque la fenêtre va être fermé. Il est émis avant la beforeunload et événement unload de la DOM. appelant Event.preventDefault () annulera la clôture. Généralement, vous ne souhaitez pas utiliser le gestionnaire de beforeunload pour décider si la fenêtre doit être fermée, qui est également appelé lorsque la fenêtre est rechargée. En électronique, retournant une valeur quelconque autre que l’indéfini annulerait la clôture. Par exemple :
    closed:
      description: >-
        Émis lorsque la fenêtre est fermée. Après avoir reçu cet événement, vous devez supprimer la référence à la fenêtre et ne pas l’utiliser plus.
    session-end:
      description: >-
        Émis lorsque la fenêtre session va se terminer en raison de la force shutdown ou machine redémarrer ou session se déconnectent.
    unresponsive:
      description: Émis lorsque la page web cesse de répondre.
    responsive:
      description: Émis lorsque la page web sur laquelle redevient sensible.
    blur:
      description: Émis lorsque la fenêtre perd le focus.
    focus:
      description: Émis lorsque la fenêtre obtient le focus.
    show:
      description: Émis lorsque la fenêtre est affichée.
    hide:
      description: Émis lorsque la fenêtre est masquée.
    ready-to-show:
      description: >-
        Émis lorsque la page web a été rendue (tout en n’est ne pas affiché) et la fenêtre peut être affiché sans flash visuel.
    maximize:
      description: Émis lorsque la fenêtre est agrandie.
    unmaximize:
      description: Émis lorsque la fenêtre quitte un état maximisé.
    minimize:
      description: Émis lorsque la fenêtre est réduite.
    restore:
      description: Émis lorsque la fenêtre est restaurée à partir d’un État réduit.
    resize:
      description: Émis lorsque la fenêtre est redimensionnée.
    move:
      description: >-
        Émis lorsque la fenêtre est déplacée vers une nouvelle position. Remarque : Sous macOS cet événement est simplement un alias de déplacé.
    moved:
      description: Émis une fois lorsque la fenêtre est déplacée vers une nouvelle position.
    enter-full-screen:
      description: Émis lorsque la fenêtre passe à un état de plein écran.
    leave-full-screen:
      description: Émis lorsque la fenêtre laisse un état de plein écran.
    enter-html-full-screen:
      description: >-
        Émis lorsque la fenêtre entre dans un état de plein écran, déclenché par l’API HTML.
    leave-html-full-screen:
      description: >-
        Émis lorsque la fenêtre laisse un État plein écran déclenché par l’API HTML.
    app-command:
      description: >-
        Émis lorsqu’un App de commande est appelée. Ceux-ci sont généralement liées aux touches du clavier multimédia ou commandes de navigateur, ainsi que le bouton « Back » intégré dans certaines souris sur Windows. Commandes sont en minuscules, caractères de soulignement sont remplacés par des traits d’Union, et le préfixe APPCOMMAND_ est dépouillé. par exemple, APPCOMMAND_BROWSER_BACKWARD est émis sous forme de navigateur-vers l’arrière.
    scroll-touch-begin:
      description: Émis lorsque l’événement scroll de la roue phase a commencé.
    scroll-touch-end:
      description: Émis lorsque le défilement roue événement la phase est terminée.
    scroll-touch-edge:
      description: >-
        Émis lorsque la phase événement de défilement roue déposée en arrivant au bord de l’élément.
    swipe:
      description: >-
        Émis sur le balayage à 3 doigts. Orientations possibles sont haut, droite, bas, gauche.
    sheet-begin:
      description: Émis lorsque la fenêtre s’ouvre une feuille.
    sheet-end:
      description: Émis lorsque la fenêtre a fermé une feuille.
BrowserWindowProxy:
  description: Manipuler la fenêtre enfant
  instanceMethods:
    blur:
      description: Supprime focus à partir de la fenêtre enfant.
    close:
      description: Avec force, ferme la fenêtre enfant sans appeler l’événement unload.
    eval:
      description: Évalue le code dans la fenêtre enfant.
    focus:
      description: Porte la fenêtre enfant (apporte la fenêtre à l’avant).
    print:
      description: Appelle la boîte de dialogue Imprimer sur la fenêtre enfant.
    postMessage:
      description: >-
        Envoie un message à la fenêtre enfant dont l’origine est spécifié ou * pour aucune préférence d’origine. En plus de ces méthodes, la fenêtre enfant implémente window.opener objet avec pas de propriétés et une méthode unique.
  instanceProperties:
    closed:
      description: Valeur booléenne qui a la valeur true après obtient la fermeture de la fenêtre enfant.
Certificate:
  properties:
    data:
      description: Données PEM codé
    issuer:
      description: Principal de l’émetteur
    issuerName:
      description: Nom commun de l’émetteur
    issuerCert:
      description: Émetteur de certificat (si ce n’est auto-signé)
    subject:
      description: Principal sujet
    subjectName:
      description: Nom commun du sujet
    serialNumber:
      description: Chaîne de valeur hexadécimale représenté
    validStart:
      description: Date de début du certificat faisant foi en quelques secondes
    validExpiry:
      description: Date de fin du certificat faisant foi en quelques secondes
    fingerprint:
      description: Empreinte digitale du certificat
CertificatePrincipal:
  properties:
    commonName:
      description: Nom commun
    organizations:
      description: Noms de l’Organisation
    organizationUnits:
      description: Noms d’unité organisation
    locality:
      description: Localité
    state:
      description: État ou province
    country:
      description: Pays ou région
ClientRequest:
  description: Faire des requêtes HTTP/HTTPS.
  constructorMethod:
    parameters:
      - 
        description: >-
          Si « options » est une chaîne, il est interprété comme l’URL de la demande. Si c’est un objet, il est prévu pour spécifier complètement une requête HTTP via les propriétés suivantes :
  instanceMethods:
    setHeader:
      description: >-
        Ajoute un en-tête HTTP supplémentaire. Le nom de l’en-tête sera publié tel quel sans minuscules. Elle peut être appelée uniquement avant la première écriture. Appeler cette méthode après que la première écriture lèvera une erreur. Si la valeur passée n’est pas une chaîne, on s’appellera sa méthode ToString pour obtenir la valeur finale.
      parameters:
        name:
          description: Un nom d’en-tête HTTP supplémentaire.
        value:
          description: Une valeur d’en-tête HTTP supplémentaire.
    getHeader:
      description: Retourne un objet - la valeur d’un nom d’en-tête supplémentaire précédemment définie.
      parameters:
        name:
          description: Spécifier un nom d’en-tête supplémentaire.
    removeHeader:
      description: >-
        Supprime un nom d’en-tête supplémentaire précédemment définie. Cette méthode peut être appelée uniquement avant la première écriture. Essayer de l’appeler après que la première écriture lèvera une erreur.
      parameters:
        name:
          description: Spécifier un nom d’en-tête supplémentaire.
    write:
      description: >-
        callback est essentiellement une fonction factice introduite dans le but de garder la similitude avec l’API de Node.js. Il est appelée de façon asynchrone au battement suivant après morceau contenu ont été livrés à la couche réseau de chrome. Contrairement à l’implémentation de Node.js, il n’est pas garanti que morceau contenu ont été vidées sur le fil avant de rappel est appelée. Ajoute un segment de données pour le corps de la requête. La première opération d’écriture peut causer les en-têtes de demande à paraître sur le fil. Après la première opération d’écriture, il n’est pas autorisé à ajouter ou supprimer un en-tête personnalisé.
      parameters:
        chunk:
          description: >-
            Un segment de données de l’organisme de la demande. Si c’est une chaîne, il est converti en un tampon à l’aide du codage spécifié.
        encoding:
          description: >-
            Utilisé pour convertir des morceaux de chaîne en objets de mémoire tampon. Par défaut, « utf-8'.
        callback:
          description: Appelée après la fin de l’opération d’écriture.
    end:
      description: >-
        Envoie le dernier morceau de données de la demande. Ne pourront pas les opérations ultérieures d’écriture ou à la fin. L’événement de finition est émis juste après l’opération de fin.
    abort:
      description: >-
        Annule une transaction HTTP en cours. Si la demande a déjà émis l’événement close, l’opération de démolition n’a aucun effet. Dans le cas contraire un événement en cours émettra abort et fermer les événements. En outre, s’il y a un objet de réponse en cours, il émettra l’événement avorté.
    followRedirect:
      description: >-
        Continue de toute demande de redirection différé lorsque le mode de redirection est manuels.
  instanceProperties:
    chunkedEncoding:
      description: >-
        Valeur booléenne spécifiant si la requête utilise HTTP segmenté codage ou non de transfert. Par défaut, false. La propriété est en lecture et en écriture, cependant elle peut être définie uniquement avant la première opération sous les en-têtes HTTP d’écriture ne sont pas encore mis sur le fil. Essayant de définir la propriété de chunkedEncoding après que la première écriture lèvera une erreur. En utilisant le codage mémorisé en bloc est fortement recommandé si vous avez besoin d’envoyer un corps de la grande demande que les données seront diffusées en interne en petits morceaux au lieu d’être mis en mémoire tampon à l’intérieur de la mémoire du processus électronique.
  instanceEvents:
    response:
      returns:
        response:
          description: Objet qui représente le message de réponse HTTP.
    login:
      description: >-
        Émis lorsqu’un proxy d’authentification demande des informations d’identification utilisateur. La fonction de rappel devrait être rappelé avec informations d’identification utilisateur : fournissant des informations d’identification vides annule la demande et signaler une erreur d’authentification sur l’objet response :
    finish:
      description: >-
        Émis juste après que le dernier morceau de données de la requête ont été écrites dans l’objet de la demande.
    abort:
      description: >-
        Émis lorsque la demande est abandonnée. L’événement abort ne sera pas déclenché si la demande est déjà fermée.
    error:
      description: >-
        Émis lorsque le module net ne parvient pas à émettre une demande de réseau. Généralement, lorsque l’objet de requête émet un événement d’erreur, un événement close suivront par la suite et aucun objet de réponse ne sera fournie.
      returns:
        error:
          description: objet error fournissant des informations sur l’échec.
    close:
      description: >-
        Émis sous forme de la dernière épreuve dans l’opération de requête-réponse HTTP. L’événement close indique qu’aucun autre événement ne retentit sur les objets de la demande ou de réponse.
    redirect:
      description: >-
        Émis lorsque la redirection et le mode est manuels. Appel request.followRedirect se poursuivra avec la redirection.
clipboard:
  description: Effectuer de copier et coller dans le presse-papiers système.
  methods:
    readText:
      returns:
        description: Le contenu dans le presse-papiers en tant que texte brut.
    writeText:
      description: Écrit le texte dans le presse-papiers au format texte brut.
    readHTML:
      returns:
        description: Le contenu du presse-papiers dans le balisage.
    writeHTML:
      description: Écrit le balisage dans le presse-papiers.
    readImage:
      returns:
        description: Le contenu de l’image dans le presse-papiers.
    writeImage:
      description: Écrit image dans le presse-papiers.
    readRTF:
      returns:
        description: Le contenu dans le presse-papiers au format RTF.
    writeRTF:
      description: Écrit le texte dans le presse-papiers en RTF.
    readBookmark:
      description: >-
        Retourne un objet qui contient les clés titre et l’url représentant le signet dans le presse-papiers. Les valeurs du titre et l’url sera chaînes vides lorsque le signet n’est pas disponible.
    writeBookmark:
      description: >-
        Écrit le titre et l’url dans le presse-papiers comme signet. Remarque : La plupart des applications sur Windows ne supportent pas coller signets en eux afin que vous pouvez utiliser clipboard.write pour écrire un signet et secours texte dans le presse-papiers.
    readFindText:
      returns:
        description: >-
          Le texte sur la table de montage de trouver. Cette méthode utilise la CIB synchrone lors du processus de rendu. La valeur mise en cache est relue à partir de la table de montage de trouver chaque fois que l’application est activée.
    writeFindText:
      description: >-
        Écrit le texte dans la table de montage de trouver en texte brut. Cette méthode utilise la CIB synchrone lors du processus de rendu.
    clear:
      description: Efface le contenu du presse-papiers.
    availableFormats:
      returns:
        description: Tableau de formats pris en charge pour le type de presse-papiers.
    has:
      returns:
        description: Si le presse-papiers prend en charge le format spécifié.
    read:
      returns:
        description: Lectures de format type à partir du presse-papiers.
    readBuffer:
      returns:
        description: Lectures de format type à partir du presse-papiers.
    write:
      description: Écrit les données dans le presse-papiers.
      parameters:
        data:
          properties:
            bookmark:
              description: Le titre de l’url dans le texte.
contentTracing:
  description: |-
    Collecter les données de traçage de module de contenu de chrome pour trouver les goulots d’étranglement et les opérations lentes.
  methods:
    getCategories:
      description: >-
        Obtenir un ensemble de groupes de catégories. Les groupes de catégories peuvent changer lorsque les nouveaux chemins de code sont atteints. Une fois que tous les processus enfants ont reconnu la getCategories demande le rappel est appelée avec un tableau des groupes de catégories.
    startRecording:
      description: >-
        Démarrer l’enregistrement sur tous les processus. Enregistrement commence immédiatement localement et de manière asynchrone le processus enfants dès qu’ils reçoivent la demande EnableRecording. Le rappel sera appelé une fois que tous les processus enfants ont reconnu la demande startRecording. categoryFilter est un filtre pour contrôler quels groupes de catégorie doit être tracé. Un filtre peut avoir une option - préfixe pour exclure les groupes de catégories qui contiennent une catégorie correspondante. Ayant les exclus et les modèles de la catégorie dans la liste même ne sont pas pris en charge. Exemples : traceOptions contrôle quel genre de suivi est activé, c’est une liste séparée par des virgules. Les options possibles sont : les 3 premières options sont des modes d’enregistrement de trace et par conséquent mutuellement exclusives. Si plus d’un enregistrement de trace modes apparaître dans la chaîne traceOptions, le dernier d'entre eux est prioritaire. Si la trace modes d’enregistrement sont pas spécifiés, le mode d’enregistrement est dossier-jusqu’au-complet. L’option trace se réinitialisera tout d’abord à l’option par défaut (record_mode valeur record-jusqu'à-complet, enable_sampling et enable_systrace la valeur false) avant l’appliquent des options analysées à partir de traceOptions là-dessus.
    stopRecording:
      description: >-
        Arrêter l’enregistrement sur tous les processus. Processus fils généralement mettre en cache les données de trace et que rarement rincer et renvoyer les données de suivi vers le processus principal. Ceci aide à minimiser la charge de l’exécution de reconstituer l’historique depuis l’envoi de données de trace sur IPC peut être une opération coûteuse. Alors, pour terminer le traçage, nous devons demander de façon asynchrone tous les processus enfants de vider les données de trace en attente. Une fois que tous les processus enfants ont reconnu la demande stopRecording, rappel sera appelé avec un fichier qui contient les données tracées. Données de trace sont écrites en resultFilePath s’il n’est pas vide ou dans un fichier temporaire. Le chemin d’accès du fichier réel sera passé au rappel s’il n’est pas null.
    startMonitoring:
      description: >-
        Démarrer le contrôle sur tous les processus. Surveillance commence immédiatement localement et de manière asynchrone le processus enfants dès qu’ils reçoivent la demande startMonitoring. Une fois que tous les processus enfants ont reconnu la startMonitoring demande le rappel sera appelée.
    stopMonitoring:
      description: >-
        Arrêter la surveillance sur tous les processus. Une fois que tous les processus enfants ont reconnu la stopMonitoring demande que le rappel est appelé.
    captureMonitoringSnapshot:
      description: >-
        Téléchargez les données tracées surveillance actuelles. Processus fils généralement mettre en cache les données de trace et que rarement rincer et renvoyer les données de suivi vers le processus principal. C’est parce qu’il peut être une opération coûteuse pour envoyer les données de trace au cours de la CIB et nous aimerions éviter d’inutile DUREE au-dessus de traçage. Alors, pour terminer le traçage, nous devons demander de façon asynchrone tous les processus enfants de vider les données de trace en attente. Une fois que tous les processus enfants ont reconnu que la captureMonitoringSnapshot demande le rappel sera appelée avec un fichier qui contient les données tracées.
    getTraceBufferUsage:
      description: >-
        Obtenir le maximum d’utilisation dans les processus de la mémoire tampon de trace en pourcentage de l’État à part entière. Lorsque la valeur de TraceBufferUsage est déterminée le rappel est appelé.
Cookie:
  properties:
    name:
      description: Le nom du cookie.
    value:
      description: La valeur du cookie.
    domain:
      description: Le domaine du cookie.
    hostOnly:
      description: Si le cookie est un cookie hôte uniquement.
    path:
      description: Le chemin d’accès du cookie.
    secure:
      description: Si le cookie est marqué comme sécurisé.
    httpOnly:
      description: Si le cookie est marqué comme HTTP uniquement.
    session:
      description: >-
        Si le cookie est un cookie de session ou un cookie persistant avec une date d’expiration.
    expirationDate:
      description: >-
        La date d’expiration du cookie comme le nombre de secondes depuis l’époque UNIX. Pas prévu pour les cookies de session.
Cookies:
  description: Interroger et modifier les cookies de la session.
  instanceMethods:
    get:
      description: >-
        Envoie une demande pour obtenir tous les cookies correspondants détails, rappel s’appellera avec rappel (erreur, biscuits) sur complet. cookies est un tableau d’objets cookie.
      parameters:
        filter:
          properties:
            url:
              description: >-
                Récupère les cookies qui sont associés à des url. Vide implique la récupération des cookies de toutes les URL.
            name:
              description: Filtre cookies par nom.
            domain:
              description: >-
                Récupère les cookies dont les domaines correspondent ou sont des sous-domaines de domaines
            path:
              description: Récupère les cookies dont le chemin correspond à chemin d’accès.
            secure:
              description: Filtre cookies par leur propriété sécurisée.
            session:
              description: Filtre session ou les cookies persistants.
    set:
      description: >-
        Définit un cookie avec détails, rappel s’appellera avec callback(error) sur complet.
      parameters:
        details:
          properties:
            url:
              description: L’url pour associer le cookie avec.
            name:
              description: Le nom du cookie. Vide par défaut en cas d’omission.
            value:
              description: La valeur du cookie. Vide par défaut en cas d’omission.
            domain:
              description: Le domaine du cookie. Vide par défaut en cas d’omission.
            path:
              description: Le chemin d’accès du cookie. Vide par défaut en cas d’omission.
            secure:
              description: >-
                Si le cookie doit être marqué comme sécurisé. Par défaut, false.
            httpOnly:
              description: >-
                Si le cookie doit être marqué comme HTTP uniquement. Par défaut, false.
            expirationDate:
              description: >-
                La date d’expiration du cookie comme le nombre de secondes depuis l’époque UNIX. Si omis le cookie devient alors un cookie de session et n’est pas retenu entre les sessions.
    remove:
      description: >-
        Supprime les cookies correspondant url et nom, callback seront appelé avec callback() complet.
      parameters:
        url:
          description: L’URL associée le cookie.
        name:
          description: Le nom du cookie à supprimer.
    flushStore:
      description: Écrit toutes les données des cookies non écrites sur le disque.
  instanceEvents:
    changed:
      description: >-
        Émis lorsqu’un cookie est changé car il a été ajouté, édité, enlevé ou a expiré.
      returns:
        cookie:
          description: Le cookie qui a été changé
        cause:
          description: 'La cause du changement avec l’une des valeurs suivantes :'
        removed:
          description: '« true » si le cookie a été supprimé, à « false » dans le cas contraire.'
CPUUsage:
  properties:
    percentCPUUsage:
      description: >-
        Pourcentage de CPU utilisé depuis le dernier appel à getCPUUsage. Premier appel retourne 0.
    idleWakeupsPerSecond:
      description: >-
        Le nombre de moyenne ralenti UC réveils par seconde depuis le dernier appel à getCPUUsage. Premier appel retourne 0.
crashReporter:
  description: Soumettre des rapports d’incident sur un serveur distant.
  methods:
    start:
      description: >-
        Vous êtes tenu d’appeler cette méthode avant d’utiliser n’importe quel autre crashReporter API et dans chaque processus (principal/renderer) d'où vous souhaitez collecter les rapports d’incidents. Vous pouvez passer des options différentes à crashReporter.start lors de l’appel de différents processus. Note les procédés enfant créés via le module child_process n’auront pas accès à des modules de l’électron. Par conséquent, pour collecter les rapports d’incident, utilisez process.crashReporter.start. Passer les mêmes options que précédemment avec un crashesDirectory appelé un supplémentaire qui doit pointer vers un répertoire pour stocker les rapports d’incidents temporairement. Vous pouvez tester cela en appelant process.crash() pour bloquer le processus enfant. Remarque : Pour collecter les rapports d’incidents de processus enfant dans Windows, vous devez ajouter ce code supplémentaire aussi bien. Cela démarrera le processus qui surveillera et envoyer les rapports d’incidents. Remplacer submitURL, productName et crashesDirectory avec les valeurs appropriées. Remarque : Si vous devez envoyer supplémentaires/mise à jour des paramètres supplémentaires après le démarrage de votre premier appel, vous peuvent appeler setExtraParameter sur macOS ou appelez start à nouveau avec les nouveau/mise à jour des paramètres supplémentaires sous Linux et Windows. Note : Sous macOS, électron emploie un nouveau client de grimpes pour accident de collecte et de transmission. Si vous souhaitez activer les rapports d’accident, initialisation grimpes du processus principal à l’aide de crashReporter.start est nécessaire quel que soit le processus qui vous souhaitez collecter s’écrase depuis. Une fois initialisé de cette façon, le gestionnaire de grimpes recueille accidents de tous les processus. Vous devez toujours appeler crashReporter.start du processus de rendu ou enfant, sinon plantages d’eux vont obtenir signalés sans companyName, productName ou toute information supplémentaire.
      parameters:
        options:
          properties:
            submitURL:
              description: URL qui crash rapports sera envoyé à titre de poste.
            productName:
              description: Par défaut, app.getName().
            uploadToServer:
              description: >-
                Si les rapports d’incidents doivent être envoyés au serveur par défaut sont true.
            ignoreSystemCrashHandler:
              description: Valeur par défaut est false.
            extra:
              description: >-
                Un objet, que vous pouvez définir qui sera envoyé avec le rapport. Seules les propriétés de chaîne sont envoyées correctement. Objets imbriqués ne sont pas pris en charge.
    getLastCrashReport:
      description: >-
        Retourne la date et l’ID du dernier rapport d’accident. Si aucun rapport d’accident n’ont été envoyés ou le reporter de l’accident n’a pas été démarré, la valeur null est retournée.
    getUploadedReports:
      description: >-
        Retourne tous les rapports d’incidents téléchargés. Chaque rapport contient la date et téléchargées ID.
    getUploadToServer:
      description: 'Remarque : Cette API peut être appelée uniquement depuis le processus principal.'
      returns:
        description: >-
          Si les rapports doivent être soumis au serveur. La valeur par le biais de la méthode start ou setUploadToServer.
    setUploadToServer:
      description: >-
        Cela serait normalement contrôlée par les préférences de l’utilisateur. Cela n’a aucun effet si appelée avant départ. Remarque : Cette API peut être appelée uniquement depuis le processus principal.
      parameters:
        uploadToServer:
          description: Si les rapports doivent être soumis au serveur
    setExtraParameter:
      description: >-
        Ensemble un paramètre supplémentaire pour définir sera envoyé avec le rapport d’accident. Les valeurs indiquées ici vont enverra en outre à des valeurs définies par l’option supplémentaire lorsque le départ a été appelé. Cette API est uniquement disponible sur Mac OS, si vous devez ajouter/mettre à jour des paramètres supplémentaires sous Linux et Windows après que votre premier appel pour commencer, vous pouvez appeler recommencer avec les options supplémentaires mis à jour.
      parameters:
        key:
          description: Touche de paramètre.
        value:
          description: >-
            Valeur du paramètre. Spécifiant « null » ou « undefined » supprime la clé de paramètres supplémentaires.
Debugger:
  description: Un transport alternatif pour le protocole de débogage distant de Chrome.
  instanceMethods:
    attach:
      description: Attacher le débogueur à le webContents.
      parameters:
        protocolVersion:
          description: Demandé le débogage version de protocole.
    isAttached:
      returns:
        description: Si un débogueur est attaché à la webContents.
    detach:
      description: Détache le débogueur de le webContents.
    sendCommand:
      description: Envoi de confier le commandement à la cible de débogage.
      parameters:
        method:
          description: >-
            Nom de la méthode, devrait être une des méthodes définies par le protocole de débogage distant.
        commandParams:
          description: Objet JSON avec les paramètres de la requête.
        callback:
          description: Réponse
          parameters:
            error:
              description: Message d’erreur indiquant l’échec de la commande.
            result:
              description: >-
                Réponse définie par l’attribut de « retours » de la description de la commande dans le protocole de débogage distant.
  instanceEvents:
    detach:
      description: >-
        Émis lorsque la session de débogage se termine. Cela produit lorsque webContents est fermé ou devtools est invoqué pour la webContents ci-joint.
      returns:
        reason:
          description: Motif de retrait de débogueur.
    message:
      description: Émis chaque fois que l’événement d’instrumentation questions cible de débogage.
      returns:
        method:
          description: Nom de la méthode.
        params:
          description: >-
            Paramètres d’événement définis par l’attribut « paramètres » dans le protocole de débogage distant.
desktopCapturer:
  description: |-
    Accéder aux informations sur les sources de médias qui peut être utilisé pour capturer l’audio et la vidéo à partir du Bureau à l’aide de l’API de navigator.webkitGetUserMedia.
  methods:
    getSources:
      description: >-
        Commence à recueillir des informations sur toutes les sources de médias de fonds disponibles et appelle le rappel (erreur, sources) quand fini. des sources est un tableau d’objets DesktopCapturerSource, chaque DesktopCapturerSource représente un écran ou une fenêtre individuelle qui peut être capturée.
      parameters:
        options:
          properties:
            types:
              description: >-
                Un tableau de chaînes qui répertorie les types de sources de fonds à types capturés, disponibles sont écran et fenêtre.
            thumbnailSize:
              description: >-
                La taille que le média source vignette doit être ajustée aux. Valeur par défaut est de 150 x 150.
DesktopCapturerSource:
  properties:
    id:
      description: >-
        L’identificateur d’une fenêtre ou un écran qui peut être utilisé comme une contrainte chromeMediaSourceId lors de l’appel [navigator.webkitGetUserMedia]. Le format de l’identifiant sera fenêtre : XX ou écran : XX, où XX est un nombre aléatoire généré.
    name:
      description: >-
        Une source de l’écran sera nommée <index> totalité de l’écran ou l’écran, tandis que le nom d’une source de la fenêtre correspond au titre de la fenêtre.
    thumbnail:
      description: >-
        Une image miniature. Il n’y a aucune garantie que la taille de la miniature est identique à la thumbnailSize spécifiée dans les options passées à desktopCapturer.getSources. La taille réelle dépend de l’échelle de l’écran ou la fenêtre.
dialog:
  description: 'Afficher les boîtes de dialogue système natif pour ouvrir et enregistrer des fichiers, alerte, etc..'
  methods:
    showOpenDialog:
      description: >-
        L’argument browserWindow permet à la boîte de dialogue pour s’attacher à une fenêtre parente, rendant modale. Les filtres spécifie un tableau de types de fichiers qui peuvent être affichés ou sélectionnés lorsque vous souhaitez limiter l’utilisateur à un type spécifique. Par exemple : le tableau d’extensions devrait contenir les extensions sans caractères génériques ou des points (par exemple « png » est bon, mais « .png » et « * .png ' sont mauvais). Pour afficher tous les fichiers, utilisez le ' *' wildcard (aucun autre caractère générique n’est pris en charge). Si un rappel est passé, l’appel de l’API sera asynchrone et le résultat sera passé par l’intermédiaire de callback(filenames) Remarque : sous Windows et Linux une boîte de dialogue Ouvrir ne peuvent pas être aussi bien un sélecteur de fichier et un sélecteur de répertoire, donc si vous définissez des propriétés de [« openFile », « openDirectory »] sur ces plates-formes, un sélecteur de répertoire sera montré.
      parameters:
        options:
          properties:
            buttonLabel:
              description: >-
                Étiquette faite sur commande pour le bouton de confirmation, lorsque laissé vide l’étiquette par défaut sera utilisé.
            properties:
              description: >-
                Contient qui présente la boîte de dialogue doit utiliser. Les valeurs suivantes sont prises en charge :
            message:
              description: Message à afficher au-dessus des zones de saisie.
        callback:
          parameters:
            filePaths:
              description: Un tableau de chemins d’accès choisi par l’utilisateur
      returns:
        description: >-
          , un tableau de chemins d’accès choisi par l’utilisateur, si le rappel est fourni, il retourne la valeur undefined.
    showSaveDialog:
      description: >-
        L’argument browserWindow permet à la boîte de dialogue pour s’attacher à une fenêtre parente, rendant modale. Les filtres spécifie un tableau de types de fichiers qui peuvent être affichés, consultez dialog.showOpenDialog pour obtenir un exemple. Si un rappel est passé, l’appel de l’API sera asynchrone et le résultat sera transmis via callback(filename)
      parameters:
        options:
          properties:
            buttonLabel:
              description: >-
                Étiquette faite sur commande pour le bouton de confirmation, lorsque laissé vide l’étiquette par défaut sera utilisé.
            message:
              description: Message à afficher au-dessus des champs de texte.
            nameFieldLabel:
              description: >-
                Étiquette personnalisée pour le texte affiché devant la zone de texte nom de fichier.
            showsTagField:
              description: 'Afficher la zone de saisie de balises, la valeur par défaut true.'
      returns:
        description: >-
          , le chemin d’accès du fichier choisi par l’utilisateur, si un rappel est fourni, il retourne la valeur undefined.
    showMessageBox:
      description: >-
        Affiche une boîte de message, qu'il bloquera le processus jusqu'à ce que la boîte de message est fermée. Il retourne l’index du bouton cliqué. L’argument browserWindow permet à la boîte de dialogue pour s’attacher à une fenêtre parente, rendant modale. Si un rappel est passé, l’appel de l’API sera asynchrone et le résultat sera passé par l’intermédiaire de callback(response).
      parameters:
        options:
          properties:
            type:
              description: >-
                Peut être « none », « info », « erreur », « question » ou « avertissement ». Sous Windows, « question » affiche l’icône même comme « info », sauf si vous affectez une icône à l’aide de l’option « icône ». Sur macOS, « avertissement » et « error » affichent l’icône d’avertissement même.
            buttons:
              description: >-
                Tableau des textes pour les boutons. Sous Windows, un tableau vide se traduira par un bouton intitulé « OK ».
            defaultId:
              description: >-
                Index du bouton du tableau de boutons qui seront sélectionnées par défaut lorsque la boîte de message s’ouvre.
            title:
              description: 'Titre de la boîte de message, certaines plates-formes n’affiche pas elle.'
            message:
              description: Contenu de la boîte de message.
            detail:
              description: Informations supplémentaires du message.
            checkboxLabel:
              description: >-
                Si fourni, la boîte de message comprendra une case avec l’étiquette donnée. L’état de la case à cocher soit visitable uniquement lorsque vous utilisez le rappel.
            checkboxChecked:
              description: État activé initial de la case à cocher. false par défaut.
            cancelId:
              description: >-
                L’index du bouton pour être utilisé pour annuler la boîte de dialogue, via la touche ÉCHAP. Cela est affecté par défaut sur la première case avec « annuler » ou « non », comme l’étiquette. Si aucuns ces boutons marqués n’existent et cette option n’est pas définie, 0 servira la réponse retour de valeur ou de rappel. Sous Windows, cette option est ignorée.
            noLink:
              description: >-
                Sur Windows électron va essayer de savoir qui d'entre les boutons sont des boutons communs (comme « Annuler » ou « Oui ») et les autres comme des liens de la commande afficher dans la boîte de dialogue. Cela peut rendre la boîte de dialogue apparaisse dans le style des applications modernes de Windows. Si vous n’aimez pas ce comportement, vous pouvez définir noLink sur true.
            normalizeAccessKeys:
              description: >-
                Normaliser les touches d’accès clavier plates-formes. Valeur par défaut est false. Permettre ceci suppose & est utilisé dans les étiquettes des boutons pour le placement de la clé d’accès de raccourci clavier et étiquettes seront convertis en sorte qu’ils fonctionnent correctement sur chaque plate-forme, & caractères sont supprimés sur macOS, converti en _ sur Linux et Windows il reste intacte. Par exemple, une étiquette de bouton de Vie & w sera transformée en Vie_w sur Linux et vue sur macOS et peut être sélectionnée via Alt-W sur Windows et Linux.
        callback:
          parameters:
            response:
              description: L’index du bouton sur lequel l’utilisateur a cliqué
            checkboxChecked:
              description: >-
                L’état activé de la case à cocher si checkboxLabel a été défini. Sinon false.
      returns:
        description: >-
          , l’index du bouton cliqué, si un rappel est fourni, il retourne la valeur undefined.
    showErrorBox:
      description: >-
        Affiche une boîte de dialogue modale qui affiche un message d’erreur. Cette API peut être appelée en toute sécurité avant l’événement ready le module app émet, il est généralement utilisé pour signaler les erreurs aux premiers stades du démarrage.  Si l’appelé avant l’app readyevent sur Linux, le message sera émis vers stderr, et aucune boîte de dialogue GUI n’apparaîtra.
      parameters:
        title:
          description: Le titre à afficher dans la boîte d’erreur
        content:
          description: Le contenu de texte à afficher dans la boîte d’erreur
    showCertificateTrustDialog:
      description: >-
        Sur macOS, il affiche une boîte de dialogue modale qui affiche un message et certificat d’informations et donne à l’utilisateur la possibilité de faire confiance/importation du certificat. Si vous fournissez un argument de browserWindow la boîte de dialogue sera attaché à la fenêtre parente, rendant modale. Sous Windows, les options sont plus limitées, en raison de l’API Win32 utilisé :
      parameters:
        options:
          properties:
            certificate:
              description: Le certificat de confiance/importation.
            message:
              description: Le message à afficher à l’utilisateur.
Display:
  properties:
    id:
      description: Identificateur unique associé à l’affichage.
    rotation:
      description: >-
        Peut être 0, 90, 180, 270, représente la rotation de l’écran en degrés horaire.
    scaleFactor:
      description: Facteur d’échelle de pixels du périphérique de sortie.
    touchSupport:
      description: 'Peut être disponible, indisponible, inconnu.'
DownloadItem:
  description: Les téléchargements de fichiers de contrôle de sources distantes.
  instanceMethods:
    setSavePath:
      description: >-
        L’API est uniquement disponible dans la fonction de rappel de volonté-téléchargement de la session. Si l’utilisateur ne définit pas le sauver chemin via l’API, électron utilisera la routine originale pour déterminer l’enregistrement chemin (habituellement invite une sauvegarde dialogue).
      parameters:
        path:
          description: Enregistrer la valeur chemin d’accès de l’élément de téléchargement.
    getSavePath:
      returns:
        description: >-
          Save path de l’élément de téléchargement. Ce sera soit le chemin d’accès défini via downloadItem.setSavePath(path) ou le chemin d’accès sélectionné dans l’illustré enregistrer boîte de dialogue.
    pause:
      description: Met en pause le téléchargement.
    isPaused:
      returns:
        description: Si le téléchargement est suspendu.
    resume:
      description: >-
        Reprend le téléchargement qui a été suspendu. Remarque : Pour permettre la reprise des transferts le serveur que vous téléchargez à partir doit étayer les demandes de la gamme et offrir à la fois dernière modification et les valeurs d’en-tête ETag. Sinon resume() va rejeter octets reçus précédemment et redémarrer le téléchargement depuis le début.
    canResume:
      description: Reprend Boolean - si le téléchargement peut reprendre.
    cancel:
      description: Annule l’opération de téléchargement.
    getURL:
      returns:
        description: L’url d’origine où l’élément est téléchargé à partir.
    getMimeType:
      returns:
        description: Les fichiers de type miment.
    hasUserGesture:
      returns:
        description: Si le téléchargement a mouvement utilisateur.
    getFilename:
      description: >-
        Remarque : Le nom de fichier n’est pas toujours le même que celui réel enregistré dans le disque local. Si l’utilisateur modifie le nom du fichier enregistrer boîte de dialogue du téléchargement a incité, le nom réel du fichier enregistré sera différent.
      returns:
        description: Le nom de fichier de l’élément de téléchargement.
    getTotalBytes:
      description: 'Si on ne connaît pas la taille, elle retourne 0.'
      returns:
        description: La taille totale en octets de la question du téléchargement.
    getReceivedBytes:
      returns:
        description: Les octets reçus de la question du téléchargement.
    getContentDisposition:
      returns:
        description: Le champ Content-Disposition de l’en-tête de réponse.
    getState:
      description: >-
        Remarque : Les méthodes suivantes sont utiles spécifiquement pour reprendre un élément annulé au redémarrage de session.
      returns:
        description: >-
          L’état actuel. Peut progresser, terminé, annulé ou interrompu.
    getURLChain:
      returns:
        description: L’ensemble de la chaîne url de l’élément, y compris les redirections.
    getLastModifiedTime:
      returns:
        description: Valeur de l’en-tête Last-Modified.
    getETag:
      returns:
        description: Valeur de l’en-tête ETag.
    getStartTime:
      returns:
        description: Nombre de secondes depuis l’époque UNIX, quand le téléchargement a été commencé.
  instanceEvents:
    updated:
      description: >-
        Émis lorsque le téléchargement a été mis à jour et ne se fait pas. L’État peut être une des manières suivantes :
    done:
      description: >-
        Émis lorsque le téléchargement est dans un état terminal. Cela comprend un téléchargement terminé, un téléchargement annulé (via downloadItem.cancel()) et téléchargement interrompu qui ne peut être reprise. L’État peut être une des manières suivantes :
globalShortcut:
  description: Détecter les événements de clavier lorsque l’application n’a pas le focus clavier.
  methods:
    register:
      description: >-
        Enregistre un raccourci global d’accélérateur. Le rappel est appelé lorsque vous appuyez sur le raccourci enregistré par l’utilisateur. Lorsque l’accélérateur est déjà pris par d’autres applications, cet appel échouera silencieusement. Ce comportement est prévu par les systèmes d’exploitation, car ils ne veulent pas des applications pour se battre pour des raccourcis globaux.
    isRegistered:
      description: >-
        Lorsque l’accélérateur est déjà pris par d’autres applications, cet appel retournera toujours false. Ce comportement est prévu par les systèmes d’exploitation, car ils ne veulent pas des applications pour se battre pour des raccourcis globaux.
      returns:
        description: Si cette application est enregistré accélérateur.
    unregister:
      description: Annule l’inscription du raccourci global d’accélérateur.
    unregisterAll:
      description: Annule l’inscription de tous les raccourcis globaux.
IncomingMessage:
  description: Gérer les réponses aux requêtes HTTP/HTTPS.
  instanceProperties:
    statusCode:
      description: Entier indiquant le code d’état de réponse HTTP.
    statusMessage:
      description: Une chaîne qui représente le message d’état HTTP.
    headers:
      description: >-
        Objet qui représente les en-têtes de réponse HTTP. L’objet des en-têtes est formaté comme suit :
    httpVersion:
      description: >-
        Une chaîne indiquant le numéro de version du protocole HTTP. Valeurs typiques sont « 1.0 » ou « 1.1 ». En outre, httpVersionMajor et httpVersionMinor sont deux valeurs entières lisibles propriétés qui retournent respectivement les numéros de version principale et secondaire de HTTP.
    httpVersionMajor:
      description: Entier indiquant le numéro de version majeure du protocole HTTP.
    httpVersionMinor:
      description: Entier indiquant le numéro de version secondaire du protocole HTTP.
  instanceEvents:
    data:
      description: >-
        L’événement de données est la méthode habituelle de transfert des données de réponse dans le code applicatif.
      returns:
        chunk:
          description: Un segment de données de corps de réponse.
    end:
      description: Indique que le corps de réponse est terminée.
    aborted:
      description: >-
        Émis lorsqu’une requête a été annulée lors d’une transaction HTTP en cours.
    error:
      description: >-
        erreur - tient généralement une chaîne d’erreur identifiant les causes d’échec. Émis lorsqu’une erreur s’est produite alors que le streaming d’événements de données de réponse. Par exemple, si le serveur ferme sous-jacent alors que la réponse est toujours en streaming, un événement d’erreur retentit sur l’objet de réponse et un événement close suivront par la suite l’objet de la demande.
IOCounters:
  properties:
    readOperationCount:
      description: Le nombre d’e/s opérations de lecture.
    writeOperationCount:
      description: Le nombre d’opérations d’écriture e/s.
    otherOperationCount:
      description: Ensuite nombre d’e/s autres opérations.
    readTransferCount:
      description: Le nombre d’e/s lire transferts.
    writeTransferCount:
      description: Le nombre d’e/s écrire des transferts.
    otherTransferCount:
      description: Ensuite nombre d’e/s autres transferts.
ipcMain:
  description: Communiquer de manière asynchrone du processus principal aux processus de rendu.
  methods:
    'on':
      description: >-
        Ecoutes au canal, lorsqu’un nouveau message arrive auditeur s’appellerait avec écouteur (événement, args...).
    once:
      description: >-
        Ajoute un temps la fonction d’écouteur pour l’événement. Cet écouteur est invoqué que la prochaine fois qu'un message est envoyé sur le canal, après quoi il est supprimé.
    removeListener:
      description: >-
        Supprime l’écouteur spécifié du tableau de l’écouteur pour le canal spécifié.
    removeAllListeners:
      description: 'Supprime tous les écouteurs, ou ceux de la chaîne spécifiée.'
ipcRenderer:
  description: Communiquer de manière asynchrone d’un processus de rendu pour le processus principal.
  methods:
    'on':
      description: >-
        Ecoutes au canal, lorsqu’un nouveau message arrive auditeur s’appellerait avec écouteur (événement, args...).
    once:
      description: >-
        Ajoute un temps la fonction d’écouteur pour l’événement. Cet écouteur est invoqué que la prochaine fois qu'un message est envoyé sur le canal, après quoi il est supprimé.
    removeListener:
      description: >-
        Supprime l’écouteur spécifié du tableau de l’écouteur pour le canal spécifié.
    removeAllListeners:
      description: 'Supprime tous les écouteurs, ou ceux de la chaîne spécifiée.'
    send:
      description: >-
        Envoyer un message au processus principal de façon asynchrone via le canal, vous pouvez également envoyer des arguments arbitraire. Arguments sont sérialisés en JSON en interne et par conséquent aucune fonction ou la chaîne de prototype ne sera inclus. Le processus principal gère par l’écoute des canaux avec le module ipcMain.
    sendSync:
      description: >-
        Envoyer un message au processus principal de façon synchrone via le canal, vous pouvez également envoyer des arguments arbitraire. Arguments sont sérialisés en JSON en interne et par conséquent aucune fonction ou la chaîne de prototype ne sera inclus. Le processus principal gère par l’écoute des canaux avec le module ipcMain et répond en définir event.returnValue. Remarque : Envoi d’un message synchrone permet de bloquer le processus de rendu entier, sauf si vous savez ce que vous faites vous ne devez jamais utiliser.
    sendToHost:
      description: >-
        Comme ipcRenderer.send, mais l’événement sera envoyé à l’élément <webview> dans la page ordinateur hôte au lieu du processus principal.
JumpListCategory:
  properties:
    type:
      description: 'Une des valeurs suivantes :'
    name:
      description: 'Doit être définie si le type est custom, sinon qu''il doit être omis.'
    items:
      description: >-
        Tableau d’objets si type est tâches ou personnalisée, dans le cas contraire il devra être supprimé.
JumpListItem:
  properties:
    type:
      description: 'Une des valeurs suivantes :'
    path:
      description: 'Chemin d’accès du fichier à ouvrir, doit être défini uniquement si le type est le fichier.'
    program:
      description: >-
        Chemin d’accès du programme à exécuter, habituellement, vous devez spécifier process.execPath qui ouvre le programme en cours. Doit être défini uniquement si le type est opérationnelle.
    args:
      description: >-
        Les arguments de ligne de commande lors de l’exécution du programme. Doit être défini uniquement si le type est opérationnelle.
    title:
      description: >-
        Le texte à afficher pour l’élément dans la liste de raccourcis. Doit être défini uniquement si le type est opérationnelle.
    description:
      description: >-
        Description de la tâche (affichée dans une info-bulle). Doit être défini uniquement si le type est opérationnelle.
    iconPath:
      description: >-
        Le chemin d’accès absolu à une icône à afficher dans une liste de raccourcis, qui peut être un fichier de ressources arbitraires qui contient une icône (.ico, .exe, .dll). Vous pouvez généralement spécifier process.execPath pour afficher l’icône du programme.
    iconIndex:
      description: >-
        L’index de l’icône dans le fichier de ressources. Si un fichier de ressources contient des icônes multiples, que cette valeur peut être utilisée pour spécifier l’index de base zéro de l’icône qui doit être affichée pour cette tâche. Si un fichier de ressources ne contient qu’une seule icône, cette propriété doit être définie à zéro.
MemoryInfo:
  properties:
    pid:
      description: Id de processus du processus.
    workingSetSize:
      description: La quantité de mémoire actuellement épinglé à la RAM physique réelle.
    peakWorkingSetSize:
      description: >-
        La quantité maximale de mémoire qui ait jamais été épinglé à la RAM physique réelle.
    privateBytes:
      description: >-
        La quantité de mémoire non partagée par d’autres processus, tels que des tas JS ou contenu HTML.
    sharedBytes:
      description: >-
        La quantité de mémoire partagée entre processus, généralement la mémoire consommée par le code de l’électron lui-même
Menu:
  description: Créer des menus de l’application native et menus contextuels.
  staticMethods:
    setApplicationMenu:
      description: >-
        Menu des jeux comme le menu de l’application sur macOS. Sous Windows et Linux, le menu sera défini dans le menu en haut de chaque fenêtre. Valeur Null supprime la barre de menus sous Windows et Linux mais n’a aucun effet sur macOS. Remarque : Cette API doit être appelée après l’événement ready du module app.
    getApplicationMenu:
      description: >-
        Remarque : Ne supporte pas l’instance retournée de Menu dynamique ajout ou la suppression d’éléments de menu. Propriétés de l’instance peuvent encore être modifiées dynamiquement.
      returns:
        description: 'Le menu de l’application, si défini, ou null, si pas définie.'
    sendActionToFirstResponder:
      description: >-
        Envoie l’action à la première intervention d’application. Il est utilisé pour imiter les comportements de menu de Mac OS par défaut. Normalement, vous utiliseriez simplement la propriété role d’un MenuItem. Voir le Guide de la gestion des événements en cacao de macOS pour plus d’informations sur actions native des macOS.
    buildFromTemplate:
      description: >-
        En règle générale, le modèle est juste une panoplie d’options pour la construction d’un MenuItem. L’utilisation peut être référencée ci-dessus. Vous pouvez également joindre des autres champs de l’élément du modèle, et ils deviendront des propriétés des éléments de menu construite.
  instanceMethods:
    popup:
      description: Ce menu apparaît comme un menu contextuel dans le browserWindow.
      parameters:
        browserWindow:
          description: Valeur par défaut est la fenêtre ciblée.
        options:
          properties:
            x:
              description: Valeur par défaut est la position actuelle du curseur de la souris.
            'y':
              description: (si x est utilisé) Valeur par défaut est la position actuelle du curseur de la souris.
            async:
              description: >-
                La valeur true pour avoir ce retour de la méthode appelé immédiatement, false pour retourner après que le menu a été sélectionné ou fermé. Par défaut, false.
            positioningItem:
              description: >-
                Index de l’élément de menu pour être positionné sous le curseur de la souris aux coordonnées spécifiées. Valeur par défaut est -1.
    closePopup:
      description: Ferme le menu contextuel dans le browserWindow.
      parameters:
        browserWindow:
          description: Valeur par défaut est la fenêtre ciblée.
    append:
      description: Ajoute menuItem dans le menu.
    insert:
      description: Insère le menuItem à la position pos du menu.
  instanceProperties:
    items:
      description: >-
        Un MenuItem [] tableau contenant les éléments du menu. Chaque Menu se compose de multiples MenuItems et chaque MenuItem peut avoir un sous-menu.
MenuItem:
  description: Ajouter des éléments aux menus de l’application native et menus contextuels.
  constructorMethod:
    parameters:
      - 
        properties:
          - 
            description: >-
              S’appellera avec clic (menuItem, browserWindow, événements) lorsque vous cliquez sur l’élément de menu.
          - 
            description: >-
              Définir l’action de l’élément de menu lorsqu’il est spécifié à que la propriété de clic sera ignorée. Voir.
          - 
            description: Peut être normal, séparateur, sous-menu, checkbox ou radio.
          - null
          - null
          - null
          - null
          - 
            description: Si la valeur false, l’élément de menu sera être grisé out et unclickable.
          - 
            description: Si la valeur false, l’élément de menu sera entièrement cachée.
          - 
            description: Doit uniquement être fourni pour les éléments de menu de type checkbox ou radio.
          - 
            description: |2-
                      
              Should be specified for submenu type menu items. If submenu is specified, the type: '« sous-menu » peut être omis. Si la valeur n’est pas un Menu, alors il sera automatiquement converti en un à l’aide de Menu.buildFromTemplate.'
          - 
            description: >-
              Unique au sein d’un seul menu. Si défini, puis il peut être utilisé comme une référence à cet article par l’attribut position.
          - 
            description: >-
              Ce champ permet de définir à grain fin l’emplacement précis d’un menu donné.
  instanceProperties:
    enabled:
      description: >-
        Une valeur booléenne qui indique si l’élément est activé, cette propriété peut être modifiée dynamiquement.
    visible:
      description: >-
        Valeur booléenne indiquant si l’élément est visible, cette propriété peut être modifiée dynamiquement.
    checked:
      description: >-
        Une valeur booléenne qui indique si l’élément est coché, cette propriété peut être modifiée dynamiquement. Un élément de menu case va basculer la propriété checked sous et hors tension lorsque sélectionné. Un élément de menu radio se met en marche sa propriété checked lorsque vous cliquez dessus et s’éteint cette propriété pour tous les éléments adjacents dans le même menu. Vous pouvez ajouter une fonction de clic pour comportement supplémentaire.
    label:
      description: Une chaîne qui représente l’étiquette visible les éléments du menu
    click:
      description: Une fonction qui est déclenchée lorsque le MenuItem reçoit un événement de clic
MimeTypedBuffer:
  properties:
    mimeType:
      description: Le type MIME de la mémoire tampon que vous envoyez
    data:
      description: Le contenu réel de la mémoire tampon
nativeImage:
  description: 'Créer le bac, le dock et les icônes d’application à l’aide de fichiers PNG ou JPG.'
  methods:
    createEmpty:
      description: Crée une instance vide de la NativeImage.
    createFromPath:
      description: >-
        Crée une nouvelle instance de NativeImage partir d’un fichier situé au chemin d’accès. Cette méthode retourne une image vide si le chemin d’accès n’existe pas, ne peut pas être lu ou n’est pas une image valide.
    createFromBuffer:
      description: Crée une nouvelle instance de NativeImage de mémoire tampon.
      parameters:
        options:
          properties:
            width:
              description: Requis pour les tampons d’image bitmap.
            height:
              description: Requis pour les tampons d’image bitmap.
            scaleFactor:
              description: Par défaut de 1,0.
    createFromDataURL:
      description: Crée une nouvelle instance de NativeImage de dataURL.
NativeImage:
  description: 'En mode natif envelopper les images comme bac, station d’accueil et d’icônes d’application.'
  instanceMethods:
    toPNG:
      parameters:
        options:
          properties:
            scaleFactor:
              description: Par défaut de 1,0.
      returns:
        description: Une mémoire tampon qui contient l’image PNG de données codées.
    toJPEG:
      parameters:
        quality:
          description: () Entre 0 100.
      returns:
        description: Une mémoire tampon qui contient l’image JPEG de données codées.
    toBitmap:
      parameters:
        options:
          properties:
            scaleFactor:
              description: Par défaut de 1,0.
      returns:
        description: Une mémoire tampon qui contient une copie des données de pixels de l’image bitmap brutes.
    toDataURL:
      parameters:
        options:
          properties:
            scaleFactor:
              description: Par défaut de 1,0.
      returns:
        description: L’URL des données de l’image.
    getBitmap:
      description: >-
        La différence entre getBitmap() et toBitmap() est, getBitmap() ne copie pas les données de bitmap, il faut utiliser de la mémoire tampon retournée immédiatement dans actuel événement boucle battement, sinon les données pourraient être modifiées ou détruites.
      parameters:
        options:
          properties:
            scaleFactor:
              description: Par défaut de 1,0.
      returns:
        description: Une mémoire tampon qui contient les données de pixels de l’image bitmap brutes.
    getNativeHandle:
      description: >-
        Notez que le pointeur retourné est faible pointeur vers l’image native sous-jacente au lieu d’une copie, donc vous devez vous assurer que l’instance de nativeImage associée est maintenue autour.
      returns:
        description: >-
          Une mémoire tampon qui stocke C pointeur vers un handle natif sous-jacent de l’image. Sur macOS, un pointeur vers l’instance de NSImage seront retourné.
    isEmpty:
      returns:
        description: Si l’image est vide.
    setTemplateImage:
      description: Marque l’image comme une image de modèle.
    isTemplateImage:
      returns:
        description: Si l’image est une image de modèle.
    crop:
      parameters:
        rect:
          description: La zone de l’image à recadrer
      returns:
        description: L’image recadrée.
    resize:
      description: >-
        Si seulement la hauteur ou la largeur sont spécifiées puis les proportions actuelles seront préservées dans l’image redimensionnée.
      parameters:
        options:
          properties:
            width:
              description: Par défaut, à la largeur de l’image.
            height:
              description: Valeurs par défaut à la hauteur de l’image
            quality:
              description: >-
                La qualité souhaitée de l’image à redimensionner. Les valeurs possibles sont bonnes, mieux ou meilleur. La valeur par défaut est préférable. Ces valeurs expriment un compromis qualité/vitesse désirée. Ils sont traduits en une méthode spécifiques à l’algorithme qui dépend des capacités (CPU, GPU) de la plate-forme sous-jacente. Il est possible pour tous les trois méthodes pour être mappé sur le même algorithme sur une plateforme donnée.
      returns:
        description: L’image redimensionnée.
    getAspectRatio:
      returns:
        description: Ratio d’aspect de l’image.
    addRepresentation:
      description: >-
        Ajouter une représentation de l’image pour un facteur d’échelle spécifiques. Ceci peut être utilisé pour ajouter explicitement les représentations de facteur d’échelle différente à une image. Cela peut être appelée sur des images vides.
      parameters:
        options:
          properties:
            scaleFactor:
              description: Le facteur d’échelle pour ajouter la représentation de l’image pour.
            width:
              description: >-
                0 par défaut. Obligatoire si un tampon de la bitmap est spécifié comme tampon.
            height:
              description: >-
                0 par défaut. Obligatoire si un tampon de la bitmap est spécifié comme tampon.
            buffer:
              description: La mémoire tampon qui contient les données d’image raw.
            dataURL:
              description: >-
                L’URL de données qui contient soit une base 64 codé PNG ou JPEG image.
net:
  description: Émettre des requêtes HTTP/HTTPS à l’aide de la bibliothèque réseau natif de chrome
  methods:
    request:
      description: >-
        Crée une instance de ^ ClientRequest avec les options fournies directement transmis au constructeur ^ ClientRequest. La méthode net.request servirait d’émettre des requêtes HTTP sécurisés et non sécurisés selon le schéma de protocole spécifié dans l’objet options.
      parameters:
        options:
          description: Les options constructeur de « ^ ClientRequest ».
powerMonitor:
  description: Surveiller les changements d’état de puissance.
  events:
    suspend:
      description: Émis lorsque le système est suspendu.
    resume:
      description: Émis lorsque le système reprend.
    on-ac:
      description: Émis lorsque le système passe à courant alternatif.
    on-battery:
      description: Émis lorsque le système passe à la puissance de la batterie.
powerSaveBlocker:
  description: Bloquer le système de passer en mode de faible puissance (sommeil).
  methods:
    start:
      description: >-
        Prix de départ empêche le système de passer en mode de consommation réduite. Retourne un entier identifiant le pouvoir enregistrer bloqueur. Remarque : éviter-affichage-sommeil a une priorité plus élevée sur empêcher-app-suspension. Seulement le type de priorité plus élevé entre en vigueur. En d’autres termes, prévenir-affichage-sommeil est toujours prioritaire sur empêcher-app-suspension. Par exemple, une API d’appel une demande pour empêcher-app-suspension et B appelant une autre demande pour empêcher-affichage-sommeil. prévenir-affichage-sommeil sera utilisé jusqu'à ce que B s’arrête sa demande. Après cela, prévenir-app-suspension est utilisée.
      parameters:
        type:
          description: Économie d’énergie type bloqueur.
      returns:
        description: Le bloqueur ID assigné à ce bloqueur de puissance
    stop:
      description: S’arrête l’alimentation spécifié sauver bloqueur.
      parameters:
        id:
          description: Le pouvoir enregistrer id dresseur renvoyé par « powerSaveBlocker.start ».
    isStarted:
      parameters:
        id:
          description: Le pouvoir enregistrer id dresseur renvoyé par « powerSaveBlocker.start ».
      returns:
        description: Si le powerSaveBlocker correspondant a démarré.
process:
  description: Extensions pour traiter l’objet.
  methods:
    crash:
      description: Provoque le thread principal de l’écrasement de processus actuel.
    hang:
      description: Provoque le thread principal du hang processus actuel.
    setFdLimit:
      description: >-
        Jeux le soft de descripteur de fichier limite à maxDescriptors ou à la limite stricte de l’OS, selon ce qui est plus faible pour le processus en cours.
    getProcessMemoryInfo:
      description: >-
        Retourne un objet donnant des statistiques d’utilisation de mémoire sur le processus en cours. Notez que toutes les statistiques sont signalés en kilo-octets.
      returns:
        properties:
          - 
            description: La quantité de mémoire actuellement épinglé à la RAM physique réelle.
          - 
            description: >-
              La quantité maximale de mémoire qui ait jamais été épinglé à la RAM physique réelle.
          - 
            description: >-
              La quantité de mémoire non partagée par d’autres processus, tels que des tas JS ou contenu HTML.
          - 
            description: >-
              La quantité de mémoire partagée entre processus, généralement la mémoire consommée par le code de l’électron lui-même
    getSystemMemoryInfo:
      description: >-
        Retourne un objet donnant des statistiques d’utilisation de mémoire sur l’ensemble du système. Notez que toutes les statistiques sont signalés en kilo-octets.
      returns:
        properties:
          - 
            description: >-
              La quantité totale de mémoire physique en kilo-octets disponibles pour le système.
          - 
            description: >-
              La quantité totale de mémoire ne pas utilisée par les applications ou le cache disque.
          - 
            description: >-
              La quantité totale de mémoire de swap en kilo-octets disponibles pour le système.
          - 
            description: >-
              Le montant libre de mémoire swap en kilo-octets disponibles pour le système.
  events:
    loaded:
      description: >-
        Émis lorsque l’électron a chargé son script d’initialisation interne et commence à charger la page web ou le script principal. Il peut être utilisé par le script de précharge pour ajouter enlevé nœud symboles globaux en arrière à la portée globale lors de l’intégration de nœud est éteint :
  properties:
    noAsar:
      description: >-
        Valeur booléenne qui contrôle la prise en charge ASAR à l’intérieur de votre application. Ceci affectant la valeur true désactivera le soutien des archives d’asar en modules intégrés du nœud.
    type:
      description: >-
        Une chaîne qui représente le type de processus en cours, peut être « navigateur » (c.-à-d. le processus principal) ou « renderer ».
    resourcesPath:
      description: Chaîne représentant le chemin d’accès vers le répertoire de ressources.
    mas:
      description: >-
        Une valeur booléenne. Pour le build de Mac App Store, cette propriété est true, il n’est pas défini pour les autres versions.
    windowsStore:
      description: >-
        Une valeur booléenne. Si l’application s’exécute comme une application Windows Store (appx), cette propriété est true, car sinon il n’est pas défini.
    defaultApp:
      description: >-
        Une valeur booléenne. App au démarrage par le passé comme paramètre à l’application par défaut, cette propriété a la valeur true dans le processus principal, sinon il n’est pas défini.
    versions:
      properties:
        electron:
          description: Une chaîne qui représente la chaîne de version de l’électron.
        chrome:
          description: Une chaîne qui représente la chaîne de version de Chrome.
ProcessMemoryInfo:
  properties:
    pid:
      description: Id de processus du processus.
    memory:
      description: Informations sur la mémoire du processus.
protocol:
  description: S’inscrire à un protocole personnalisé et intercepter les requêtes existantes dans le protocole.
  methods:
    registerStandardSchemes:
      description: >-
        Un schéma standard adhère à ce que les RFC 3986 appelle la syntaxe générique URI. Par exemple http et https sont des systèmes standards, tandis que le fichier n’est pas. Enregistrement d’un schéma standard, permettra aux ressources relatifs et absolus à résoudre correctement lorsqu’il est servi. Sinon le système se comportera comme le protocole de fichier, mais sans la capacité de résoudre les URL relatives. Par exemple lorsque vous chargez la suite page avec un protocole personnalisé sans l’enregistrer en tant que schéma standard, l’image ne sera pas chargé parce que les régimes non standards ne peuvent pas reconnaître des URL relatives : enregistrement d’un schéma comme norme permet d’accéder aux fichiers via l’API de système de fichiers. Sinon, le moteur de rendu lèvera une erreur de sécurité pour le régime. Par de stockage par défaut web apis (localStorage, sessionStorage, webSQL, indexedDB, cookies) sont désactivées pour les régimes non standards. Donc en général si vous souhaitez inscrire un protocole personnalisé pour remplacer le protocole http, vous devez l’enregistrer comme un schéma standard : Remarque : cette méthode seulement peut être utilisée avant l’événement ready du module app obtient émis.
      parameters:
        schemes:
          description: Custom schémas d’être enregistré comme schémas standards.
        options:
          properties:
            secure:
              description: true pour enregistrer le schéma plus sécuritaire. Valeur par défaut false.
    registerServiceWorkerSchemes:
      parameters:
        schemes:
          description: Régimes de coutume à être enregistrée pour gérer les travailleurs des services.
    registerFileProtocol:
      description: >-
        Enregistre un protocole du régime qui enverra le fichier comme une réponse. Le gestionnaire sera appelé avec le gestionnaire (demande, callback) quand une demande va être créé avec le régime. fin s’appellera avec completion(null) lorsque le régime est enregistré avec succès ou completion(error) quand a échoué. Pour gérer la demande, le rappel doit être appelé avec le chemin du fichier ou un objet qui possède une propriété de chemin d’accès, par exemple callback(filePath) ou callback({path: filePath}). Lorsque le rappel est appelé avec rien, un nombre ou un objet qui possède une propriété de l’erreur, la requête échoue avec le numéro d’erreur spécifié. Pour les numéros d’erreur disponible que vous pouvez utiliser, consultez la liste d’erreurs net. Par défaut, le schéma est traité comme http :, qui est analysé différemment des protocoles qui suivent la « syntaxe générique URI » comme fichier :, alors vous voudrez probablement appeler protocol.registerStandardSchemes pour avoir votre schéma traité comme un schéma standard.
    registerBufferProtocol:
      description: >-
        Enregistre un protocole du régime qui enverra un tampon comme une réponse. L’utilisation est la même chose avec registerFileProtocol, sauf que le rappel doit être appelé avec un objet de mémoire tampon ou un objet qui possède les données, mimeType et propriétés de jeu de caractères. Exemple :
    registerStringProtocol:
      description: >-
        Enregistre un protocole du régime qui enverra une chaîne comme une réponse. L’utilisation est la même chose avec registerFileProtocol, sauf que le rappel doit être appelé avec une chaîne ou un objet qui possède les données, mimeType et propriétés de jeu de caractères.
    registerHttpProtocol:
      description: >-
        Enregistre un protocole du régime qui enverra une requête HTTP en réponse. L’utilisation est la même chose avec registerFileProtocol, sauf que le rappel doit être appelé avec un objet redirectRequest avec l’url, parrain, méthode, propriétés uploadData et session. Par défaut le HTTP demande réutilisera la session en cours. Si vous souhaitez que la demande d’avoir une session différente, que vous devez définir la session NULL. Pour les demandes POST l’objet uploadData doit être fournie.
      parameters:
        handler:
          parameters:
            callback:
              parameters:
                redirectRequest:
                  properties:
                    uploadData:
                      properties:
                        contentType:
                          description: Type MIME du contenu.
                        data:
                          description: Contenu à envoyer.
    unregisterProtocol:
      description: Annule l’enregistrement du protocole personnalisé du régime.
    isProtocolHandled:
      description: >-
        Le rappel sera appelé avec une valeur booléenne qui indique s’il existe déjà un gestionnaire pour le régime.
    interceptFileProtocol:
      description: >-
        Intercepte les protocole régime et utilise le gestionnaire comme nouveau gestionnaire du protocole, qui envoie un fichier comme une réponse.
    interceptStringProtocol:
      description: >-
        Intercepte les protocole régime et utilise le gestionnaire comme nouveau gestionnaire du protocole, qui envoie une chaîne comme une réponse.
    interceptBufferProtocol:
      description: >-
        Intercepte les protocole régime et utilise le gestionnaire comme nouveau gestionnaire du protocole, qui envoie un tampon comme une réponse.
    interceptHttpProtocol:
      description: >-
        Intercepte les protocole régime et utilise le gestionnaire comme nouveau gestionnaire du protocole, qui envoie une nouvelle demande HTTP en réponse.
      parameters:
        handler:
          parameters:
            callback:
              parameters:
                redirectRequest:
                  properties:
                    uploadData:
                      properties:
                        contentType:
                          description: Type MIME du contenu.
                        data:
                          description: Contenu à envoyer.
    uninterceptProtocol:
      description: >-
        Supprimer l’intercepteur installé pour régime et restaurer son gestionnaire d’origine.
Rectangle:
  properties:
    x:
      description: La coordonnée x de l’origine du rectangle
    'y':
      description: La coordonnée y de l’origine du rectangle
remote:
  description: Utiliser les modules de processus principal du processus de rendu.
  methods:
    require:
      description: par exemple
      returns:
        description: >-
          L’objet retourné par require(module) dans le processus principal. Résoudront les modules spécifiés par leur chemin d’accès relatif par rapport au point d’entrée du processus principal.
    getCurrentWindow:
      returns:
        description: La fenêtre à laquelle appartient cette page web.
    getCurrentWebContents:
      returns:
        description: Contenu de ce site web.
    getGlobal:
      returns:
        description: 'La variable globale de nom (par exemple global[name]) dans le processus principal.'
  properties:
    process:
      description: >-
        L’objet de processus dans le processus principal. C’est le même que remote.getGlobal('process'), mais est mis en cache.
RemoveClientCertificate:
  properties:
    type:
      description: clientCertificate.
    origin:
      description: >-
        Origine du serveur dont le certificat de client associé doit être supprimé du cache.
RemovePassword:
  properties:
    type:
      description: mot de passe.
    origin:
      description: >-
        Quelle condition, disparaît seulement les infos d’authentification associés à l’origine sinon la totalité du cache sera effacé.
    scheme:
      description: >-
        Schéma d’authentification. Peut être base, digest, ntlm, négocier. Doit être fournie si le débranchement de l’origine.
    realm:
      description: Domaine de l’authentification. Doit être fournie si le débranchement de l’origine.
    username:
      description: >-
        Informations d’identification de l’authentification. Doit être fournie si le débranchement de l’origine.
    password:
      description: >-
        Informations d’identification de l’authentification. Doit être fournie si le débranchement de l’origine.
screen:
  description: 'Récupérer des informations sur la taille de l’écran, affiche, position du curseur, etc..'
  methods:
    getCursorScreenPoint:
      description: La position absolue actuelle du pointeur de la souris.
    getPrimaryDisplay:
      returns:
        description: L’affichage principal.
    getAllDisplays:
      returns:
        description: Tableau d’affichages qui sont actuellement disponibles.
    getDisplayNearestPoint:
      returns:
        description: L’affichage le plus proche du point spécifié.
    getDisplayMatching:
      returns:
        description: L’affichage qui le croise plus étroitement les limites fournies.
  events:
    display-added:
      description: Émis lorsque le newDisplay a été ajouté.
    display-removed:
      description: Émis lorsque l’oldDisplay a été supprimé.
    display-metrics-changed:
      description: >-
        Émis lorsqu’un ou plusieurs paramètres changent dans un affichage. Le changedMetrics est un tableau de chaînes qui décrivent les modifications. Changements possibles sont limites, workArea, scaleFactor et rotation.
ScrubberItem:
  properties:
    label:
      description: Le texte apparaissent dans cet article
    icon:
      description: L’image apparaisse dans cette rubrique
SegmentedControlSegment:
  properties:
    label:
      description: Le texte apparaisse dans ce segment
    icon:
      description: L’image apparaisse dans ce segment
    enabled:
      description: 'Si ce segment est sélectionnable. Par défaut : vrai'
session:
  description: 'Gérer les sessions de navigateur, cookies, cache, les paramètres de proxy, etc..'
  methods:
    fromPartition:
      description: >-
        Si la partition commence par persist :, la page utilise une session persistante disponible à toutes les pages dans l’application avec la même partition. s’il n’y a aucun persist : préfixe, la page utilise une session en mémoire. Si la partition est vide alors la session par défaut de l’application sera retournée. Pour créer une Session avec des options, il faut s’assurer que la Session avec la partition n’a jamais été utilisée avant. Il n’y a aucun moyen de modifier les options d’un objet de Session existant.
      parameters:
        options:
          properties:
            cache:
              description: S’il faut activer le cache.
      returns:
        description: >-
          Une instance de session de chaîne de la partition. Lorsqu’il y a une Session existante avec la même partition, il sera retourné ; dans le cas contraire une nouvelle instance de Session sera créée avec des options.
  properties:
    defaultSession:
      description: 'Un objet de Session, l’objet de session par défaut de l’application.'
Session:
  description: Obtenir et définir les propriétés d’une session.
  instanceMethods:
    getCacheSize:
      description: Rappel est appelé avec la taille du cache actuel de la session.
      parameters:
        callback:
          parameters:
            size:
              description: Taille de cache utilisé en octets.
    clearCache:
      description: Efface le cache HTTP de la session.
      parameters:
        callback:
          description: Appelée lorsque l’opération est effectuée
    clearStorageData:
      description: Efface les données de stockages de web.
      parameters:
        options:
          properties:
            origin:
              description: >-
                Suive représentation scheme://host:port de window.location.origin.
            storages:
              description: >-
                Les types de stockages pour effacer, peut contenir : appcache, cookies, le système de fichiers, indexdb, localstorage, shadercache, websql, serviceworkers
            quotas:
              description: >-
                Les types de quotas pour effacer, peut contenir : temporaire, permanente, synchronisables.
        callback:
          description: Appelé lorsque l’opération est effectuée.
    flushStorageData:
      description: Écrit toutes les données DOMStorage non écrites sur le disque.
    setProxy:
      description: >-
        Définit les paramètres de proxy. Lorsque pacScript et proxyRules sont rendus ensemble, l’option proxyRules est ignorée et configuration pacScript est appliquée. Le proxyRules doit suivre les règles suivantes : par exemple : le proxyBypassRules est une liste séparée par des virgules des règles décrites ci-dessous :
      parameters:
        config:
          properties:
            pacScript:
              description: L’URL associée au fichier PAC.
            proxyRules:
              description: Règles indiquant quel proxy utiliser.
            proxyBypassRules:
              description: Règles indiquant quel URL doivent ignorer les paramètres de proxy.
        callback:
          description: Appelé lorsque l’opération est effectuée.
    resolveProxy:
      description: >-
        Résout les informations du proxy pour l’url. Le rappel s’appellera avec callback(proxy) lorsque la demande est effectuée.
    setDownloadPath:
      description: >-
        Jeux Télécharger sauvegarde répertoire. Par défaut, le répertoire de téléchargement seront les téléchargements sous le dossier app respectifs.
      parameters:
        path:
          description: L’emplacement de téléchargement
    enableNetworkEmulation:
      description: Émule de réseau avec la configuration donnée pour la session.
      parameters:
        options:
          properties:
            offline:
              description: Que ce soit émuler la panne réseau. Par défaut, false.
            latency:
              description: RTT dans le ms. par défaut est 0, ce qui permet de désactiver la limitation de temps de latence.
            downloadThroughput:
              description: >-
                Débit en bits/s. la valeur par défaut 0, ce qui permet de désactiver la limitation de téléchargement.
            uploadThroughput:
              description: >-
                Télécharger vitesse en bits/s. valeurs par défaut à 0, ce qui permet de désactiver la limitation de téléchargement.
    disableNetworkEmulation:
      description: >-
        Désactive toute émulation réseau déjà active pour la session. Réinitialise la configuration réseau original.
    setCertificateVerifyProc:
      description: >-
        Ensembles de vérifier le certificat proc de session, le proc s’appellera avec proc (demande, callback) chaque fois qu’une vérification du certificat serveur est demandée. Appel callback(0) accepte le certificat, callback(-2) appelant le rejette. Appel setCertificateVerifyProc(null) reviendra dos de certificat par défaut vérifier proc.
      parameters:
        proc:
          parameters:
            request:
              properties:
                error:
                  description: Résultat de la vérification de chrome.
            callback:
              parameters:
                verificationResult:
                  description: >-
                    Valeur peut être un des codes d’erreur de certificat de. Mis à part les codes d’erreur de certificat, les codes spéciaux suivants peuvent servir.
    setPermissionRequestHandler:
      description: >-
        Définit le gestionnaire qui peut être utilisé pour répondre aux demandes d’autorisation pour la session. Appel callback(true) permettra que la permission et le callback(false) le rejettera.
      parameters:
        handler:
          parameters:
            webContents:
              description: WebContents demandant l’autorisation.
            permission:
              description: >-
                Énumération des « médias », « géolocalisation », « notifications », « midiSysex », « pointerLock », « plein écran », « openExternal ».
            callback:
              parameters:
                permissionGranted:
                  description: Autoriser ou refuser l’autorisation
    clearHostResolverCache:
      description: Efface le cache de résolution hôte.
      parameters:
        callback:
          description: Appelé lorsque l’opération est effectuée.
    allowNTLMCredentialsForDomains:
      description: >-
        Dynamiquement définit s’il faut toujours envoyer les informations d’identification pour l’authentification HTTP NTLM ou Negotiate.
      parameters:
        domains:
          description: >-
            Une liste séparés par des virgules des serveurs pour lesquels l’authentification intégrée est activée.
    setUserAgent:
      description: >-
        Substitue l’userAgent et acceptLanguages pour cette session. L’acceptLanguages doit une virgule séparée liste ordonnée des codes de langue, par exemple « en-US, fr, de, ko, zh-CN, ja ». Ceci n’affecte pas WebContents existants, et chaque WebContents pouvez utiliser webContents.setUserAgent pour remplacer l’agent utilisateur de niveau session.
    getUserAgent:
      returns:
        description: L’agent utilisateur pour cette session.
    getBlobData:
      parameters:
        identifier:
          description: UUID valide.
        callback:
          parameters:
            result:
              description: Données BLOB.
      returns:
        description: Les données blob associées avec l’identifiant.
    createInterruptedDownload:
      description: >-
        Permet de reprendre annulé ou interrompu téléchargements depuis la Session précédente. L’API va générer un DownloadItem qui est accessible avec l’événement de volonté-téléchargement. Le DownloadItem n’aura pas tout WebContents qui lui sont associés et l’état initial sera interrompu. Le téléchargement va commencer seulement lorsque l’API de curriculum vitae est appelée sur le DownloadItem.
      parameters:
        options:
          properties:
            path:
              description: Chemin d’accès absolu du téléchargement.
            urlChain:
              description: Chaîne d’URL complète pour le téléchargement.
            offset:
              description: Début de gamme pour le téléchargement.
            length:
              description: Longueur totale du téléchargement.
            lastModified:
              description: Valeur de l’en-tête Last-Modified.
            eTag:
              description: Valeur de l’en-tête ETag.
            startTime:
              description: >-
                Temps quand le téléchargement a débuté en nombre de secondes depuis l’époque UNIX.
    clearAuthCache:
      description: Efface le cache d’authentification de la session HTTP.
      parameters:
        callback:
          description: Appelée lorsque l’opération est effectuée
  instanceProperties:
    cookies:
      description: Un objet de Cookies pour cette session.
    webRequest:
      description: Un objet WebRequest pour cette session.
    protocol:
      description: Un objet de protocole pour cette session.
  instanceEvents:
    will-download:
      description: >-
        Émis lorsque l’électron est Télécharger point dans webContents. Appel Event.preventDefault () annulera le téléchargement et point ne sera pas disponible de battement suivant du processus.
shell:
  description: Gérer des fichiers et des URL à l’aide de leurs applications par défaut.
  methods:
    showItemInFolder:
      description: 'Afficher le fichier donné dans un fichier de gestionnaire. Si possible, sélectionnez le fichier.'
      returns:
        description: Si l’élément a été démontré de façon satisfaisante
    openItem:
      description: Ouvrez le fichier donné dans la manière par défaut de l’ordinateur de bureau.
      returns:
        description: Si l’item a été correctement ouvert.
    openExternal:
      description: >-
        Ouvrez l’URL de protocole externe donné dans la manière par défaut de l’ordinateur de bureau. (Par exemple, mailto : URL de l’agent de messagerie par défaut de l’utilisateur).
      parameters:
        options:
          properties:
            activate:
              description: >-
                true pour mettre l’application ouverte à l’avant-plan. La valeur par défaut est true.
        callback:
          description: Si spécifié se produira l’ouvert de façon asynchrone.
      returns:
        description: >-
          Si une application était disponible pour ouvrir l’URL. Si le rappel est spécifiée, retourne toujours true.
    moveItemToTrash:
      description: >-
        Déplacer le fichier vers la corbeille et retourne à l’État pour l’opération booléen.
      returns:
        description: Si l’élément a été déplacé vers la corbeille
    beep:
      description: Émet le signal sonore.
    writeShortcutLink:
      description: Crée ou met à jour un lien raccourci à shortcutPath.
      parameters:
        operation:
          description: 'Par défaut est « créer », peut être une des manières suivantes :'
      returns:
        description: Si le raccourci a été créé avec succès
    readShortcutLink:
      description: >-
        Résout le lien raccourci à shortcutPath. Une exception sera levée lorsqu’une erreur se produit.
ShortcutDetails:
  properties:
    target:
      description: La cible pour lancer à partir de ce raccourci.
    cwd:
      description: Le répertoire de travail. Valeur par défaut est vide.
    args:
      description: >-
        Les arguments à appliquer pour cibler quand le lancement de ce raccourci. Valeur par défaut est vide.
    description:
      description: La description du raccourci. Valeur par défaut est vide.
    icon:
      description: >-
        Le chemin d’accès à l’icône, peut être une DLL ou un EXE. icône et iconIndex peuvent être mis ensemble. Valeur par défaut est vide, qui utilise les icône de la cible.
    iconIndex:
      description: L’ID de ressource d’icône lorsque l’icône est une DLL ou un EXE. Valeur par défaut est 0.
    appUserModelId:
      description: L’ID d’Application utilisateur modèle. Valeur par défaut est vide.
systemPreferences:
  description: Téléchargez les préférences système.
  methods:
    isDarkMode:
      returns:
        description: Si le système est en Mode Dark.
    isSwipeTrackingFromScrollEventsEnabled:
      returns:
        description: Si le coup entre pages mise en est sur.
    postNotification:
      description: >-
        Messages event comme notifications natives de macOS. L’userInfo est un objet qui contient le dictionnaire d’information utilisateur envoyé avec la notification.
    postLocalNotification:
      description: >-
        Messages event comme notifications natives de macOS. L’userInfo est un objet qui contient le dictionnaire d’information utilisateur envoyé avec la notification.
    subscribeNotification:
      description: >-
        S’abonne aux notifications natives de macOS, rappel s’appellera avec rappel (événement, userInfo) lorsque l’événement correspondant se produit. L’userInfo est un objet qui contient le dictionnaire d’information utilisateur envoyé avec la notification. L’id de l’abonné est retourné, qui peut être utilisé pour vous désabonner de l’événement. Sous le capot, que cette API est abonnée à NSDistributedNotificationCenter, les valeurs d’exemple d’événement sont :
    unsubscribeNotification:
      description: Supprime l’abonné avec l’id.
    subscribeLocalNotification:
      description: >-
        Identique à subscribeNotification, mais utilise NSNotificationCenter pour les paramètres par défaut. Cela est nécessaire pour des événements tels que NSUserDefaultsDidChangeNotification
    unsubscribeLocalNotification:
      description: >-
        Identique à unsubscribeNotification, mais supprime l’abonné NSNotificationCenter.
    getUserDefault:
      description: >-
        Obtenez la valeur de clé dans les préférences système. Cette API utilise NSUserDefaults sur macOS. Certaines clés populaires et les types sont :
      parameters:
        type:
          description: >-
            Peut être « chaîne », « boolean », « integer », « float », « double », « url », « tableau », « dictionnaire »
    setUserDefault:
      description: >-
        La valeur de clé dans les préférences système. Notez que le type doit correspondre type réel de valeur. Une exception est levée si elles ne sont pas. Cette API utilise NSUserDefaults sur macOS. Certaines clés populaires et les types sont :
      parameters:
        type:
          description: >-
            Voir [« getUserDefault »] [#systempreferencesgetuserdefaultkey-type-macos]
    isAeroGlassEnabled:
      description: >-
        Cette méthode retourne true si la composition DWM (Aero Glass) est activée et false sinon. Un exemple de l’utiliser pour déterminer si vous devez créer une fenêtre transparente ou non (fenêtres transparentes ne fonctionneront pas correctement lorsque la composition DWM est désactivée) :
    getAccentColor:
      returns:
        description: >-
          Les utilisateurs actuels large accent couleur préférences système sous forme hexadécimale RGBA.
    getColor:
      parameters:
        color:
          description: 'Une des valeurs suivantes :'
      returns:
        description: >-
          Le paramètre couleur système sous forme hexadécimale RGB (#ABCDEF). Consultez la documentation Windows pour plus de détails.
    isInvertedColorScheme:
      returns:
        description: >-
          true si un jeu de couleurs inversées, comme un thème de contraste élevé, est actif, false sinon.
  events:
    accent-color-changed:
      returns:
        newColor:
          description: >-
            La nouvelle couleur RGBA l’utilisateur affecté à leur système accent couleur.
    inverted-color-scheme-changed:
      returns:
        invertedColorScheme:
          description: >-
            « true » si un jeu de couleurs inversées, comme un thème de contraste élevé, est actuellement utilisé, « faux » dans le cas contraire.
Task:
  properties:
    program:
      description: >-
        Chemin d’accès du programme à exécuter, habituellement, vous devez spécifier process.execPath qui ouvre le programme en cours.
    arguments:
      description: Les arguments de ligne de commande lors de l’exécution du programme.
    title:
      description: La chaîne à afficher dans un JumpList.
    description:
      description: Description de cette tâche.
    iconPath:
      description: >-
        Le chemin d’accès absolu à une icône à afficher dans un JumpList, qui peut être un fichier de ressources arbitraires qui contient une icône. Vous pouvez généralement spécifier process.execPath pour afficher l’icône du programme.
    iconIndex:
      description: >-
        L’index d’icône dans le fichier de l’icône. Si un fichier d’icône se compose de deux ou plusieurs icônes, définissez cette valeur pour identifier l’icône. Si un fichier d’icône se compose d’une icône, cette valeur est 0.
ThumbarButton:
  properties:
    icon:
      description: L’icône dans la barre d’outils miniature.
    tooltip:
      description: Le texte d’info-bulle du bouton.
    flags:
      description: >-
        Certains États et comportements du bouton de commande. Par défaut, c’est un [« enabled »].
TouchBar:
  description: Créez des maquettes de barre pour des applications natives Mac OS
  staticProperties:
    TouchBarButton:
      description: Créer un bouton dans la barre de contact pour les applications natives Mac OS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: Texte du bouton.
              - 
                description: ''' Bouton couleur d’arrière-plan au format hexadécimal, c’est à dire'
              - 
                description: Icône du bouton.
              - 
                description: Peut être de gauche, de droite ou de superposition.
              - 
                description: Fonction à appeler lorsque l’utilisateur clique sur le bouton.
      instanceProperties:
        label:
          description: >-
            Chaîne représentant le texte actuel du bouton. Changer cette valeur immédiatement met à jour le bouton dans la barre de contact.
        backgroundColor:
          description: >-
            Un code hexadécimal de chaîne représentant la couleur d’arrière-plan actuelle du bouton. Changer cette valeur immédiatement met à jour le bouton dans la barre de contact.
        icon:
          description: >-
            Un NativeImage qui représente l’icône du bouton actuel. Changer cette valeur immédiatement met à jour le bouton dans la barre de contact.
    TouchBarColorPicker:
      description: Créer un sélecteur de couleur dans la barre de contact pour les applications natives Mac OS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: >-
                  Tableau de chaînes de couleur hexadécimal d’apparaître comme des couleurs possibles pour sélectionner.
              - 
                description: '« La couleur hexadécimale sélectionnée dans le sélecteur, c’est à dire'
              - 
                description: Fonction à appeler lorsqu’une couleur est sélectionnée.
                parameters:
                  - 
                    description: La couleur que l’utilisateur sélectionnée dans le sélecteur de
      instanceProperties:
        availableColors:
          description: >-
            Un tableau de String [] représentant les couleurs disponibles de la pipette pour sélectionner. Changer cette valeur immédiatement met à jour le sélecteur de couleur dans la barre de contact.
        selectedColor:
          description: >-
            Un code hexadécimal String représentant le sélecteur de couleur actuellement sélectionnée de couleur. Changer cette valeur immédiatement met à jour le sélecteur de couleur dans la barre de contact.
    TouchBarGroup:
      description: Créer un groupe dans la barre de contact pour les applications natives Mac OS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: Éléments à afficher en tant que groupe.
    TouchBarLabel:
      description: Créer une étiquette dans la barre de contact pour les applications natives Mac OS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: Texte à afficher.
              - 
                description: '« Hex couleur du texte, c’est à dire'
      instanceProperties:
        label:
          description: >-
            Chaîne représentant le texte actuel de l’étiquette. Changer cette valeur immédiatement met à jour l’étiquette dans la barre de contact.
        textColor:
          description: >-
            Un code hexadécimal de chaîne qui représente la couleur du texte actuel de l’étiquette. Changer cette valeur immédiatement met à jour l’étiquette dans la barre de contact.
    TouchBarPopover:
      description: Créer un kangourou dans la barre de contact pour les applications natives Mac OS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: Texte du bouton kangourou.
              - 
                description: Icône du bouton kangourou.
              - 
                description: Éléments à afficher dans le kangourou.
              - 
                description: >-
                  true pour afficher un bouton de fermeture sur le côté gauche du kangourou, false pour ne pas le montrer. Valeur par défaut est true.
      instanceProperties:
        label:
          description: >-
            Chaîne représentant le texte du bouton actuel du kangourou. Changer cette valeur immédiatement met à jour le kangourou dans la barre de contact.
        icon:
          description: >-
            Un NativeImage représentant l’icône du bouton actuel du kangourou. Changer cette valeur immédiatement met à jour le kangourou dans la barre de contact.
    TouchBarScrubber:
      description: Créer un épurateur (un sélecteur de défilement)
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: Un tableau d’éléments à placer dans cet épurateur
              - 
                description: >-
                  Appelée lorsque l’utilisateur clique sur un élément qui n’était pas le dernier élément taraudé
                parameters:
                  - 
                    description: L’index de l’élément, l’utilisateur a sélectionné
              - 
                description: Appelée lorsque l’utilisateur clique sur un élément quelconque
                parameters:
                  - 
                    description: L’index de l’élément touché de l’utilisateur
              - 
                description: Style de l’élément sélectionné. Valeur par défaut null.
              - 
                description: Choisis le style d’élément décoratif. Valeur par défaut null.
              - 
                description: Par défaut, false.
              - 
                description: Par défaut, à la liberté.
              - 
                description: La valeur par défaut true.
      instanceProperties:
        items:
          description: >-
            Un tableau de [] ScrubberItem représentant les éléments dans cet épurateur. Mise à jour cette valeur immédiatement met à jour la commande dans la barre de contact. Mise à jour des propriétés profondes à l’intérieur de ce tableau n’actualise pas la barre tactile.
        selectedStyle:
          description: >-
            Une chaîne qui représente le style des éléments sélectionnés dans l’épurateur doivent avoir. Mise à jour cette valeur immédiatement met à jour la commande dans la barre de contact.  Valeurs possibles :
        overlayStyle:
          description: >-
            Une chaîne qui représente le style des éléments sélectionnés dans l’épurateur doivent avoir. Ce style est superposé sur le dessus de l’élément épurateur au lieu d’être placés derrière elle. Mise à jour cette valeur immédiatement met à jour la commande dans la barre de contact.  Valeurs possibles :
        showArrowButtons:
          description: >-
            Valeur booléenne qui représente si vous souhaitez afficher les flèches gauche / droite sélection dans cet épurateur. Mise à jour cette valeur immédiatement met à jour la commande dans la barre de contact.
        mode:
          description: >-
            Une chaîne qui représente le mode de ce laveur. Mise à jour cette valeur immédiatement met à jour la commande dans la barre de contact. Valeurs possibles :
        continuous:
          description: >-
            Un booléen indiquant si cet épurateur est continue ou non. Mise à jour cette valeur immédiatement met à jour la commande dans la barre de contact.
    TouchBarSegmentedControl:
      description: >-
        Créer un contrôle segmenté (un groupe de cases), où un seul bouton a un état sélectionné
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: 'Style des segments :'
                possibleValues:
                  - 
                    description: >-
                      Par défaut. L’apparence du contrôle segmenté est déterminé automatiquement selon le type de fenêtre dans lequel le contrôle est affiché et la position dans la fenêtre.
                  - 
                    description: Le contrôle s’affiche selon le style arrondi.
                  - 
                    description: Le contrôle s’affiche selon le style arrondi texturé.
                  - 
                    description: Le contrôle s’affiche selon le style de rect ronde.
                  - 
                    description: Le contrôle s’affiche selon le style carré texturé.
                  - 
                    description: Le contrôle s’affiche selon le style capsule
                  - 
                    description: Le contrôle s’affiche selon le style petit carré.
                  - 
                    description: >-
                      Les segments du contrôle sont affichés très proches entre eux, mais pas toucher.
              - 
                description: 'Le mode de sélection du contrôle :'
                possibleValues:
                  - 
                    description: >-
                      Par défaut. Un élément sélectionné à la fois, en sélectionnant l’un désélectionne l’élément précédemment sélectionné.
                  - 
                    description: Plusieurs éléments peuvent être sélectionnés simultanément.
                  - 
                    description: >-
                      Rendre les segments agissent comme des boutons, chaque segment peut être pressé et libéré mais jamais marquée comme active.
              - 
                description: Tableau des segments de placer dans ce contrôle.
              - 
                description: >-
                  L’index du segment actuellement sélectionné, mettra à jour automatiquement avec une interaction utilisateur. Lorsque le mode est multiple il sera le dernier élément sélectionné.
              - 
                description: Appelé lorsque l’utilisateur sélectionne un nouveau segment
                parameters:
                  - 
                    description: L’indice de la portion de l’utilisateur sélectionné.
                  - 
                    description: >-
                      Qu’en conséquence de la sélection de l’utilisateur le segment est sélectionné ou non.
      instanceProperties:
        segmentStyle:
          description: >-
            Une chaîne qui représente le style de segment actuel de contrôles.  Mise à jour cette valeur immédiatement met à jour la commande dans la barre de contact.
        segments:
          description: >-
            Un tableau de [] SegmentedControlSegment qui représentent les segments dans ce contrôle.  Mise à jour cette valeur immédiatement met à jour la commande dans la barre de contact.  Mise à jour des propriétés profondes à l’intérieur de ce tableau n’actualise pas la barre tactile.
        selectedIndex:
          description: >-
            Un entier qui représente le segment sélectionné.  Changer cette valeur immédiatement met à jour la commande dans la barre de contact.  Interaction de l’utilisateur avec la barre tactile mettra à jour cette valeur automatiquement.
    TouchBarSlider:
      description: Créer un curseur dans la barre de contact pour les applications natives Mac OS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: Texte de l’étiquette.
              - 
                description: Valeur sélectionnée.
              - 
                description: Valeur minimale.
              - 
                description: Valeur maximale.
              - 
                description: Fonction à appeler lorsque le curseur est modifié.
                parameters:
                  - 
                    description: La valeur que l’utilisateur a sélectionné sur le curseur
      instanceProperties:
        label:
          description: >-
            Chaîne représentant le texte actuel du curseur. Changer cette valeur immédiatement met à jour le curseur dans la barre de contact.
        value:
          description: >-
            Un nombre qui représente la valeur actuelle du slider. Changer cette valeur immédiatement met à jour le curseur dans la barre de contact.
        minValue:
          description: >-
            Un nombre qui représente la valeur minimale actuelle du curseur. Changer cette valeur immédiatement met à jour le curseur dans la barre de contact.
        maxValue:
          description: >-
            Un nombre qui représente la valeur maximale actuelle de la descente. Changer cette valeur immédiatement met à jour le curseur dans la barre de contact.
    TouchBarSpacer:
      description: >-
        Créer une cale d’espacement entre deux éléments dans la barre de contact pour les applications natives Mac OS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: 'Taille de l’entretoise, les valeurs possibles sont :'
                possibleValues:
                  - 
                    description: Petit espace entre les éléments.
                  - 
                    description: Grand espace entre les éléments.
                  - 
                    description: Occuper tout l’espace disponible.
  instanceProperties:
    escapeItem:
      description: >-
        Le TouchBarItem qui va remplacer la touche « esc » sur la barre de toucher lorsqu’elle est définie. Paramètre à null restaure la touche « esc » par défaut. Changer cette valeur immédiatement met à jour la question de l’évasion dans la barre de contact.
Tray:
  description: Ajouter des icônes et des menus contextuels à la zone de notification du système.
  instanceMethods:
    destroy:
      description: Détruit l’icône immédiatement.
    setImage:
      description: Définit l’image associée à cette icône de la barre d’État.
    setPressedImage:
      description: Définit l’image associée à cette icône de la barre d’État lorsque vous appuyez sur macOS.
    setToolTip:
      description: Définit le texte de vol stationnaire de cette icône de la barre d’État.
    setTitle:
      description: Définit le titre affiché côté de l’icône dans la barre d’État.
    setHighlightMode:
      description: >-
        Ensembles lorsque fond d’icône de la barre d’État devient en surbrillance (en bleu). Remarque : Vous pouvez utiliser highlightMode avec un BrowserWindow en basculant entre « jamais » et « toujours » modes lorsque la visibilité de la fenêtre change.
      parameters:
        mode:
          description: 'Mode de point culminant avec l’une des valeurs suivantes :'
    displayBalloon:
      description: Affiche une bulle du plateau.
    popUpContextMenu:
      description: >-
        Ouvre le menu contextuel de l’icône de plateau. Lorsque le menu est passé, le menu s’affichera au lieu du menu contextuel de l’icône de la barre d’État. La position n’est disponible que sur Windows, et c’est (0, 0) par défaut.
      parameters:
        position:
          description: La pop-up position.
    setContextMenu:
      description: Définit le menu contextuel de cette icône.
    getBounds:
      description: Les limites de cette icône de la barre d’État en tant qu’objet.
    isDestroyed:
      returns:
        description: Si l’icône est détruit.
  instanceEvents:
    click:
      description: Émis lorsque l’utilisateur clique sur l’icône de plateau.
      returns:
        bounds:
          description: Les limites de l’icône de plateau
    right-click:
      description: Émis lorsque le clic droit sur l’icône de plateau.
      returns:
        bounds:
          description: Les limites de l’icône de plateau
    double-click:
      description: Émis lorsqu’un double clic sur l’icône de plateau.
      returns:
        bounds:
          description: Les limites de l’icône de plateau
    balloon-show:
      description: Émis lorsque le ballon de la barre d’État s’affiche.
    balloon-click:
      description: Émis lorsque l’utilisateur clique sur le ballon de la barre d’État.
    balloon-closed:
      description: >-
        Émis lorsque le ballon de la barre d’État est fermé en raison de délai d’attente ou l’utilisateur manuellement le ferme.
    drop:
      description: Émis lorsque tous les éléments déplacés sont supprimés sur l’icône.
    drop-files:
      description: Émis lorsque vous faites glisser les fichiers sont supprimés dans l’icône de plateau.
      returns:
        files:
          description: Les chemins d’accès des fichiers ignorés.
    drop-text:
      description: Émis lorsque le texte déplacé est tombé dans l’icône de plateau.
      returns:
        text:
          description: la chaîne de texte a chuté
    drag-enter:
      description: Émis lorsqu’une opération glisser entre l’icône de plateau.
    drag-leave:
      description: Émis lorsqu’une opération glisser quitte l’icône de plateau.
    drag-end:
      description: >-
        Émis lorsqu’une opération glisser se termine sur le plateau ou se termine à un autre emplacement.
UploadBlob:
  properties:
    type:
      description: objet BLOB.
    blobUUID:
      description: UUID des données blob à télécharger.
UploadData:
  properties:
    bytes:
      description: Contenu envoyé.
    file:
      description: Chemin du fichier en cours de téléchargement.
    blobUUID:
      description: UUID des données blob. Méthode permet de récupérer les données.
UploadFile:
  properties:
    type:
      description: fichier.
    filePath:
      description: Chemin d’accès du fichier à télécharger.
    offset:
      description: 0 par défaut.
    length:
      description: Nombre d’octets à lire d’offset. 0 par défaut.
    modificationTime:
      description: Dernière date de Modification en nombre du sine secondes l’époque UNIX.
UploadFileSystem:
  properties:
    type:
      description: système de fichiers.
    filsSystemURL:
      description: Url de système de fichiers pour lire les données à télécharger.
    offset:
      description: 0 par défaut.
    length:
      description: Nombre d’octets à lire d’offset. 0 par défaut.
    modificationTime:
      description: Dernière date de Modification en nombre du sine secondes l’époque UNIX.
UploadRawData:
  properties:
    type:
      description: rawData.
    bytes:
      description: Données doivent être téléchargées.
webContents:
  description: Contrôle et rendu des pages web.
  methods:
    getAllWebContents:
      returns:
        description: >-
          Un tableau de toutes les instances de WebContents. Celui-ci contiendra le contenu de web pour tous les windows, webviews, devtools ouvert et pages d’arrière-plan devtools extension.
    getFocusedWebContents:
      returns:
        description: >-
          Le contenu web qui se concentre dans cette application, sinon retourne null.
    fromId:
      returns:
        description: Une instance de WebContents avec l’ID donné.
WebContents:
  description: Afficher et contrôler le contenu d’une instance de BrowserWindow.
  instanceMethods:
    loadURL:
      description: >-
        Charge l’url dans la fenêtre. L’url doit contenir le préfixe de protocole, par exemple le http:// ou file://. Si la charge devrait contourner le cache http, utilisez l’en-tête pragma pour y parvenir.
      parameters:
        options:
          properties:
            httpReferrer:
              description: Une url HTTP Referrer.
            userAgent:
              description: Un agent utilisateur provenant de la demande.
            extraHeaders:
              description: En-têtes supplémentaires séparés par « \n »
            baseURLForDataURL:
              description: >-
                Url (avec séparateur de chemin d’accès arrière) pour les fichiers à charger par l’url des données de base. Cela est nécessaire uniquement si l’url spécifiée est une url de données et a besoin de charger les autres fichiers.
    downloadURL:
      description: >-
        Lance un téléchargement de la ressource à l’url sans avoir à naviguer. L’événement de volonté-téléchargement de session sera déclenchée.
    getURL:
      returns:
        description: L’URL de la page web actuelle.
    getTitle:
      returns:
        description: Le titre de la page web actuelle.
    isDestroyed:
      returns:
        description: Si la page web est détruit.
    isFocused:
      returns:
        description: Si la page web se concentre.
    isLoading:
      returns:
        description: Si page web se charge toujours de ressources.
    isLoadingMainFrame:
      returns:
        description: >-
          Si l’armature principale (et pas seulement iframes ou cadres qu’il contient) sont toujours le chargement.
    isWaitingForResponse:
      returns:
        description: >-
          Si la page web est en attente pour une première intervention de la principale ressource de la page.
    stop:
      description: S’arrête en attente de navigation.
    reload:
      description: Recharge la page web actuelle.
    reloadIgnoringCache:
      description: Recharge la page en cours et ignore le cache.
    canGoBack:
      returns:
        description: Si le navigateur peut revenir à la page web précédente.
    canGoForward:
      returns:
        description: Si le navigateur peut passer à la page web suivante.
    canGoToOffset:
      returns:
        description: Si la page web peut aller pour compenser.
    clearHistory:
      description: Efface l’historique de navigation.
    goBack:
      description: Rend le navigateur de retourner une page web.
    goForward:
      description: Rend le navigateur avancer d’une page web.
    goToIndex:
      description: Navigue de navigateur à l’index de la page web absolue spécifiée.
    goToOffset:
      description: Accède à l’offset spécifié à partir de l’entrée « en cours ».
    isCrashed:
      returns:
        description: Si le processus de rendu est tombé en panne.
    setUserAgent:
      description: Substitue l’agent utilisateur pour cette page web.
    getUserAgent:
      returns:
        description: L’agent utilisateur pour cette page web.
    insertCSS:
      description: Injecte CSS dans la page web actuelle.
    executeJavaScript:
      description: >-
        Évalue le code dans la page. Dans la fenêtre du navigateur, certaines APIs HTML comme requestFullScreen ne peut être invoqué par un geste de l’utilisateur. Si userGesture true supprime cette limitation. Si le résultat du code exécuté est une promesse que le résultat de rappel sera la valeur résolue de la promesse.  Nous recommandons que vous utilisiez la promesse retournée pour gérer le code qui se traduit par une promesse.
      parameters:
        userGesture:
          description: Valeur par défaut est « faux ».
        callback:
          description: Appelé après que le script a été exécuté.
      returns:
        description: >-
          Une promesse qui se résout avec le résultat du code exécuté ou est rejetée si le résultat du code est une promesse rejetée.
    setAudioMuted:
      description: Couper le son sur la page web actuelle.
    isAudioMuted:
      returns:
        description: Si cette page a été mise en sourdine.
    setZoomFactor:
      description: >-
        Le facteur de zoom modifie le facteur spécifié. Facteur de zoom est le pourcentage de zoom divisé par 100, donc 300 % = 3.0.
      parameters:
        factor:
          description: Facteur de zoom.
    getZoomFactor:
      description: >-
        Envoie une demande pour obtenir le facteur de zoom actuel, le rappel s’appellera avec callback(zoomFactor).
    setZoomLevel:
      description: >-
        Modifie le niveau de zoom jusqu’au niveau spécifié. La taille originale est de 0 et chaque incrément au-dessus ou en dessous représente zoom 20 % supérieure ou inférieure aux limites par défaut de 300 % et 50 % de la taille originale, respectivement.
      parameters:
        level:
          description: Niveau de zoom
    getZoomLevel:
      description: >-
        Envoie une demande pour obtenir le courant zoom level, le rappel s’appellera avec callback(zoomLevel).
    setZoomLevelLimits:
      description: >-
        Obsolète : Appelez setVisualZoomLevelLimits pour définir les limites de niveau de zoom visuel. Cette méthode sera supprimée dans 2.0 d’électrons.
    setVisualZoomLevelLimits:
      description: Définit le niveau maximum et minimum de pincement au-zoom.
    setLayoutZoomLevelLimits:
      description: Définit le maximum et minimum axée sur la mise en page niveau de zoom (c'est-à-dire non visuels).
    undo:
      description: Exécute l’édition annulation de commande dans la page web.
    redo:
      description: Exécute le refaire commande édition dans la page web.
    cut:
      description: Exécute la commande d’édition coupée dans la page web.
    copy:
      description: Exécute l’édition copie de commande dans la page web.
    copyImageAt:
      description: Copiez l’image à la position donnée dans le presse-papiers.
    paste:
      description: Exécute l’édition coller de commande dans la page web.
    pasteAndMatchStyle:
      description: Exécute l’édition pasteAndMatchStyle de commande dans la page web.
    delete:
      description: Exécute la commande supprimer édition dans la page web.
    selectAll:
      description: Exécute l’édition selectAll de commande dans la page web.
    unselect:
      description: Exécute la commande d’édition déselection dans la page web.
    replace:
      description: Exécute la commande édition, remplacer dans la page web.
    replaceMisspelling:
      description: Exécute l’édition replaceMisspelling de commande dans la page web.
    insertText:
      description: Insère le texte de l’élément.
    findInPage:
      description: >-
        Démarre une demande pour retrouver tous les matches pour le texte dans la page web et retourne un entier représentant l’id de la requête utilisée pour la demande. On trouvera le résultat de la requête en vous abonnant à l’événement trouvé dans la page.
      parameters:
        text:
          description: 'Contenu d’être fouillé, ne doit pas être vide.'
        options:
          properties:
            forward:
              description: 'Si la recherche vers l’avant ou vers l’arrière, valeur par défaut true.'
            findNext:
              description: >-
                Si l’opération est la première demande ou un suivi, par défaut est false.
            matchCase:
              description: 'Si la recherche doit être sensible à la casse par défaut est false.'
            wordStart:
              description: S’il faut chercher seulement au début des mots. par défaut, false.
            medialCapitalAsWordStart:
              description: >-
                Lorsqu’il est combiné avec wordStart, accepte un match au milieu d’un mot, si le match commence par une lettre majuscule suivie d’un minuscule ou non-lettre. Accepte plusieurs autre intra-mot correspond, par défaut sur false.
    stopFindInPage:
      description: >-
        S’arrête toute demande de findInPage pour le webContents avec l’action fournie.
      parameters:
        action:
          description: >-
            Spécifie l’action qui aura lieu fin demande [« webContents.findInPage »].
    capturePage:
      description: >-
        Capture un instantané de la page au sein de Rect. Une fois le rappel s’appellera avec callback(image). L’image est une instance de NativeImage qui stocke les données de la capture instantanée. Omettant rect saisiront la page entière visible.
      parameters:
        rect:
          description: La zone de la page à capturer
    hasServiceWorker:
      description: >-
        Vérifie si tout ServiceWorker est enregistré et retourne une valeur booléenne comme réponse au rappel.
    unregisterServiceWorker:
      description: >-
        Annule l’inscription de toute ServiceWorker, s’il est présent et retourne une valeur booléenne comme réponse au rappel lorsque la promesse JS est épanouie ou false lorsque la promesse JS est rejetée.
    print:
      description: >-
        Imprime la page web de la fenêtre. Quand silent est définie sur true, électron viendra chercher l’imprimante par défaut et les paramètres par défaut pour l’impression du système. Window.Print appelant dans page web équivaut à appeler webContents.print({silent: false, printBackground: false}). Utilisation page-break-before : toujours ; Style CSS à force d’imprimer vers une nouvelle page.
      parameters:
        options:
          properties:
            silent:
              description: Ne demandez pas l’utilisateur pour les paramètres d’impression. Valeur par défaut est false.
            printBackground:
              description: >-
                Imprime également la couleur d’arrière-plan et l’image de la page web. Valeur par défaut est false.
    printToPDF:
      description: >-
        Imprime la page web de la fenêtre en PDF avec prévisualisation de chrome impression des paramètres personnalisés. Le rappel s’appellera avec rappel (erreur, données) à la fin. Les données sont une mémoire tampon qui contient les données PDF générées. Le paysage sera ignoré si @page à-règle CSS est utilisé dans la page web. Par défaut, un vide options seront considérés comme : utilisation page-break-before : toujours ; Style CSS à force d’imprimer vers une nouvelle page. Un exemple de webContents.printToPDF :
      parameters:
        options:
          properties:
            marginsType:
              description: >-
                Spécifie le type de marges à utiliser. Utilise 0 pour la marge par défaut, 1 pour aucune marge et 2 pour la marge minimale.
            pageSize:
              description: >-
                Spécifier la taille de la page du fichier PDF généré. Peut être A3, A4, A5, juridique, lettre, tabloïd ou un objet contenant la hauteur et la largeur en microns.
            printBackground:
              description: Si vous souhaitez imprimer des arrière-plans CSS.
            printSelectionOnly:
              description: Si vous souhaitez imprimer la sélection uniquement.
            landscape:
              description: 'true pour paysage, false pour portrait.'
    addWorkSpace:
      description: >-
        Ajouter le chemin d’accès spécifié à DevTools espace. Doit être utilisé après DevTools création :
    removeWorkSpace:
      description: Supprime le chemin d’accès spécifié de DevTools espace de travail.
    openDevTools:
      description: Ouvre le devtools.
      parameters:
        options:
          properties:
            mode:
              description: >-
                Ouvre le devtools avec quai spécifié État, peut être droite, bas, désamarré, détacher. Par défaut, utilisé pour la dernière station d’État. En mode déconnecté, il est possible d’accoster à l’arrière. En détacher ce n’est pas de mode.
    closeDevTools:
      description: Ferme la devtools.
    isDevToolsOpened:
      returns:
        description: Si le devtools est ouverte.
    isDevToolsFocused:
      returns:
        description: Si les devtools Découvre se concentre.
    toggleDevTools:
      description: Active/désactive les outils du développeur.
    inspectElement:
      description: 'Commence à inspecter l’élément à la position (x, y).'
    inspectServiceWorker:
      description: Ouvre les outils de développement pour le contexte de travail de service.
    send:
      description: >-
        Envoyer un message asynchrone à processus de rendu via le canal, vous pouvez également envoyer des arguments arbitraire. Arguments sont sérialisés en JSON en interne et par conséquent aucune fonction ou la chaîne de prototype ne sera inclus. Le processus de rendu peut gérer le message en écoutant du canal avec le module ipcRenderer. Un exemple d’envoi de messages du processus principal pour le processus de rendu :
    enableDeviceEmulation:
      description: Activer l’émulation de périphérique avec les paramètres donnés.
      parameters:
        parameters:
          properties:
            screenPosition:
              description: 'Spécifier le type d’écran à émuler (par défaut : ordinateur de bureau)'
            screenSize:
              description: Définir la taille de l’écran émulé (screenPosition == mobile)
            viewPosition:
              description: >-
                Positionner la vue sur l’écran (screenPosition == mobile) (par défaut : {x: 0, y: 0})
            deviceScaleFactor:
              description: >-
                Régler le facteur d’échelle de dispositif (s’il est zéro par défaut est facteur d’échelle dispositif original) (par défaut : 0)
            viewSize:
              description: Définir la taille de la vue émulé (vide ne signifie n’aucun passer outre)
            fitToView:
              description: >-
                Si vue émulé devrait être revus à la baisse si nécessaire pour s’adapter à la quantité d’espace disponible (par défaut : false)
            offset:
              description: >-
                Décalage d’avis émulé à l’intérieur de l’espace disponible (pas dans l’excès pour afficher mode) (par défaut : {x: 0, y: 0})
            scale:
              description: >-
                Échelle de vue émulé à l’intérieur de l’espace disponible (pas dans l’excès pour afficher mode) (par défaut : 1)
    disableDeviceEmulation:
      description: Désactiver l’émulation de périphérique activée par webContents.enableDeviceEmulation.
    sendInputEvent:
      description: >-
        Envoie un événement d’entrée à la page. Pour les événements de clavier, l’objet événement ont également suivant les propriétés : pour les événements de souris, l’objet événement ont également suivant les propriétés : pour l’événement mouseWheel, l’objet événement ont également suivant les propriétés :
      parameters:
        event:
          properties:
            type:
              description: >-
                () Le type de l’événement, peut être mouseDown, mouseUp, mouseEnter, mouseLeave, contextMenu, mouseWheel, mouseMove, keyDown, keyUp, char.
            modifiers:
              description: >-
                Un tableau de modificateurs de l’événement, peut inclure shift, control, alt, meta, isKeypad, isAutoRepeat, leftButtonDown, middleButtonDown, rightButtonDown, capsLock, numLock, gauche, droite.
    beginFrameSubscription:
      description: >-
        Commencez avec une offre pour des événements de présentation et capturé des images, le rappel s’appellera avec rappel (« framebuffer », dirtyRect) quand il y a un événement de présentation. Le frameBuffer est une mémoire tampon qui contient les données de pixel brutes. Sur la plupart des machines, les données de pixel sont effectivement stockées au format BGRA 32 bits, mais la représentation réelle dépend de la primauté du processeur (processeurs plus modernes sont little-endian, sur les ordinateurs équipés de processeurs de big-endian, les données sont au format ARVB 32 bits). Le dirtyRect est un objet avec x, y, largeur, les propriétés de hauteur qui décrit de quelle partie de la page a été repeint. Si onlyDirty est défini sur true, frameBuffer contiendra uniquement la zone repeinte. onlyDirty par défaut est false.
      parameters:
        onlyDirty:
          description: Valeurs par défaut à « false »
    endFrameSubscription:
      description: Fin avec une offre pour événements présentation cadre.
    startDrag:
      description: >-
        Définit l’élément en faisant glisser l’élément pour l’opération de glisser-déplacer, le fichier est le chemin d’accès absolu du fichier à être traîné et icône est l’image montrant sous le curseur lorsque vous faites glisser.
      parameters:
        item:
          properties:
            file:
              description: ou fichiers Array des chemins d’accès dans les fichiers glissées.
            icon:
              description: L’image doit être non vide sur macOS.
    savePage:
      parameters:
        fullPath:
          description: Le chemin d’accès complet du fichier.
        saveType:
          description: Spécifier la sauvegarde type.
        callback:
          description: '« (erreur) => {} ''.'
      returns:
        description: true si le processus d’enregistrement de page a été lancé avec succès.
    showDefinitionForSelection:
      description: Montre dictionnaire contextuel qui recherche le mot sélectionné dans la page.
    setSize:
      description: >-
        Définir la taille de la page. C’est uniquement pris en charge pour le contenu des commentaires <webview>.
      parameters:
        options:
          properties:
            normal:
              description: >-
                Taille normale de la page. Ceci peut être utilisé en combinaison avec l’attribut pour redimensionner manuellement le contenu de commentaires webview.
    isOffscreen:
      returns:
        description: Indique si le rendu hors de l’écran est activé.
    startPainting:
      description: 'Si le rendu hors écran est start activé et pas de peinture, peinture.'
    stopPainting:
      description: 'Si le rendu hors écran est arrêt activé et peinture, peinture.'
    isPainting:
      returns:
        description: >-
          Si le rendu hors de l’écran est activé retourne si c’est actuellement la peinture.
    setFrameRate:
      description: >-
        Si le rendu hors de l’écran est activé définit la cadence au nombre spécifié. Seules les valeurs entre 1 et 60 sont acceptés.
    getFrameRate:
      returns:
        description: Si le rendu hors de l’écran est activé retourne la cadence actuelle.
    invalidate:
      description: >-
        Horaires de repeindre la fenêtre ce contenu web est en pleine. Si le rendu hors de l’écran est activé invalide l’armature et génère un nouveau par le biais de l’événement « peinture ».
    getWebRTCIPHandlingPolicy:
      returns:
        description: Retourne l’adresse IP de WebRTC manipulation politique.
    setWebRTCIPHandlingPolicy:
      description: >-
        Définir l’IP WebRTC manipulation politique vous permet de contrôler qui IPs sont exposées via WebRTC.  Voir BrowserLeaks pour plus de détails.
      parameters:
        policy:
          description: Spécifiez l’adresse IP de WebRTC manipulation politique.
  instanceProperties:
    id:
      description: Un entier représentant l’ID unique de cette WebContents.
    session:
      description: Un objet de Session (session) utilisé par cette webContents.
    hostWebContents:
      description: Une instance de WebContents qui pourrait posséder cette WebContents.
    devToolsWebContents:
      description: >-
        Un WebContents de DevTools pour cette WebContents. Remarque : Les utilisateurs ne devrez jamais ranger cet objet car il peut devenir nulle lorsque la DevTools a été fermé.
    debugger:
      description: Une instance du débogueur pour cette webContents.
  instanceEvents:
    did-finish-load:
      description: >-
        Émis lorsque la navigation se fait, c'est-à-dire la filature de l’onglet a cessé de tourner, et l’événement onload est dépêché.
    did-fail-load:
      description: >-
        Cet événement est comme a-finition-charge mais émis lorsque le chargement a échoué ou a été annulé, par exemple window.stop() est appelée. La liste complète des codes d’erreur et leur signification est disponible ici.
    did-frame-finish-load:
      description: Émis lorsqu’un cadre a fait la navigation.
    did-start-loading:
      description: >-
        Correspond aux points dans le temps, le cône de l’onglet démarrage de filature.
    did-stop-loading:
      description: >-
        Correspond aux points dans le temps quand le cône de l’onglet cessé de tourner.
    did-get-response-details:
      description: >-
        Émis lorsque les détails concernant une ressource demandée sont disponibles. État indique que la connexion de socket pour télécharger la ressource.
    did-get-redirect-request:
      description: Émis lorsqu’une redirection est reçue tout en demandant une ressource.
    dom-ready:
      description: Émis lorsque le document dans le cadre donné est chargé.
    page-favicon-updated:
      description: Émis lorsque la page reçoit l’URL de favicon.
      returns:
        favicons:
          description: Tableau d’URL
    new-window:
      description: >-
        Émis lorsque la page demande d’ouvrir une nouvelle fenêtre pour une url. Il pourrait être demandé par window.open ou un lien externe comme <a target='_blank'>. Un nouveau BrowserWindow sera créé par défaut pour l’url. Appel Event.preventDefault () empêchera l’électron crée automatiquement un nouveau BrowserWindow. Si vous appelez Event.preventDefault () et créez manuellement un nouveau BrowserWindow, puis vous devez définir event.newGuest pour référencer la nouvelle instance de BrowserWindow, omettant de le faire peut entraîner un comportement inattendu. Par exemple :
      returns:
        disposition:
          description: >-
            Peut être « par défaut », « onglet de premier plan », « onglet d’arrière-plan- », « nouvelle fenêtre », « enregistrer sur disque » et « l’autre ».
        options:
          description: Les options qui seront utilisées pour créer le nouveau « BrowserWindow ».
        additionalFeatures:
          description: >-
            Les caractéristiques non standards (fonctionnalités non gérées par chrome ou électron) donné à « Window.Open () ».
    will-navigate:
      description: >-
        Émis lorsqu’un utilisateur ou à la page veut commencer la navigation. Il peut arriver quand l’objet window.location est modifié ou un utilisateur clique sur un lien dans la page. Cet événement n’émettra pas lorsque la navigation est démarrée par programme avec les API comme webContents.loadURL et webContents.back. Il n’est également pas émis pour les navigations dans la page, par exemple en cliquant sur les liens d’ancrage ou mise à jour le window.location.hash. Utilisez n’a-naviguer-sur la page événement à cet effet. Appel Event.preventDefault () permet d’éviter la navigation.
    did-navigate:
      description: >-
        Émis lorsqu’une navigation est fait. Cet événement n’est pas émis pour les navigations dans la page, par exemple en cliquant sur les liens d’ancrage ou mise à jour le window.location.hash. Utilisez n’a-naviguer-sur la page événement à cet effet.
    did-navigate-in-page:
      description: >-
        Émis lorsqu’un système de navigation dans la page qui s’est passé. En cas de navigation dans la page, l’URL de la page change mais ne provoque pas de navigation à l’extérieur de la page. Exemples de ce qui se produisent sont quand vous cliquez sur liens d’ancrage ou lorsque l’événement hashchange de DOM est déclenché.
    crashed:
      description: Émis lorsque le moteur de rendu du processus se bloque ou sont tué.
    plugin-crashed:
      description: Émis lorsqu’un processus de plugin est tombé en panne.
    destroyed:
      description: Émis lorsque webContents est détruit.
    before-input-event:
      description: >-
        Émis avant d’envoyer les événements keydown et keyup dans la page. Event.preventDefault vocation évitera les événements keydown/keyup de page qu’elles se préparent.
      returns:
        input:
          description: Propriétés d’entrée
          properties:
            type:
              description: KeyUp ou keyDown
            key:
              description: Équivalent à
            code:
              description: Équivalent à
            isAutoRepeat:
              description: Équivalent à
            shift:
              description: Équivalent à
            control:
              description: Équivalent à
            alt:
              description: Équivalent à
            meta:
              description: Équivalent à
    devtools-opened:
      description: Émis lorsque DevTools est ouvert.
    devtools-closed:
      description: Émis lorsque DevTools est fermé.
    devtools-focused:
      description: Émis lorsque DevTools est porté / ouvert.
    certificate-error:
      description: >-
        Émis lorsque n’a pas vérifié le certificat pour l’url. L’utilisation est la même chose avec l’événement d’erreur de certificat d’app.
      returns:
        error:
          description: Le code d’erreur
        callback:
          parameters:
            isTrusted:
              description: Indique si le certificat peut être considéré comme fiable
    select-client-certificate:
      description: >-
        Émis lorsqu’un certificat client est requis. L’utilisation est la même chose avec l’événement select-client-certificat d’app.
      returns:
        callback:
          parameters:
            certificate:
              description: Doit être un certificat dans la liste donnée
    login:
      description: >-
        Émis lorsque webContents veut faire base auth. L’utilisation est la même chose avec l’événement de connexion d’app.
    found-in-page:
      description: 'Émis lorsqu’un résultat est disponible pour [webContents.findInPage] demande.'
      returns:
        result:
          properties:
            activeMatchOrdinal:
              description: Position de la correspondance active.
            matches:
              description: Nombre de Matches.
            selectionArea:
              description: Coordonnées de la première région de match.
    media-started-playing:
      description: Émis lorsque les médias commence à jouer.
    media-paused:
      description: Émis lorsque le média est suspendu ou fait jouer.
    did-change-theme-color:
      description: >-
        Émis lorsque le changement de couleur de thème de la page. Il s’agit généralement en raison de la rencontre une balise meta :
    update-target-url:
      description: >-
        Émis lorsque la souris passe sur un lien ou le clavier déplace le focus vers un lien.
    cursor-changed:
      description: >-
        Émis lorsque le type du curseur change. Le paramètre de type peut être par défaut, en forme de croix, pointeur, texte, attente, aide, e-resize, n-resize, ne-resize, nw-resize, s-resize, se-resize, sw-resize, w-resize, ns-redimensionner, ew-redimensionner, NESO-redimensionner, nwse-redimensionner, col-redimensionner, ligne-redimensionner, m-panoramique, panoramique e, n-panoramique, panoramique ne, nw-panoramique, s-panoramique, panoramique se, sw-panoramique, w-panoramique, déménagement, texte vertical, cellule, menu contextuel, alias, progrès, nodrop, copier, aucun, n’est pas permise, zoomer, dézoomer, saisir, saisissant, personnalisé. Si le paramètre de type est personnalisé, le paramètre image tiendra l’image de curseur personnalisé dans un NativeImage et hotspot, la taille et l’échelle tiendra plus d’informations sur le curseur personnalisé.
      returns:
        scale:
          description: facteur d’échelle pour le curseur personnalisé
        size:
          description: la taille de « l’image »
        hotspot:
          description: coordonnées du point chaud du curseur personnalisé
    context-menu:
      description: Émis lorsqu’il y a un nouveau menu de contexte qui doit être manipulé.
      returns:
        params:
          properties:
            x:
              description: coordonnée x
            'y':
              description: coordonnée y
            linkURL:
              description: >-
                URL du lien qui entoure le nœud, le menu contextuel a été invoqué sur.
            linkText:
              description: >-
                Texte associé au lien. Peut être une chaîne vide si le contenu du lien est une image.
            pageURL:
              description: URL de la page de niveau supérieur que le menu contextuel a été invoqué sur.
            frameURL:
              description: URL de l’armature que le menu contextuel a été appelé sur.
            srcURL:
              description: >-
                URL de la source pour l’élément du menu contextuel a été invoqué sur. Éléments avec l’URL de la source sont des images, audio et vidéo.
            mediaType:
              description: >-
                Type du nœud le menu contextuel a été invoqué sur. Peut être none, image, audio, video, toile, fichier ou plugin.
            hasImageContents:
              description: >-
                Si le menu contextuel a été invoqué sur une image qui a contenu non vide.
            isEditable:
              description: Si le contexte est modifiable.
            selectionText:
              description: Texte de la sélection du menu contextuel a été invoqué sur.
            titleText:
              description: >-
                Texte de titre ou alt de la sélection que le contexte a été appelé sur.
            misspelledWord:
              description: 'Le mot mal orthographié sous le curseur, le cas échéant.'
            frameCharset:
              description: >-
                Le codage de caractères de l’image sur laquelle le menu a été appelé.
            inputFieldType:
              description: >-
                Si le menu contextuel a été appelé sur un champ de saisie, le type de ce champ. Les valeurs possibles sont none, en clair, le mot de passe, autres.
            menuSourceType:
              description: >-
                Source d’entrée qui a appelé le menu contextuel. Peut être none, touchMenu, tactile, clavier, souris.
            mediaFlags:
              description: Les attributs de l’élément media le menu contextuel a été invoqués sur.
              properties:
                inError:
                  description: Si l’élément multimédia est tombé en panne.
                isPaused:
                  description: Si l’élément multimédia est en pause.
                isMuted:
                  description: Si l’élément multimédia est désactivé.
                hasAudio:
                  description: Si l’élément media a audio.
                isLooping:
                  description: Si l’élément multimédia est une boucle.
                isControlsVisible:
                  description: Si les contrôles de l’élément multimédia sont visibles.
                canToggleControls:
                  description: Si les contrôles de l’élément multimédia sont toggleable.
                canRotate:
                  description: Si l’élément multimédia peut être pivoté.
            editFlags:
              description: >-
                Ces indicateurs indiquent si le moteur de rendu croit qu’il est en mesure d’effectuer l’action correspondante.
              properties:
                canUndo:
                  description: Si le moteur de rendu croit il peut annuler.
                canRedo:
                  description: Si le moteur de rendu croit qu'il peut refaire.
                canCut:
                  description: Si le moteur de rendu croit qu'elle peut couper.
                canCopy:
                  description: Si le moteur de rendu croit qu’il peut copier
                canPaste:
                  description: Si le moteur de rendu croit qu'il peut coller.
                canDelete:
                  description: Si le moteur de rendu croit que pouvoir supprimer.
                canSelectAll:
                  description: Si le moteur de rendu croit qu'il peut sélectionner tout.
    select-bluetooth-device:
      description: >-
        Émis lorsque le périphérique bluetooth doit être sélectionné sur appel à navigator.bluetooth.requestDevice. Pour utiliser navigator.bluetooth api webBluetooth doit être activé.  Si event.preventDefault n’est pas appelé, le premier périphérique disponible sera sélectionné. rappel doit être appelé avec deviceId à sélectionner, en passant une chaîne vide pour rappel annulera la demande.
    paint:
      description: >-
        Émis lorsqu’une nouvelle image est générée. Seule la zone sale est passée dans la mémoire tampon.
      returns:
        image:
          description: Les données d’image de l’image entière.
    devtools-reload-page:
      description: Émis lorsque la fenêtre devtools instruit le webContents pour recharger
    will-attach-webview:
      description: >-
        Émis lorsque contenu web d’un <webview> est attachée à ce contenu sur Internet. Appel Event.preventDefault () va détruire la page de commentaires. Cet événement peut être utilisé pour configurer webPreferences pour le webContents d’un <webview> avant d’être chargé et offre la possibilité de définir des paramètres qui ne peuvent être réglées via les attributs <webview>.
      returns:
        webPreferences:
          description: >-
            Les préférences de web qui seront utilisés par la page de commentaires. Cet objet peut être modifié pour ajuster les préférences pour la page de commentaires.
        params:
          description: >-
            Les autres paramètres de « <webview> » comme l’URL « src ». Cet objet peut être modifié pour ajuster les paramètres de la page de commentaires.
webFrame:
  description: Personnaliser le rendu de la page web actuelle.
  methods:
    setZoomFactor:
      description: >-
        Le facteur de zoom modifie le facteur spécifié. Facteur de zoom est le pourcentage de zoom divisé par 100, donc 300 % = 3.0.
      parameters:
        factor:
          description: Facteur de zoom.
    getZoomFactor:
      returns:
        description: Le facteur de zoom actuel.
    setZoomLevel:
      description: >-
        Modifie le niveau de zoom jusqu’au niveau spécifié. La taille originale est de 0 et chaque incrément au-dessus ou en dessous représente zoom 20 % supérieure ou inférieure aux limites par défaut de 300 % et 50 % de la taille originale, respectivement.
      parameters:
        level:
          description: Niveau de zoom
    getZoomLevel:
      returns:
        description: Le niveau de zoom actuel.
    setZoomLevelLimits:
      description: >-
        Obsolète : Appelez setVisualZoomLevelLimits pour définir les limites de niveau de zoom visuel. Cette méthode sera supprimée dans 2.0 d’électrons.
    setVisualZoomLevelLimits:
      description: Définit le niveau maximum et minimum de pincement au-zoom.
    setLayoutZoomLevelLimits:
      description: Définit le maximum et minimum axée sur la mise en page niveau de zoom (c'est-à-dire non visuels).
    setSpellCheckProvider:
      description: >-
        Définit un fournisseur pour la correction orthographique dans les champs de saisie et les zones de texte. Le fournisseur doit être un objet qui a une méthode de vérification orthographique qui retourne si le mot passé est correctement orthographié. Un exemple d’utilisation de noeud-correcteur orthographique comme fournisseur :
      parameters:
        provider:
          properties:
            spellCheck:
              description: Retourne Boolean
    registerURLSchemeAsSecure:
      description: >-
        Enregistre le schéma en tant que système sécurisé. Systèmes sécurisés ne déclenchent pas les avertissements de contenu mixtes. Par exemple, https et les données sont des régimes de sécurité parce qu’elles ne peuvent être altérées par les attaquants de réseau actif.
    registerURLSchemeAsBypassingCSP:
      description: >-
        Des ressources seront chargés de ce régime indépendamment de la stratégie de sécurité contenu de la page actuelle.
    registerURLSchemeAsPrivileged:
      description: >-
        Enregistre le régime comme étant sûr, contourne la politique de sécurité du contenu des ressources, permet l’enregistrement ServiceWorker et prend en charge les API d’extraction. Spécifiez une option avec la valeur false à omettre de l’enregistrement. Un exemple d’enregistrement d’un régime privilégié, sans contenu politique de sécurité de contournement :
      parameters:
        options:
          properties:
            secure:
              description: Valeur par défaut true.
            bypassCSP:
              description: Valeur par défaut true.
            allowServiceWorkers:
              description: Valeur par défaut true.
            supportFetchAPI:
              description: Valeur par défaut true.
            corsEnabled:
              description: Valeur par défaut true.
    insertText:
      description: Insère le texte de l’élément.
    executeJavaScript:
      description: >-
        Évalue le code dans la page. Dans la fenêtre du navigateur, certaines APIs HTML comme requestFullScreen ne peut être invoqué par un geste de l’utilisateur. Si userGesture true supprime cette limitation.
      parameters:
        userGesture:
          description: Valeur par défaut est « faux ».
        callback:
          description: Appelé après que le script a été exécuté.
      returns:
        description: >-
          Une promesse qui se résout avec le résultat du code exécuté ou est rejetée si le résultat du code est une promesse rejetée.
    getResourceUsage:
      description: >-
        Retourne un objet qui décrit les informations sur l’utilisation de caches de mémoire interne de Blink. Cela va générer :
    clearCache:
      description: >-
        Tente de libérer de la mémoire n’est plus utilisée (comme les images d’une navigation précédente). Remarque qu’aveuglément l’appel de cette méthode probablement rend électrons plus lent puisqu’il devra remplir ces vidé les caches, vous devez l’appeler seulement si un événement dans votre application s’est produite que fait vous pensez que votre page est réellement utilisant moins de mémoire (c'est-à-dire vous avez navigué depuis une page super lourde à un vide pour la plupart et ont l’intention d’y rester).
WebRequest:
  description: >-
    Intercepter et modifier le contenu d’une demande à différents stades de sa vie.
  instanceMethods:
    onBeforeRequest:
      description: >-
        L’auditeur s’appellera avec écouteur (détails, callback) quand une demande est sur le point de se produire. L’uploadData est un tableau d’objets UploadData. Le rappel doit être appelée avec un objet de réponse.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Tableau des modèles d’URL qui sera utilisé pour filtrer les requêtes qui ne correspondent pas à des modèles d’URL.
        listener:
          parameters:
            callback:
              parameters:
                response:
                  properties:
                    redirectURL:
                      description: >-
                        La demande d’origine est empêchée d’être envoyées ou terminé et est plutôt redirigée vers l’URL donnée.
    onBeforeSendHeaders:
      description: >-
        L’auditeur s’appellera avec écouteur (détails, callback) avant d’envoyer une requête HTTP, une fois que les en-têtes de demande sont disponibles. Cela peut se produire après une connexion TCP est établie sur le serveur, mais avant tout http, les données sont envoyées. Le rappel doit être appelée avec un objet de réponse.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Tableau des modèles d’URL qui sera utilisé pour filtrer les requêtes qui ne correspondent pas à des modèles d’URL.
    onSendHeaders:
      description: >-
        L’auditeur s’appellera avec listener(details) juste avant une demande va être envoyée au serveur, modifications de la réponse précédente d’onBeforeSendHeaders sont visibles au moment où ce port d’écoute est déclenché.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Tableau des modèles d’URL qui sera utilisé pour filtrer les requêtes qui ne correspondent pas à des modèles d’URL.
    onHeadersReceived:
      description: >-
        L’auditeur s’appellera avec écouteur (détails, callback) lorsque les en-têtes de réponse HTTP de la demande ont été reçues. Le rappel doit être appelée avec un objet de réponse.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Tableau des modèles d’URL qui sera utilisé pour filtrer les requêtes qui ne correspondent pas à des modèles d’URL.
    onResponseStarted:
      description: >-
        L’auditeur s’appellera avec listener(details), quand le premier octet du corps de la réponse est reçu. Pour les requêtes HTTP, cela signifie que les en-têtes de ligne et de la réponse de statut sont disponibles.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Tableau des modèles d’URL qui sera utilisé pour filtrer les requêtes qui ne correspondent pas à des modèles d’URL.
        listener:
          parameters:
            details:
              properties:
                fromCache:
                  description: Indique si la réponse a été extraite du cache disque.
    onBeforeRedirect:
      description: >-
        L’auditeur s’appellera avec listener(details) quand une redirection de serveur lancé va se produire.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Tableau des modèles d’URL qui sera utilisé pour filtrer les requêtes qui ne correspondent pas à des modèles d’URL.
        listener:
          parameters:
            details:
              properties:
                ip:
                  description: L’adresse IP du serveur qui a bien été envoyée à la demande.
    onCompleted:
      description: >-
        L’auditeur s’appellera avec listener(details), lorsqu’une demande est terminée.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Tableau des modèles d’URL qui sera utilisé pour filtrer les requêtes qui ne correspondent pas à des modèles d’URL.
    onErrorOccurred:
      description: L’auditeur s’appellera avec listener(details) lorsqu’une erreur survient.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Tableau des modèles d’URL qui sera utilisé pour filtrer les requêtes qui ne correspondent pas à des modèles d’URL.
        listener:
          parameters:
            details:
              properties:
                error:
                  description: La description de l’erreur.
webviewTag:
  description: Afficher du contenu web externe dans un cadre isolé et les processus.
  methods:
    loadURL:
      description: >-
        Charge l’url dans le mode Web, l’url doit contenir le préfixe de protocole, par exemple le http:// ou file://.
      parameters:
        options:
          properties:
            httpReferrer:
              description: Une url HTTP Referrer.
            userAgent:
              description: Un agent utilisateur provenant de la demande.
            extraHeaders:
              description: En-têtes supplémentaires séparés par « \n »
            baseURLForDataURL:
              description: >-
                Url (avec séparateur de chemin d’accès arrière) pour les fichiers à charger par l’url des données de base. Cela est nécessaire uniquement si l’url spécifiée est une url de données et a besoin de charger les autres fichiers.
    getURL:
      returns:
        description: L’URL de la page de commentaires.
    getTitle:
      returns:
        description: Le titre de la page de commentaires.
    isLoading:
      returns:
        description: Si commentaires page se charge toujours de ressources.
    isWaitingForResponse:
      returns:
        description: >-
          Si la page de commentaires est en attente pour une première intervention pour la ressource principale de la page.
    stop:
      description: S’arrête en attente de navigation.
    reload:
      description: Recharge la page de commentaires.
    reloadIgnoringCache:
      description: Recharge la page de commentaires et ignore le cache.
    canGoBack:
      returns:
        description: Si la page de commentaires peut revenir en arrière.
    canGoForward:
      returns:
        description: Si la page de commentaires peut aller de l’avant.
    canGoToOffset:
      returns:
        description: Si la page de commentaires peut aller pour compenser.
    clearHistory:
      description: Efface l’historique de navigation.
    goBack:
      description: Rend la page de commentaires à revenir en arrière.
    goForward:
      description: Rend la page de commentaires à aller de l’avant.
    goToIndex:
      description: Navigue vers l’index absolu spécifié.
    goToOffset:
      description: Accède à l’offset spécifié à partir de l’entrée « en cours ».
    isCrashed:
      returns:
        description: Si le processus de rendu est tombé en panne.
    setUserAgent:
      description: Substitue l’agent utilisateur pour la page de commentaires.
    getUserAgent:
      returns:
        description: L’agent utilisateur pour la page de commentaires.
    insertCSS:
      description: Injecte CSS dans la page de commentaires.
    executeJavaScript:
      description: >-
        Évalue le code dans la page. Si userGesture est défini, il va créer le contexte de geste de l’utilisateur dans la page. APIs HTML comme requestFullScreen, qui nécessitent des actions de l’utilisateur, peuvent profiter de cette option pour l’automatisation.
      parameters:
        userGesture:
          description: Par défaut « false ».
        callback:
          description: Appelé après que le script a été exécuté.
    openDevTools:
      description: Ouvre une fenêtre DevTools pour page de commentaires.
    closeDevTools:
      description: Ferme la fenêtre de commentaires page DevTools.
    isDevToolsOpened:
      returns:
        description: Commentaires page a-t-elle une fenêtre DevTools attachée.
    isDevToolsFocused:
      returns:
        description: Si DevTools fenêtre de commentaires page se concentre.
    inspectElement:
      description: 'Commence à inspecter l’élément à la position (x, y) de la page de commentaires.'
    inspectServiceWorker:
      description: >-
        Ouvre le DevTools pour le contexte de travailleur de services présent dans la page de commentaires.
    setAudioMuted:
      description: Page de commentaires Set mis en sourdine.
    isAudioMuted:
      returns:
        description: Si page de commentaires a été mis en sourdine.
    undo:
      description: Exécute édition commande Annuler dans la page.
    redo:
      description: Exécute édition commande rétablir dans la page.
    cut:
      description: Exécute la commande d’édition couper dans la page.
    copy:
      description: Exécute édition commande copie dans la page.
    paste:
      description: Exécute édition commande coller dans la page.
    pasteAndMatchStyle:
      description: Exécute pasteAndMatchStyle édition de commande dans la page.
    delete:
      description: Exécute édition commande supprimer dans la page.
    selectAll:
      description: Exécute édition selectAll de commande dans la page.
    unselect:
      description: Exécute la commande d’édition déselection dans la page.
    replace:
      description: Exécute édition commande remplacer dans la page.
    replaceMisspelling:
      description: Exécute replaceMisspelling édition de commande dans la page.
    insertText:
      description: Insère le texte de l’élément.
    findInPage:
      description: >-
        Démarre une demande pour retrouver tous les matches pour le texte dans la page web et retourne un entier représentant l’id de la requête utilisée pour la demande. On trouvera le résultat de la requête en vous abonnant à l’événement trouvé dans la page.
      parameters:
        text:
          description: 'Contenu d’être fouillé, ne doit pas être vide.'
        options:
          properties:
            forward:
              description: 'Si la recherche vers l’avant ou vers l’arrière, valeur par défaut true.'
            findNext:
              description: >-
                Si l’opération est la première demande ou un suivi, par défaut est false.
            matchCase:
              description: 'Si la recherche doit être sensible à la casse par défaut est false.'
            wordStart:
              description: S’il faut chercher seulement au début des mots. par défaut, false.
            medialCapitalAsWordStart:
              description: >-
                Lorsqu’il est combiné avec wordStart, accepte un match au milieu d’un mot, si le match commence par une lettre majuscule suivie d’un minuscule ou non-lettre. Accepte plusieurs autre intra-mot correspond, par défaut sur false.
    stopFindInPage:
      description: S’arrête toute demande de findInPage pour l’affichage Web avec l’action fournie.
      parameters:
        action:
          description: Spécifie l’action qui aura lieu fin demande.
    print:
      description: 'Imprime la page web de webview. Identique à webContents.print([options]).'
      parameters:
        options:
          properties:
            silent:
              description: Ne demandez pas l’utilisateur pour les paramètres d’impression. Valeur par défaut est false.
            printBackground:
              description: >-
                Imprime également la couleur d’arrière-plan et l’image de la page web. Valeur par défaut est false.
    printToPDF:
      description: >-
        Imprimer page web de webview en PDF, identique à webContents.printToPDF (options, rappel).
      parameters:
        options:
          properties:
            marginsType:
              description: >-
                Spécifie le type de marges à utiliser. Utilise 0 pour la marge par défaut, 1 pour aucune marge et 2 pour la marge minimale.
            pageSize:
              description: >-
                Spécifier la taille de la page du fichier PDF généré. Peut être A3, A4, A5, juridique, lettre, tabloïd ou un objet contenant la hauteur et la largeur en microns.
            printBackground:
              description: Si vous souhaitez imprimer des arrière-plans CSS.
            printSelectionOnly:
              description: Si vous souhaitez imprimer la sélection uniquement.
            landscape:
              description: 'true pour paysage, false pour portrait.'
    capturePage:
      description: >-
        Capture un instantané de la page de l’affichage Web. Identique à webContents.capturePage ([rect,] rappel).
      parameters:
        rect:
          description: La zone de la page à capturer
    send:
      description: >-
        Envoyer un message asynchrone à processus de rendu via le canal, vous pouvez également envoyer des arguments arbitraire. Le processus de rendu peut gérer le message par l’écoute de l’événement de canal avec le module ipcRenderer. Voir webContents.send pour obtenir des exemples.
    sendInputEvent:
      description: >-
        Envoie un événement d’entrée à la page. Voir webContents.sendInputEvent pour une description détaillée de l’objet event.
    setZoomFactor:
      description: >-
        Le facteur de zoom modifie le facteur spécifié. Facteur de zoom est le pourcentage de zoom divisé par 100, donc 300 % = 3.0.
      parameters:
        factor:
          description: Facteur de zoom.
    setZoomLevel:
      description: >-
        Modifie le niveau de zoom jusqu’au niveau spécifié. La taille originale est de 0 et chaque incrément au-dessus ou en dessous représente zoom 20 % supérieure ou inférieure aux limites par défaut de 300 % et 50 % de la taille originale, respectivement.
      parameters:
        level:
          description: Niveau de zoom
    showDefinitionForSelection:
      description: Montre dictionnaire contextuel qui recherche le mot sélectionné dans la page.
    getWebContents:
      returns:
        description: Le contenu web associé à ce webview.
  attributes:
    src:
      description: >-
        Retourne l’URL visible. Écriture à cet attribut initie la navigation de niveau supérieur. Assigner src sa propre valeur recharger la page en cours. L’attribut src peut également accepter les données URL, par exemple données : texte / monde de la plaine, Bonjour, !.
    autosize:
      description: >-
        Lorsque cet attribut est présent le conteneur webview se redimensionnera automatiquement dans les limites spécifiées par les attributs minwidth, minheight, maxwidth et maxheight. Ces contraintes n’ont aucune incidence le webview sauf si autosize est activée. Lorsque autosize est activée, la taille de conteneur webview ne peut être inférieure ou supérieure à la valeur maximale des valeurs minimales.
    nodeintegration:
      description: >-
        Lorsque cet attribut est présent la page de commentaires dans webview aura intégration de nœud et pouvez utiliser noeud API comme exiger et processus d’accéder aux ressources système de niveau faible. Intégration de nœud est désactivée par défaut dans la page de commentaires.
    plugins:
      description: >-
        Lorsque cet attribut est présent, la page de commentaires en mode Web sera en mesure d’utiliser des plugins du navigateur. Plugins sont désactivés par défaut.
    preload:
      description: >-
        Spécifie un script qui sera chargé avant les autres scripts s’exécutent dans la page de commentaires. Le protocole de l’URL du script doit être déposé : ou asar :, car il sera chargée par exiger dans la page de commentaires sous le capot. Lorsque la page de commentaires n’est pas l’intégration nœud que ce script auront toujours accès à tous les API de nœud, mais des objets globaux injectés par nœud est supprimé après que l’exécution de ce script est terminée.
    httpreferrer:
      description: Définit l’URL de référence pour la page de commentaires.
    useragent:
      description: >-
        Définit l’agent utilisateur pour la page de commentaires avant que la page est parcourue. Une fois que la page est chargée, utilisez la méthode setUserAgent pour changer l’agent utilisateur.
    disablewebsecurity:
      description: >-
        Lorsque cet attribut est présent la page de commentaires aura désactivé la sécurité web. Sécurité Web est activée par défaut.
    partition:
      description: >-
        Définit la session utilisée par la page. Si la partition commence par persist :, la page utilise une session persistante disponible à toutes les pages dans l’application avec la même partition. s’il n’y a aucun persist : préfixe, la page utilise une session en mémoire. En affectant la même partition, plusieurs pages peuvent partager la même session. Si la partition n’est pas définie session par défaut de l’application va être utilisée. Cette valeur peut uniquement être modifiée avant la première navigation, depuis la session d’un processus actif de rendu ne peut pas changer. Les tentatives suivantes pour modifier la valeur échouera avec une exception de DOM.
    allowpopups:
      description: >-
        Lorsque cet attribut est présent la page de commentaires pourra ouvrir de nouvelles fenêtres. Fenêtres pop-up est désactivés par défaut.
    webpreferences:
      description: >-
        Une liste de chaînes qui spécifie les préférences web sera définie sur le mode Web, séparés par des. On trouvera la liste complète des chaînes de préférence pris en charge en BrowserWindow. La chaîne suit le même format que la chaîne de fonctionnalités dans window.open. Un nom en soi est attribué une valeur booléenne true. Une préférence est réglable par une autre valeur en incluant un =, suivi de la valeur. Oui des valeurs spéciales et 1 sont interprétés comme true, tandis que no et 0 sont interprétées comme false.
    blinkfeatures:
      description: >-
        Une liste de chaînes qui spécifie les fonctionnalités de clignotement à activer séparés par. La liste complète des chaînes des fonctionnalités prises en charge peut être trouvée dans le fichier RuntimeEnabledFeatures.json5.
    disableblinkfeatures:
      description: >-
        Une liste de chaînes qui spécifie les fonctionnalités de clin sera désactivée séparés par. La liste complète des chaînes des fonctionnalités prises en charge peut être trouvée dans le fichier RuntimeEnabledFeatures.json5.
    guestinstance:
      description: >-
        Une valeur qui relie le webview à un webContents spécifique. Lors du chargement initial une webview un webContents nouveau est créé et cet attribut est défini sur son identificateur de l’instance. Définition de cet attribut sur une nouvelle ou existante webview la relie à la webContents existant qui restitue actuellement dans une webview différent. L’existant webview verra l’événement destroy et créera alors un nouveau webContents lorsqu’une nouvelle url est chargé.
    disableguestresize:
      description: >-
        Lorsque cet attribut est présent le contenu webview est empêché de redimensionnement lorsque l’élément webview lui-même est redimensionné. Ceci peut être utilisé en combinaison avec webContents.setSize pour redimensionner manuellement le contenu webview en réaction à un changement de taille de fenêtre. Cela peut rendre le redimensionnement rapide comparativement à s’appuyant sur les limites de l’élément webview pour redimensionner automatiquement le contenu.
  domEvents:
    load-commit:
      description: >-
        Déclenché lorsqu’une charge a commis. Ceci inclut la navigation dans le document actuel, mais aussi berceau des charges au niveau du document, mais n’inclut pas de ressource asynchrone charges.
    did-finish-load:
      description: >-
        Déclenché lorsque la navigation se fait, c'est-à-dire la filature de l’onglet cessera de tourner, et l’événement onload est distribué.
    did-fail-load:
      description: >-
        Cet événement est comme a-finition-load, mais déclenché lorsque le chargement a échoué ou a été annulé, par exemple window.stop() est appelée.
    did-frame-finish-load:
      description: Déclenché lorsqu’une trame a fait la navigation.
    did-start-loading:
      description: >-
        Correspond aux points dans le temps quand le cône de l’onglet commence à tourner.
    did-stop-loading:
      description: >-
        Correspond aux points dans le temps quand le cône de l’onglet s’arrête de tourner.
    did-get-response-details:
      description: >-
        Déclenché lorsque les détails concernant la ressource demandée est disponible. État indique que la connexion de socket pour télécharger la ressource.
    did-get-redirect-request:
      description: Déclenché lorsqu’une redirection a été reçue tout en demandant une ressource.
    dom-ready:
      description: Déclenché lorsque le document dans le cadre donné est chargé.
    page-title-updated:
      description: >-
        Déclenché lorsque le titre de page est défini pendant la navigation. explicitSet a la valeur false lorsque le titre est synthétisé à partir du fichier url.
    page-favicon-updated:
      description: Déclenché lorsque la page reçoit l’URL de favicon.
      returns:
        favicons:
          description: Tableau des URL.
    enter-html-full-screen:
      description: Déclenché lorsque la page active fullscreen déclenchée par l’API HTML.
    leave-html-full-screen:
      description: Déclenché lorsque la page laisse plein écran déclenchée par l’API HTML.
    console-message:
      description: >-
        Déclenché lorsque la fenêtre de commentaires enregistre un message sur la console. L’exemple de code suivant transfère tous les messages du journal dans la console de l’embedder sans égard pour le niveau de journalisation ou d’autres propriétés.
    found-in-page:
      description: Déclenché lorsqu’un résultat est disponible pour webview.findInPage demande.
      returns:
        result:
          properties:
            activeMatchOrdinal:
              description: Position de la correspondance active.
            matches:
              description: Nombre de Matches.
            selectionArea:
              description: Coordonnées de la première région de match.
    new-window:
      description: >-
        Déclenché lorsque la page de commentaires tente d’ouvrir une nouvelle fenêtre de navigateur. L’exemple de code suivant ouvre la nouvelle url dans le navigateur par défaut du système.
      returns:
        disposition:
          description: >-
            Peut être « par défaut », « onglet de premier plan », « onglet d’arrière-plan- », « nouvelle fenêtre », « enregistrer sur disque » et « l’autre ».
        options:
          description: >-
            Les options qui devraient être utilisées pour créer le nouveau « BrowserWindow ».
    will-navigate:
      description: >-
        Émis lorsqu’un utilisateur ou une page veut commencer la navigation. Cela peut arriver quand l’objet window.location est modifié ou qu'un utilisateur clique sur un lien dans la page. Cet événement n’émettra pas lorsque la navigation est démarrée via API comme <webview>.loadURL et <webview>.back. Il n’est également pas émis durant la navigation sur la page, par exemple en cliquant sur les liens d’ancrage ou d'une mise à jour du window.location.hash, utilisez l'événement did-navigate-in-page à la place. Appeler event.preventDefault() n’a PAS d’effet.
    did-navigate:
      description: >-
        Émis lorsqu’une navigation est fait. Cet événement n’est pas émis pour les navigations dans la page, par exemple en cliquant sur les liens d’ancrage ou mise à jour le window.location.hash. Utilisez n’a-naviguer-sur la page événement à cet effet.
    did-navigate-in-page:
      description: >-
        Émis lorsqu’un système de navigation dans la page qui s’est passé. En cas de navigation dans la page, l’URL de la page change mais ne provoque pas de navigation à l’extérieur de la page. Exemples de ce qui se produisent sont quand vous cliquez sur liens d’ancrage ou lorsque l’événement hashchange de DOM est déclenché.
    close:
      description: >-
        Déclenché lorsque la page de commentaires essaie de fermer lui-même. L’exemple de code suivant accède au webview à environ : vierges lorsque le client tente de fermer lui-même.
    ipc-message:
      description: >-
        Déclenché lorsque la page de commentaires a envoyé un message asynchrone à embedder page. Avec sendToHost méthode et ipc-message d’événement, vous pouvez communiquer facilement entre les pages de commentaires et embedder :
    crashed:
      description: Déclenché lorsque le processus de rendu est tombé en panne.
    gpu-crashed:
      description: Déclenché lorsque le processus du gpu crash.
    plugin-crashed:
      description: Déclenché lorsqu’un processus de plugin crash.
    destroyed:
      description: Déclenché lorsque le WebContents est détruit.
    media-started-playing:
      description: Émis lorsqu'un média se démarre.
    media-paused:
      description: Émis lorsque le média est suspendu ou terminé.
    did-change-theme-color:
      description: >-
        Émis lorsque le thème couleur de la page est changé. Il s’agit généralement de l'ajout d'une balise meta :
    update-target-url:
      description: >-
        Émis lorsque la souris passe sur un lien ou le clavier déplace le focus vers un lien.
    devtools-opened:
      description: Émis lorsque le DevTools est ouvert.
    devtools-closed:
      description: Émis lorsque le DevTools est fermé.
    devtools-focused:
      description: Émis lorsque le DevTools est actif / ouvert.