---
app:
  description: Control de ciclo de vida del evento de la aplicación.
  methods:
    quit:
      description: >-
        Intente cerrar todas las ventanas. Primero emitirá el evento antes de dejar de fumar. Si todas las ventanas están cerradas con éxito, se emitirá el evento dejar voluntad y por defecto la aplicación terminará. Este método garantiza que todos los beforeunload y descarga controladores de eventos se ejecutan correctamente. Es posible que una ventana cancela el dejar de fumar devolviendo false en el controlador de eventos beforeunload.
    exit:
      description: >-
        Sale inmediatamente con exitCode.  exitCode por defecto a 0. Todas las ventanas se cerrarán inmediatamente sin pedir usuario y los eventos antes de dejar de fumar y dejar de voluntad no se emitirá.
    relaunch:
      description: >-
        Relanza la aplicación cuando salga de la instancia actual. Por defecto la nueva instancia utiliza el mismo directorio de trabajo y los argumentos de línea de comandos con la instancia actual. Cuando se especifica args, los argumentos pasen como argumentos de línea de comandos en su lugar. Cuando execPath se especifica, se ejecutará el execPath para relanzar en vez de actual aprox. Nota que este método no salir de la aplicación cuando se ejecuta, usted tiene que llamar app.quit o termina después de llamar a app.relaunch para hacer la aplicación reiniciar. Cuando se llama a app.relaunch para varias veces, varias instancias se iniciará después de sale de la instancia actual. Un ejemplo de reiniciar la instancia actual inmediatamente y agregar un nuevo argumento de línea de comandos a la nueva instancia:
    isReady:
      returns:
        description: 'True si el electrón ha terminado de inicializar, falso en caso contrario.'
    focus:
      description: >-
        En Linux, se centra en la primera ventana visible. MacOS, es la aplicación de la activa. En Windows, se centra en la primera ventana de la aplicación.
    hide:
      description: Oculta todas las ventanas de aplicación sin minimizarlos.
    show:
      description: >-
        Muestra las ventanas de aplicación después de que se ocultaban. No se automáticamente centra les.
    getAppPath:
      returns:
        description: El directorio de aplicación actual.
    getPath:
      description: 'El nombre puede solicitar las siguientes rutas:'
      returns:
        description: >-
          Una ruta a un directorio o archivo asociado con el nombre. En caso de error se produce un Error.
    getFileIcon:
      description: >-
        Recupera el icono asociado de un sendero. En Windows, hay 2 tipos de iconos: en Linux y macOS, iconos dependen de la aplicación asociada con el tipo mime de archivo.
    setPath:
      description: >-
        Reemplaza la ruta a un directorio o un archivo asociado con nombre. Si la ruta especifica un directorio que no existe, se creará el directorio por este método. En caso de error se produce un Error. Sólo puede reemplazar rutas de un nombre definido en app.getPath. Por defecto, cookies y caché de páginas web se almacenarán en el directorio de datos de usuario. Si desea cambiar esta ubicación, usted tiene que reemplazar la ruta de acceso de datos de usuario antes de que se emite el evento ready del módulo de la aplicación.
    getVersion:
      returns:
        description: >-
          La versión de la aplicación cargada. Si no la versión se encuentra en el archivo de package.json de la aplicación, se devuelve la versión del paquete actual o ejecutable.
    getName:
      description: >-
        El campo Nombre de package.json suele ser un nombre corto de la minúscula, según la especificación de módulos de gestión. Generalmente usted debe también especificar un campo productName, que es nombre mayúsculas de su aplicación, y que será preferido sobre el nombre de electrón.
      returns:
        description: >-
          Nombre de la aplicación actual, que es el nombre de archivo de package.json de la aplicación.
    setName:
      description: Reemplaza el nombre de la aplicación actual.
    getLocale:
      description: >-
        Nota: Al distribuir su aplicación empaquetada, tienes que enviar también la carpeta de configuraciones regionales. Nota: En Windows tienes que llamarlo después de los eventos listos es emitida.
      returns:
        description: >-
          La aplicación configuración regional. Posibles valores de retorno están documentados aquí.
    addRecentDocument:
      description: >-
        Ruta se agrega a la lista de documentos recientes. Esta lista es administrada por el sistema operativo. En Windows se puede visitar la lista de la barra de tareas y en macOS se puede visitar del menú dock.
    clearRecentDocuments:
      description: Borra la lista de documentos recientes.
    setAsDefaultProtocolClient:
      description: >-
        Este método establece el ejecutable actual como el controlador predeterminado para un protocolo (también conocido como esquema URI). Permite integrar su aplicación más profunda en el sistema operativo. Una vez registrado, todos los enlaces con su Protocolo: / / se abrirá con el ejecutable actual. El enlace entero, incluyendo el protocolo, se pasará a su aplicación como parámetro. En Windows puede proporcionar camino de parámetros opcionales, la ruta a su ejecutable y args, una matriz de argumentos a pasar a su ejecutable cuando se lanza. Nota: En macOS, solo pueden registrarse los protocolos que se han añadido a info.plist de su aplicación, que no puede modificarse en tiempo de ejecución. Sin embargo puede cambiar el archivo con un editor de texto simple o secuencia de comandos durante el tiempo de construcción. Consulte la documentación de Apple para obtener más información. El API utiliza el registro de Windows y LSSetDefaultHandlerForURLScheme internamente.
      parameters:
        protocol:
          description: >-
            El nombre de su Protocolo, sin ': / /'. Si desea que su aplicación para manejar ' electrón: / /' enlaces, llamar a este método con 'electrón' como el parámetro.
        path:
          description: Por defecto es 'process.execPath'
        args:
          description: Por defecto es una matriz vacía
      returns:
        description: Si la llamada tuvo éxito.
    removeAsDefaultProtocolClient:
      description: >-
        Este método comprueba si el archivo ejecutable actual como el controlador predeterminado para un protocolo (también conocido como esquema URI). Si es así, eliminará la aplicación como el controlador predeterminado.
      parameters:
        protocol:
          description: 'El nombre de su Protocolo, sin '': / /''.'
        path:
          description: Por defecto es 'process.execPath'
        args:
          description: Por defecto es una matriz vacía
      returns:
        description: Si la llamada tuvo éxito.
    isDefaultProtocolClient:
      description: >-
        Este método comprueba si el archivo ejecutable actual es el controlador predeterminado para un protocolo (también conocido como esquema URI). De ser así, devolverá true. En caso contrario, devolverá false. Nota: En macOS, puede utilizar este método para comprobar si la aplicación ha sido registrada como el controlador de protocolo predeterminada para un protocolo. También puede verificar esto al marcar ~/Library/Preferences/com.apple.LaunchServices.plist en la máquina de macOS. Consulte la documentación de Apple para obtener más información. El API utiliza el registro de Windows y LSCopyDefaultHandlerForURLScheme internamente.
      parameters:
        protocol:
          description: 'El nombre de su Protocolo, sin '': / /''.'
        path:
          description: Por defecto es 'process.execPath'
        args:
          description: Por defecto es una matriz vacía
    setUserTasks:
      description: >-
        Agrega tareas a la categoría de las tareas de la JumpList de Windows. tareas es una matriz de objetos Task. Nota: Si desea personalizar la lista de salto más utilizan app.setJumpList(categories) en lugar de otro.
      parameters:
        tasks:
          description: Matriz de objetos de 'Tarea'
      returns:
        description: Si la llamada tuvo éxito.
    getJumpListSettings:
      returns:
        properties:
          - 
            description: >-
              El número mínimo de elementos que se mostrarán en la Jump List (para una descripción más detallada de este valor consulte la).
          - 
            description: >-
              Matriz de objetos JumpListItem que corresponden a elementos que el usuario ha eliminado explícitamente de categorías personalizadas en la Jump List. Estos artículos deben no volver a añadirse a la Jump List en la llamada a app.setJumpList(), Windows no mostrará ninguna categoría personalizada que contiene alguno de los elementos quitados.
    setJumpList:
      description: >-
        Establece o elimina un personalizado Jump List para la solicitud y devuelve una de las siguientes cadenas: si categorías es null el previamente fijado saltar lista personalizada (si existe) será sustituida por el estándar Jump List de la aplicación (gestionada por Windows). Nota: Si un objeto JumpListCategory no tiene ni el tipo ni el conjunto de propiedades de nombre entonces su tipo se asume que las tareas. Si se establece la propiedad name, pero se omite la propiedad type el tipo se asume que para ser por encargo. Nota: Los usuarios pueden quitar elementos de categorías personalizadas, y Windows no permitirá que un elemento quitado para agregarse a una categoría personalizada hasta después de la próxima convocatoria exitosa a app.setJumpList(categories). Cualquier intento de volver a agregar un elemento eliminado antes de lo que se traducirá en la categoría personalizada toda ser omitida de la lista de salto a una categoría personalizada. La lista de artículos sacados se puede obtener utilizando app.getJumpListSettings(). Este es un ejemplo muy simple de crear una lista personalizada de salto:
      parameters:
        categories:
          description: o 'null' Array de objetos 'JumpListCategory'.
    makeSingleInstance:
      description: >-
        Este método hace que su aplicación una aplicación de instancia única - en lugar de permitir múltiples instancias de la aplicación a ejecutar, Esto garantizará que se ejecuta sólo una instancia única de su aplicación, y otros casos esta instancia y la salida de la señal. devolución de llamada se llamará con callback (argv, workingDirectory) cuando se ejecuta una segunda instancia. argv es un Array de argumentos de línea de comandos de la segunda instancia, y workingDirectory es su directorio de trabajo actual. Generalmente aplicaciones responden a esto haciendo su ventana principal centrado y no minimizado. La devolución de llamada está garantizado para ser ejecutado después de que el evento listo de aplicación obtiene emitido. Este método devuelve false si su proceso es la instancia primaria de la aplicación y su aplicación debe continuar la carga. Y devuelve true si el proceso ha enviado sus parámetros a otra instancia, y usted debe inmediatamente dejar de fumar. En macOS el sistema aplica la única instancia automáticamente cuando los usuarios intentan abrir una segunda instancia de su aplicación en el Finder, y emitirá los eventos open file y open url para. Sin embargo cuando los usuarios comienzan su aplicación en línea de comandos se evitarse mecanismo de única instancia del sistema y tienes que usar este método para asegurarse de única instancia. Un ejemplo de activación de la ventana de la instancia principal cuando se inicia una segunda instancia:
      parameters:
        callback:
          parameters:
            argv:
              description: Una matriz de argumentos de línea de comandos de la segunda instancia
            workingDirectory:
              description: Directorio de trabajo de la segunda instancia
      returns:
        description: '.'
    releaseSingleInstance:
      description: >-
        Libera todos los bloqueos que fueron creados por makeSingleInstance. Esto permitirá que múltiples instancias de la aplicación se ejecute una vez más lado a lado.
    setUserActivity:
      description: >-
        Crea un NSUserActivity y se establece como la actividad actual. La actividad es elegible para la transferencia a otro dispositivo después.
      parameters:
        type:
          description: Identifica a la actividad. Mapas de a.
        userInfo:
          description: Estado de la aplicación específica para almacenar para su uso por otro dispositivo.
        webpageURL:
          description: >-
            La página web para cargar en el navegador si no aplicación adecuada está instalado en el dispositivo de reasumir. El esquema debe ser 'http' o 'https'.
    getCurrentActivityType:
      returns:
        description: El tipo de la actividad de ejecución.
    setAppUserModelId:
      description: Cambia el ID de aplicación usuario modelo a id.
    importCertificate:
      description: >-
        Las importaciones almacenar el certificado en formato pkcs12 en el certificado de la plataforma. devolución de llamada se llama con el resultado de la operación de importación, un valor de 0 indica éxito mientras que cualquier otro valor indica fracaso según net_error_list de cromo.
      parameters:
        options:
          properties:
            certificate:
              description: Ruta para el archivo pkcs12.
            password:
              description: Contraseña para el certificado.
        callback:
          parameters:
            result:
              description: Resultado de la importación.
    disableHardwareAcceleration:
      description: >-
        Desactiva la aceleración de hardware para la aplicación actual. Este método sólo se puede llamar antes de la aplicación esté lista.
    getAppMemoryInfo:
      description: >-
        Vuelve ProcessMemoryInfo []: Matriz de ProcessMemoryInfo objetos que corresponden a las estadísticas de uso de la memoria de todos los procesos asociados con la aplicación.
    setBadgeCount:
      description: >-
        Establece el contador de la divisa para la bobina actual configuración de la cuenta a 0 oculta la insignia. En macOS muestra en el icono del dock. En Linux solo funciona para el lanzador de la unidad, tenga en cuenta: lanzador de unidad requiere la existencia de un fichero .desktop para trabajar, para más información por favor lea la integración del entorno de escritorio.
      returns:
        description: Si la llamada tuvo éxito.
    getBadgeCount:
      returns:
        description: El valor mostrado en la placa del contador.
    isUnityRunning:
      returns:
        description: Si el entorno de escritorio es lanzador de unidad.
    getLoginItemSettings:
      description: >-
        Si usted proporciona opciones de ruta y args para app.setLoginItemSettings necesita pasar los mismos argumentos para openAtLogin ajustar correctamente. Nota: Esta API no tiene ningún efecto en estructuras MAS.
      parameters:
        options:
          properties:
            path:
              description: >-
                La ruta de acceso ejecutable para comparar contra. Por defecto process.execPath.
            args:
              description: >-
                Los argumentos de línea de comandos para comparar contra. Por defecto una matriz vacía.
      returns:
        properties:
          - 
            properties:
              - 
                description: >-
                  La ruta de acceso ejecutable para comparar contra. Por defecto process.execPath.
              - 
                description: >-
                  Los argumentos de línea de comandos para comparar contra. Por defecto una matriz vacía.
          - 
            description: True si la aplicación está preparada para abrir en el inicio de sesión.
          - 
            description: >-
              True si la aplicación está en abierto como oculto en el inicio de sesión. Esta configuración sólo es compatible con macOS.
          - 
            description: >-
              True si la aplicación se abre en el inicio de sesión automáticamente. Esta configuración sólo es compatible con macOS.
          - 
            description: >-
              True si la aplicación se abre como un punto de acceso oculto. Esto indica que la aplicación no debe abrir las ventanas en el inicio. Esta configuración sólo es compatible con macOS.
          - 
            description: >-
              True si la aplicación se abre un punto de inicio de sesión debe restaurar el estado de la sesión anterior. Esto indica que la aplicación debe restaurar las ventanas que estaban abiertas la última vez que se cerró la aplicación. Esta configuración sólo es compatible con macOS.
    setLoginItemSettings:
      description: >-
        Configuración de inicio de sesión de la aplicación artículo. Para trabajar con el autoUpdater del electrón en Windows, que utiliza el ardilla, usted querrá establecer la ruta de lanzamiento para Update.exe y pasar argumentos que especifican el nombre de la aplicación. Por ejemplo: Nota: esta API no tiene ningún efecto en estructuras MAS.
      parameters:
        settings:
          properties:
            openAtLogin:
              description: >-
                True para abrir la aplicación en Inicio de sesión falso para quitar la aplicación como un elemento de inicio de sesión. Por defecto false.
            openAsHidden:
              description: >-
                True para abrir la aplicación como ocultos. Por defecto false. El usuario puede editar esta configuración de las preferencias del sistema para que app.getLoginItemStatus () .wasOpenedAsHidden debe medirse cuando la aplicación está abierta a conocer el valor actual. Esta configuración sólo es compatible con macOS.
        path:
          description: El ejecutable que se ejecute durante el inicio de sesión. Por defecto 'process.execPath'.
        args:
          description: >-
            Los argumentos de línea de comandos para pasar al ejecutable. Por defecto una matriz vacía. Tenga cuidado de envolver trazados entre comillas.
    isAccessibilitySupportEnabled:
      returns:
        description: >-
          True si el soporte de accesibilidad de Chrome es habilitado, false lo contrario. Esta API devolverá true si se ha detectado el uso de tecnologías de asistencia, como lectores de pantalla. Ver https://www.chromium.org/developers/design-documents/accessibility para más detalles.
    setAboutPanelOptions:
      description: >-
        Establecer el acerca de las opciones del panel. Esto sobrescribirá los valores definidos en el archivo .plist de la aplicación. Consulte a la documentación de Apple para obtener más detalles.
      parameters:
        options:
          properties:
            applicationName:
              description: Nombre de la aplicación.
            applicationVersion:
              description: Versión de la aplicación.
            copyright:
              description: Información de copyright.
            credits:
              description: Información de crédito.
            version:
              description: Número de versión de compilación de la aplicación.
  events:
    will-finish-launching:
      description: >-
        Emitido una vez terminada la aplicación startup básico. En Windows y Linux, el evento de lanzamiento de voluntad final es el mismo que el evento ready; en macOS, este evento representa la notificación applicationWillFinishLaunching de NSApplication. Generalmente configurar escuchas para los eventos open file y open url aquí y empezar el reportero accidente y auto updater. En la mayoría de los casos, sólo debe hacer todo en el controlador de eventos listo.
    ready:
      description: >-
        Emitida cuando el electrón ha terminado de inicializar. En macOS, launchInfo tiene el userInfo de la NSUserNotification que se utilizó para abrir la aplicación, si se lanzó desde el centro de notificación. Usted puede llamar a app.isReady() para comprobar si ya ha despedido a este evento.
    window-all-closed:
      description: >-
        Emite cuando se han cerrado todas las ventanas. Si usted no se suscribe a este evento y todas las ventanas están cerradas, el comportamiento predeterminado es salir de la aplicación; sin embargo, si te suscribes, controlan si la aplicación se cierra o no. Si el usuario pulsa Cmd + Q, o el desarrollador llamado app.quit(), electrón primero intenta cerrar todas las ventanas y luego emitir el acto de voluntad de fumar, y en este caso el evento ventana todo cerrado no se emite.
    before-quit:
      description: >-
        Emitido antes de que inicie la aplicación, cierre sus ventanas. Llamar event.preventDefault() evitará el comportamiento por defecto, que es la aplicación de la terminación. Nota: Si la aplicación dejar fue iniciada por autoUpdater.quitAndInstall() entonces antes de salir se emite después de emitir cerca de evento en todas las ventanas y cerrarlas.
    will-quit:
      description: >-
        Emite cuando se han cerrado todas las ventanas y saldrá de la aplicación. Llamar event.preventDefault() evitará el comportamiento por defecto, que es la aplicación de la terminación. Consulte la descripción del evento ventana todo cerrado por las diferencias entre los eventos dejar voluntad y ventana todo cerrado.
    quit:
      description: Emite cuando la aplicación es dejar de fumar.
    open-file:
      description: >-
        Emite cuando el usuario desea abrir un archivo con la aplicación. El evento open file generalmente se emite cuando la aplicación está ya abierto y el sistema operativo quiere volver a utilizar la aplicación para abrir el archivo. Open file también se emite cuando un archivo se cae en la estación y aún no se ejecuta la aplicación. Asegúrese de escuchar para el evento open file muy temprano en su inicio de la aplicación para manejar este caso (incluso antes de que se emite el evento ready). Usted debe llamar a event.preventDefault() Si desea controlar este evento. En Windows, tienes que analizar process.argv (en el proceso principal) para obtener la ruta.
    open-url:
      description: >-
        Emite cuando el usuario quiere abrir una dirección URL con la aplicación. Archivo Info.plist de su aplicación debe definir el esquema de url dentro de la clave de CFBundleURLTypes y programar NSPrincipalClass a AtomApplication. Usted debe llamar a event.preventDefault() Si desea controlar este evento.
    activate:
      description: >-
        Emite cuando se activa la aplicación. Diversas acciones pueden desencadenar este evento, como el lanzamiento de la aplicación por primera vez, intentar volver a iniciar la aplicación cuando ya está corriendo, o haciendo clic en la barra de tareas icono o dock de la aplicación.
    continue-activity:
      description: >-
        Emitidos durante entrega cuando una actividad de un dispositivo diferente desea reanudar. Usted debe llamar a event.preventDefault() Si desea controlar este evento. Una actividad de usuario puede ser continuada solamente en una aplicación que tiene el desarrollador mismo equipo ID como aplicación de fuente de la actividad y que soporta el tipo de actividad. Apoyo actividad tipos se especifican en el Info.plist de la aplicación bajo la clave NSUserActivityTypes.
      returns:
        type:
          description: Una cadena que identifica la actividad. Mapas de a.
        userInfo:
          description: >-
            Contiene el estado de la aplicación específica almacenada por la actividad en otro dispositivo.
    browser-window-blur:
      description: Emite cuando un browserWindow llega borrosa.
    browser-window-focus:
      description: Emite cuando obtiene un browserWindow.
    browser-window-created:
      description: Emite cuando se crea un nuevo browserWindow.
    web-contents-created:
      description: Emite cuando se crea un nuevo webContents.
    certificate-error:
      description: >-
        Emite cuando se ha podido verificar el certificado para la dirección url, a confiar en el certificado que debe evitar el comportamiento predeterminado con event.preventDefault() y llamar a callback(true).
      returns:
        error:
          description: El código de error
        callback:
          parameters:
            isTrusted:
              description: Considerar el certificado como de confianza
    select-client-certificate:
      description: >-
        Emite cuando se solicite un certificado de cliente. La url corresponde a la entrada de navegación solicitando el certificado de cliente y devolución de llamada puede ser llamado con una entrada filtrada de la lista. Utilizando event.preventDefault() evita que la aplicación utiliza el primer certificado de la tienda.
    login:
      description: >-
        Cuando webContents quiere hacer basic auth. El comportamiento predeterminado es cancelar todas las legalizaciones, para anular esto debe evitar el comportamiento predeterminado con event.preventDefault() y devolución de llamada (nombre de usuario, contraseña) con las credenciales de llamada.
    gpu-process-crashed:
      description: Emitida cuando la gpu de proceso se bloquea o se mata.
    accessibility-support-changed:
      description: >-
        Emite cuando cambia el soporte de accesibilidad de Chrome. Este evento se desencadena cuando tecnologías de asistencia, como lectores de pantalla, están habilitadas o desactivados. Ver https://www.chromium.org/developers/design-documents/accessibility para más detalles.
      returns:
        accessibilitySupportEnabled:
          description: >-
            'verdadero' cuando el soporte de accesibilidad de Chrome es habilitado, 'falso' de otra manera.
  properties:
    commandLine:
      properties:
        appendSwitch:
          description: >-
            Añadir un interruptor (con el valor opcional) a la línea de comandos del cromo. Nota: Esto no afectará a process.argv y es utilizado principalmente por los desarrolladores para controlar algunos comportamientos de cromo de bajo nivel.
          parameters:
            switch:
              description: Un interruptor de línea de comandos
            value:
              description: Un valor para el cambio dado
        appendArgument:
          description: >-
            Añadir un argumento de línea de comandos del cromo. El argumento se cita correctamente. Nota: Esto no afecta process.argv.
          parameters:
            value:
              description: El argumento para añadir a la línea de comandos
    dock:
      properties:
        bounce:
          description: >-
            Cuando se pasa la crítica, el icono despedirá hasta que la aplicación se convierte en activa o se cancela la solicitud. Cuando se pasa información, despedirá el icono durante un segundo. Sin embargo, la petición permanece activa hasta que la aplicación se convierte en activa o se cancela la solicitud.
          parameters:
            type:
              description: >-
                Puede ser 'crítico' o 'informativos'. El valor predeterminado es 'informativo'
          returns:
            description: un identificador que representa a la petición.
        cancelBounce:
          description: Cancelar el rebote de id.
        downloadFinished:
          description: >-
            Rebota la pila de descargas si la ruta está dentro de la carpeta de descargas.
        setBadge:
          description: Establece la cadena que se mostrará en el área de expedición de la base.
        getBadge:
          returns:
            description: La cadena insignia de la estación.
        hide:
          description: Oculta el icono.
        show:
          description: Muestra el icono del dock.
        isVisible:
          returns:
            description: >-
              Si el icono es visible. La llamada app.dock.show() es asincrónica, por lo que este método no puede devolver true inmediatamente después de que llame.
        setMenu:
          description: Establece el menú de base de la aplicación.
        setIcon:
          description: Establece la imagen asociada a este icono.
autoUpdater:
  description: Permiten que aplicaciones que se actualizan automáticamente.
  methods:
    setFeedURL:
      description: Establece la dirección url e inicializar el actualizador automático.
      parameters:
        requestHeaders:
          description: Encabezados de petición HTTP.
    getFeedURL:
      returns:
        description: La actualización de alimentación URL.
    checkForUpdates:
      description: >-
        Solicita al servidor si hay actualizaciones. Usted debe llamar a setFeedURL antes de utilizar este API.
    quitAndInstall:
      description: >-
        Se reinicia la aplicación y la actualización se instala después de ha descargado. Debería llamarse solamente después de actualización descargar ha sido emitido. Nota: autoUpdater.quitAndInstall() cerrar todas las ventanas de aplicación en primer lugar y sólo emiten el evento antes de dejar de fumar en la aplicación después de eso. Esto es diferente de la secuencia de evento normal de dejar de fumar.
  events:
    error:
      description: Emite cuando hay un error al actualizar.
    checking-for-update:
      description: Emite al comprobar si una actualización ha comenzado.
    update-available:
      description: >-
        Emite cuando hay una actualización disponible. La actualización se descargará automáticamente.
    update-not-available:
      description: Emite cuando no hay ninguna actualización disponible.
    update-downloaded:
      description: >-
        Emite cuando se ha descargado una actualización. En Windows sólo releaseName está disponible.
BrowserView:
  description: Crear y controlar puntos de vista.
  constructorMethod:
    parameters:
      - 
        properties:
          - 
            description: Véase.
  instanceMethods:
    setAutoResize:
      parameters:
        options:
          properties:
            width:
              description: >-
                Si es true, anchura de la vista crecen y decrecen junto a la ventana. false por defecto.
            height:
              description: >-
                Si es true, altura de la vista crecen y decrecen junto a la ventana. false por defecto.
    setBounds:
      description: >-
        Redimensiona y mueve el punto de vista a los límites suministrados en relación con la ventana.
    setBackgroundColor:
      parameters:
        color:
          description: 'Color en forma ''#aarrggbb'' o ''#argb''. El canal alfa es opcional.'
  instanceProperties:
    webContents:
      description: Un objeto de WebContents de este punto de vista.
    id:
      description: Un entero que representa el identificador exclusivo de la vista.
BrowserWindow:
  description: Crear y controlar ventanas del navegador.
  staticMethods:
    getAllWindows:
      returns:
        description: Matriz de todas las ventanas abiertas del navegador.
    getFocusedWindow:
      returns:
        description: >-
          La ventana que se centra en esta aplicación, de lo contrario, devuelve null.
    fromWebContents:
      returns:
        description: La ventana que posee el webContents dado.
    fromId:
      returns:
        description: La ventana con el dicho id.
    addDevToolsExtension:
      description: >-
        Agrega DevTools extensión situado en el camino y devuelve el nombre de la extensión. La extensión será recordada por lo que sólo necesitará llamar a la API una vez, esta API no es para uso de la programación. Si intenta agregar una extensión que ya ha sido cargada, este método no volver y entrar en su lugar una advertencia a la consola. El método también devuelve no si manifiesto de la extensión falta o está incompleto. Nota: Esta API no se puede llamar antes de que se emite el evento ready del módulo de la aplicación.
    removeDevToolsExtension:
      description: >-
        Quitar una extensión DevTools por nombre. Nota: Esta API no se puede llamar antes de que se emite el evento ready del módulo de la aplicación.
    getDevToolsExtensions:
      description: >-
        Para comprobar si se ha instalado una extensión DevTools puede ejecutar lo siguiente: Nota: esta API no puede ser llamado antes de que se emite el evento ready del módulo de la aplicación.
      returns:
        description: >-
          Las claves son los nombres de extensión y cada valor es un objeto que contiene propiedades nombre y versión.
  constructorMethod:
    parameters:
      - 
        properties:
          - 
            description: Ancho de la ventana en píxeles. Por defecto es 800.
          - 
            description: Altura de la ventana en píxeles. Valor predeterminado es 600.
          - 
            description: >-
              (si se usa y) Desplazamiento izquierdo de la ventana de la pantalla. Por defecto es la ventana del centro.
          - 
            description: >-
              (si se utiliza x) Desplazamiento superior de la ventana de la pantalla. Por defecto es la ventana del centro.
          - 
            description: >-
              La anchura y la altura se utilizaría como tamaño de la página web, que significa tamaño de la ventana actual se incluyen el tamaño del marco de la ventana y ser un poco más grande. Valor predeterminado es false.
          - 
            description: Mostrar ventana en el centro de la pantalla.
          - 
            description: Anchura mínima de la ventana. Valor predeterminado es 0.
          - 
            description: Altura mínima de la ventana. Valor predeterminado es 0.
          - 
            description: Ancho máximo de la ventana. Valor predeterminado no es límite.
          - 
            description: Altura máxima de la ventana. Valor predeterminado no es límite.
          - 
            description: Si la ventana es de tamaño variable. Valor predeterminado es true.
          - 
            description: >-
              Si la ventana es movible. Esto no está implementado en Linux. Valor predeterminado es true.
          - 
            description: >-
              Si la ventana es minimizable. Esto no está implementado en Linux. Valor predeterminado es true.
          - 
            description: >-
              Si la ventana es maximizable. Esto no está implementado en Linux. Valor predeterminado es true.
          - 
            description: >-
              Si la ventana es con cierre. Esto no está implementado en Linux. Valor predeterminado es true.
          - 
            description: |2-
                      
              Whether the window can be focused. Default is true. On Windows setting focusable:
                false also implies setting skipTaskbar:
                  true. On Linux setting focusable: falso hace que la ventana deje interactuar con wm, por lo que la ventana siempre se mantendrá en la parte superior de todas las áreas de trabajo.
          - 
            description: >-
              Si la ventana debería permanecer siempre encima de otras ventanas. Valor predeterminado es false.
          - 
            description: >-
              Si la ventana debe mostrar en pantalla completa. Cuando explícitamente establecido en false el botón de pantalla completa se oculta o deshabilitada en macOS. Valor predeterminado es false.
          - 
            description: >-
              Si la ventana se puede poner en modo de pantalla completa. En macOS, también si el botón de maximizar/zoom debe alternar pantalla completa modo o maximizar la ventana. Valor predeterminado es true.
          - 
            description: Ya sea Mostrar la ventana en la barra de tareas. Valor predeterminado es false.
          - 
            description: El modo de quiosco. Valor predeterminado es false.
          - 
            description: Título de la ventana por defecto. Por defecto es "Electrón".
          - 
            description: >-
              El icono de la ventana. En Windows que se recomienda utilizar los iconos ICO para obtener mejores efectos visuales, usted puede también dejar indefinido por lo que se utilizará el icono del ejecutable.
          - 
            description: Si la ventana debe mostrarse cuando crea. Valor predeterminado es true.
          - 
            description: Especifique false para crear una. Valor predeterminado es true.
          - 
            description: Especificar la ventana padre. Valor predeterminado es null.
          - 
            description: >-
              Si se trata de una ventana modal. Esto sólo funciona cuando la ventana es una ventana secundaria. Valor predeterminado es false.
          - 
            description: >-
              Si la vista web acepta un solo evento de pulsación del ratón al mismo tiempo activa la ventana. Valor predeterminado es false.
          - 
            description: Si desea ocultar el cursor al escribir. Valor predeterminado es false.
          - 
            description: >-
              Ocultar automáticamente la barra de menú si se pulsa la tecla Alt. Valor predeterminado es false.
          - 
            description: >-
              Activar la ventana para cambiar el tamaño más grande que la pantalla. Valor predeterminado es false.
          - 
            description: >-
              Como el color de fondo de la ventana como valor Hexadecimal,
          - 
            description: >-
              Si la ventana debe tener una sombra. Esto se implementa sólo en macOS. Valor predeterminado es true.
          - 
            description: >-
              Las fuerzas usando tema oscuro de la ventana, sólo funciona en algunos GTK + 3 entornos de escritorio. Valor predeterminado es false.
          - 
            description: Hace que la ventana. Valor predeterminado es false.
          - 
            description: >-
              El tipo de ventana, por defecto es normal. Ver más sobre esto abajo.
          - 
            description: >-
              El estilo de barra de título de ventana. Valor predeterminado es default. Los valores posibles son:
            possibleValues:
              - 
                description: Resultados en el estándar gris opaco Mac barra de título.
              - 
                description: >-
                  Resultados en una barra de título oculto y un tamaño contenido en ventana, sin embargo, la barra de título todavía tiene los controles de ventana estándar ("semáforos") en la parte superior izquierda.
              - 
                description: >-
                  Resultados en una barra de título oculto con una mirada alternativa donde los botones del semáforo son inserción un poco más desde el borde de la ventana.
          - 
            description: >-
              Utilice el estilo WS_THICKFRAME para ventanas frameless en Windows, que añade el marco de la ventana estándar. Establecer a false Elimina animaciones de ventana y sombra de la ventana. Valor predeterminado es true.
          - 
            description: >-
              Añadir un tipo de efecto de vibración a la ventana, sólo en macOS. Puede ser basado en el aspecto, luz, oscuridad, barra de título, selección, menú, popover, barra lateral, medio-light o ultra oscuro.
          - 
            description: >-
              Controla el comportamiento en macOS cuando opción y haciendo clic el botón del semáforo verde en la barra de herramientas o haciendo clic en la ventana &gt; elemento de menú Zoom. Si es true, la ventana crecerá al recomendado: ancho de la página web cuando se haga zoom, false hará que se ampliar el ancho de la pantalla. Esto también afectará el comportamiento al llamar maximize() directamente. Valor predeterminado es false.
          - 
            description: >-
              Ficha nombre del grupo, permite abrir la ventana como una pestaña natural en macOS 10.12 +. Windows con el mismo identificador de tabulación se agruparán juntos.
          - 
            description: Configuración de características de la página web.
            properties:
              - 
                description: >-
                  Si desea habilitar DevTools. Si se establece en false, no puede utilizar BrowserWindow.webContents.openDevTools() para abrir DevTools. Valor predeterminado es true.
              - 
                description: Si está habilitada la integración del nodo. Valor predeterminado es true.
              - 
                description: >-
                  Si nodo integración es permitido en trabajadores de la web. Valor predeterminado es false. Más sobre esto puede encontrarse en.
              - 
                description: >-
                  Especifica una secuencia de comandos que se cargará antes otros scripts en la página. Esta secuencia de comandos siempre no tendrán acceso al nodo APIs importa si integración de nodo es activar o desactivar. El valor debe ser la ruta de archivo absoluta a la escritura. Cuando para integración del nodo, la escritura de la precarga puede reintroducir nodo símbolos globales hacia el ámbito global. Ver el ejemplo.
              - 
                description: >-
                  Si establece, esto será sandbox el procesador asociado a la ventana, lo que es compatible con el sandbox de Chromium OS-nivel y desactivar el motor de Node.js. Esto no es lo mismo que la opción de nodeIntegration y las APIs disponibles para el script de carga son más limitadas. Leer más sobre la opción. Esta opción es actualmente experimental y puede cambiar o ser quitado en el futuro versiones de electrón.
              - 
                description: >-
                  Se establece la sesión de la página. En lugar de pasar directamente el objeto Session, usted también puede optar por utilizar la opción de partición, que acepta una cadena de partición. Cuando vienen a sesión y partición, la sesión será preferido. Por defecto es la sesión por defecto.
              - 
                description: |2-
                          
                  "Sets the session used by the page according to the session's partition string. If partition starts with persist:, the page will use a persistent session available to all pages in the app with the same partition. If there is no persist": Prefijo de número, la página utilizará una sesión en la memoria. Asignando la misma partición, páginas múltiples pueden compartir la misma sesión. Por defecto es la sesión por defecto.
              - 
                description: >-
                  El factor de zoom por defecto de la página, 3.0 representa un 300%. Valor predeterminado es 1.0.
              - 
                description: Permite el soporte de JavaScript. Valor predeterminado es true.
              - 
                description: >-
                  Cuando es false, se desactivar la política del mismo origen (generalmente mediante pruebas de sitios web por personas) y establezca allowRunningInsecureContent en true si esta opción no se ha definido por el usuario. Valor predeterminado es true.
              - 
                description: >-
                  Permiten una página https ejecutar JavaScript, CSS o plugins de URL http. Valor predeterminado es false.
              - 
                description: Permite soporte para la imagen. Valor predeterminado es true.
              - 
                description: Hacer elementos TextArea de tamaño variable. Valor predeterminado es true.
              - 
                description: Permite el soporte de WebGL. Valor predeterminado es true.
              - 
                description: Permite WebAudio apoyo. Valor predeterminado es true.
              - 
                description: Si se debe habilitar plugins. Valor predeterminado es false.
              - 
                description: Habilita características experimentales del cromo. Valor predeterminado es false.
              - 
                description: >-
                  Habilita características de lona experimental del cromo. Valor predeterminado es false.
              - 
                description: >-
                  Permite desplazarse efecto rebote (bandas de goma) en macOS. Valor predeterminado es false.
              - 
                description: >-
                  Una lista de cadenas de funciones separadas por,, como CSSVariables, KeyboardEventKey para permitir. La lista completa de cadenas de funciones compatibles puede encontrarse en el archivo.
              - 
                description: >-
                  Una lista de cadenas de funciones separadas por,, como CSSVariables, KeyboardEventKey para desactivar. La lista completa de cadenas de funciones compatibles puede encontrarse en el archivo.
              - 
                description: Establece la fuente predeterminada para la familia de fuentes.
                properties:
                  - 
                    description: Valor predeterminado es Times New Roman.
                  - 
                    description: Valor predeterminado es Times New Roman.
                  - 
                    description: Por defecto es Arial.
                  - 
                    description: Valor predeterminado es Courier nuevo.
                  - 
                    description: Por defecto es Script.
                  - 
                    description: Por defecto al impacto.
              - 
                description: Por defecto es 16.
              - 
                description: Por defecto 13.
              - 
                description: Por defecto es 0.
              - 
                description: Por defecto a ISO-8859-1.
              - 
                description: >-
                  Si la válvula reguladora animaciones y temporizadores cuando la página se convierte en fondo. Por defecto es true.
              - 
                description: >-
                  Ya sea permitir representación fuera de la pantalla de la ventana del navegador. Por defecto false. Consulte la para obtener más detalles.
              - 
                description: >-
                  Si ejecutar APIs de electrón y especificado precarga script en un contexto independiente del JavaScript. Por defecto false. El contexto el script precarga carreras tendrá acceso completo al documento y la ventana globals que utilizará su propio conjunto de JavaScript builtins (Array, objeto, JSON, etc.) y será aislado de los cambios realizados en el entorno global de la página cargada. La API de electrones sólo estarán disponible en el script de precarga y no la página cargada. Esta opción debe utilizarse cuando la carga de contenidos remotos que potencialmente para que el contenido cargado no puede modificar el script de precarga y cualquier API de electrones se utiliza. Esta opción utiliza la misma técnica usada por. Para acceder a este contexto en el desarrollo de herramientas, seleccionar la entrada de 'Electrón aislado contexto' en el cuadro combinado en la parte superior de la pestaña consola. Esta opción es actualmente experimental y puede cambiar o ser quitado en el futuro versiones de electrón.
  instanceMethods:
    destroy:
      description: >-
        Cierre de fuerza el evento de ventana, la descarga y beforeunload no se emite para la página web y cierre evento también no se emitirá por esta ventana, pero garantiza que se emitirá el evento cerrado.
    close:
      description: >-
        Intente cerrar la ventana. Esto tiene el mismo efecto que un usuario manualmente, haga clic en el botón cerrar de la ventana. La página web aunque puede cancelar el cierre. Ver el evento close.
    focus:
      description: Se centra en la ventana.
    blur:
      description: Enfoque elimina de la ventana.
    isFocused:
      returns:
        description: Si la ventana está centrada.
    isDestroyed:
      returns:
        description: Si se destruye la ventana.
    show:
      description: Muestra y da foco a la ventana.
    showInactive:
      description: Muestra la ventana pero no enfoque en él.
    hide:
      description: Oculta la ventana.
    isVisible:
      returns:
        description: Si la ventana es visible para el usuario.
    isModal:
      returns:
        description: Si la ventana actual es una ventana modal.
    maximize:
      description: >-
        Maximiza la ventana. Esto también mostrará (pero no enfoque) la ventana si no es visualizada ya.
    unmaximize:
      description: Unmaximizes la ventana.
    isMaximized:
      returns:
        description: Si la ventana está maximizada.
    minimize:
      description: >-
        Minimiza la ventana. En algunas plataformas se mostrará la ventana minimizada en el Dock.
    restore:
      description: Restaura la ventana de estado minimizado a su estado anterior.
    isMinimized:
      returns:
        description: Si la ventana está minimizada.
    setFullScreen:
      description: Establece si la ventana debe estar en modo de pantalla completa.
    isFullScreen:
      returns:
        description: Si la ventana está en modo de pantalla completa.
    setAspectRatio:
      description: >-
        Esto hará que una ventana de mantener una relación de aspecto. El tamaño extra permite un desarrollador tener espacio, especificado en píxeles, no incluidos en los cálculos de relación de aspecto. Esta API ya tiene en cuenta la diferencia entre el tamaño de la ventana y su contenido. Considere una ventana normal con un reproductor de vídeo HD y controles asociados. Tal vez son 15 pixeles de los controles en el borde izquierdo, 25 píxeles de controles en el borde derecho y 50 píxeles de controles bajo el reproductor. Para mantener una relación de aspecto 16:9 (estándar cociente de aspecto para HD @1920 x 1080) en el reproductor de sí mismo le llamamos esta función con argumentos de 16/9 y [40, 50]. El segundo argumento no importa donde el extra ancho y la altura están a la vista del contenido, sólo que existen. Sólo en resumen las zonas de anchura y altura extras que tiene dentro de la vista del contenido general.
      parameters:
        aspectRatio:
          description: La relación de aspecto a mantener por parte de la vista del contenido.
        extraSize:
          description: >-
            El tamaño extra no debe ser incluido manteniendo la relación de aspecto.
    previewFile:
      description: Utiliza vista rápida para previsualizar un archivo en una ruta determinada.
      parameters:
        path:
          description: >-
            La ruta absoluta al archivo para escuchar con QuickLook. Esto es importante como Quick Look utiliza el nombre de archivo y la extensión de archivo en la ruta para determinar el tipo de contenido del archivo a abrir.
        displayName:
          description: >-
            El nombre del archivo a mostrar en la vista modal Quick Look. Esto es puramente visual y no afecta el tipo de contenido del archivo. Por defecto es 'camino'.
    closeFilePreview:
      description: Cierra el panel de vista rápida actualmente.
    setBounds:
      description: Redimensiona y mueve la ventana a los límites suministrados
    setContentBounds:
      description: >-
        Redimensiona y mueve el área de cliente de la ventana (por ejemplo, la página web) a los límites suministrados.
    setSize:
      description: Cambia el tamaño de la ventana para la anchura y la altura.
    getSize:
      returns:
        description: Contiene la anchura y la altura de la ventana.
    setContentSize:
      description: >-
        Cambia el tamaño de área de cliente de la ventana (por ejemplo, la página web) a la anchura y altura.
    getContentSize:
      returns:
        description: Contiene la anchura y la altura del área de cliente de la ventana.
    setMinimumSize:
      description: Establece el tamaño mínimo de la ventana a la anchura y altura.
    getMinimumSize:
      returns:
        description: Contiene anchura mínima y altura de la ventana.
    setMaximumSize:
      description: Establece el tamaño máximo de ventana en anchura y altura.
    getMaximumSize:
      returns:
        description: Contiene ancho máximo y la altura de la ventana.
    setResizable:
      description: Establece si la ventana puede ser redimensionada manualmente por el usuario.
    isResizable:
      returns:
        description: Si la ventana puede ser redimensionada manualmente por el usuario.
    setMovable:
      description: Establece si la ventana se puede mover por el usuario. En Linux no hace nada.
    isMovable:
      description: En Linux siempre devuelve true.
      returns:
        description: Si la ventana se puede mover por el usuario.
    setMinimizable:
      description: >-
        Establece si la ventana puede minimizarse manualmente por el usuario. En Linux no hace nada.
    isMinimizable:
      description: En Linux siempre devuelve true.
      returns:
        description: Si la ventana puede minimizarse manualmente por el usuario
    setMaximizable:
      description: >-
        Establece si la ventana puede ser maximizada manualmente por el usuario. En Linux no hace nada.
    isMaximizable:
      description: En Linux siempre devuelve true.
      returns:
        description: Si la ventana puede ser maximizada manualmente por el usuario.
    setFullScreenable:
      description: >-
        Establece si el botón de maximizar/zoom ventana cambia modo de pantalla completa o maximiza la ventana.
    isFullScreenable:
      returns:
        description: >-
          Si el botón de maximizar/zoom ventana cambia modo de pantalla completa o maximiza la ventana.
    setClosable:
      description: >-
        Establece si la ventana se puede cerrar manualmente por el usuario. En Linux no hace nada.
    isClosable:
      description: En Linux siempre devuelve true.
      returns:
        description: Si la ventana se puede cerrar manualmente por el usuario.
    setAlwaysOnTop:
      description: >-
        Establece si la ventana debe mostrar siempre encima de otras ventanas. Después de establecer esta opción, la ventana sigue siendo una ventana normal, no una ventana de herramientas que no se puede centrar en.
      parameters:
        level:
          description: >-
            Los valores son 'normal', 'flotantes', 'rasgada apagado menu', 'panel de modal', 'menú principal', 'estado', 'pop-up-menu', 'salvapantallas' y (Deprecated). El valor predeterminado es 'flotante'. Consulte la para obtener más detalles.
        relativeLevel:
          description: >-
            El número de capas superiores para configurar esta ventana en relación con el 'nivel' dado. El valor predeterminado es '0'. Tenga en cuenta que Apple desalienta a niveles superiores a 1 'salvapantallas'.
    isAlwaysOnTop:
      returns:
        description: Si la ventana está siempre encima de otras ventanas.
    center:
      description: Mueve ventana al centro de la pantalla.
    setPosition:
      description: Se mueve la ventana a x e y.
    getPosition:
      returns:
        description: Contiene la posición actual de la ventana.
    setTitle:
      description: Cambia el título de ventana nativo al título.
    getTitle:
      description: >-
        Nota: El título de la página web puede ser diferente del título de la ventana nativa.
      returns:
        description: El título de la ventana nativa.
    setSheetOffset:
      description: >-
        Cambia el punto de anclaje para las hojas en macOS. Por defecto, hojas se unen justo por debajo del marco de la ventana, pero puede desea que aparezcan debajo de una barra de herramientas de renderizado de HTML. Por ejemplo:
    flashFrame:
      description: Comienza o deja de parpadear la ventana para atraer la atención del usuario.
    setSkipTaskbar:
      description: Hace que la ventana no se muestran en la barra de tareas.
    setKiosk:
      description: Entra o sale del modo de quiosco.
    isKiosk:
      returns:
        description: Si la ventana está en modo quiosco.
    getNativeWindowHandle:
      description: >-
        El tipo nativo de la manija es HWND en Windows, NSView * en macOS y ventana (largo sin signo) en Linux.
      returns:
        description: El mango de la plataforma de la ventana.
    hookWindowMessage:
      description: >-
        Los ganchos de un mensaje de windows. La devolución de llamada se llama cuando se recibe el mensaje en el WndProc.
    isWindowMessageHooked:
      returns:
        description: true o false según si el mensaje.
    unhookWindowMessage:
      description: Desenganche el mensaje de la ventana.
    unhookAllWindowMessages:
      description: Desengancha todos los mensajes de ventana.
    setRepresentedFilename:
      description: >-
        Establece la ruta de acceso del archivo de la ventana representa, y el icono del archivo se mostrará en la barra de título de ventana.
    getRepresentedFilename:
      returns:
        description: Representa la ruta de acceso del archivo de la ventana.
    setDocumentEdited:
      description: >-
        Especifica si se ha editado el documento de la ventana y el icono en la barra de título se volverá gris cuando establecido en true.
    isDocumentEdited:
      returns:
        description: Si se ha editado el documento de la ventana.
    capturePage:
      description: 'Igual que webContents.capturePage ([correcto], devolución de llamada).'
      parameters:
        rect:
          description: Los límites de captura
    loadURL:
      description: >-
        Lo mismo que webContents.loadURL (url [, opciones]). La url puede ser una dirección remota (por ejemplo, http://) o una ruta a un archivo HTML local utiliza el protocolo file://. Para asegurar que el archivo URL se formatean correctamente, se recomienda utilizar el método de url.format del nodo: puede cargar una dirección URL mediante una petición POST con datos codificados en URL haciendo lo siguiente:
      parameters:
        options:
          properties:
            httpReferrer:
              description: Un HTTP Referrer url.
            userAgent:
              description: Un agente de usuario que origina la solicitud.
            extraHeaders:
              description: Encabezados adicionales separados por "\n"
            baseURLForDataURL:
              description: >-
                Url (con separador de ruta de acceso que se arrastra) para los archivos a cargar por la url de los datos de la base. Esto es necesario sólo si la dirección url especificada es un enlace de datos y necesita cargar otros archivos.
    reload:
      description: Lo mismo que webContents.reload.
    setMenu:
      description: >-
        Establece el menú como menú de la ventana de la barra, ajuste null eliminará la barra de menús.
    setProgressBar:
      description: >-
        Conjuntos de progresan valor en la barra de progreso. Intervalo válido es [0, 1.0]. Quitar el progreso cuando la barra progreso < 0; cambio a modo indeterminado progreso cuando &gt; 1. En Linux plataforma, sólo compatible con entorno de escritorio de la unidad, debe especificar el nombre del archivo *.desktop al campo desktopName en package.json. Por defecto, se asume app.getName () .desktop. En Windows, se puede pasar un modo. Valores aceptados ninguno, normal, indeterminado, error y se detuvo. Si se llama setProgressBar sin un conjunto de modo (pero con un valor dentro de la gama válida), se considerará normal.
      parameters:
        options:
          properties:
            mode:
              description: >-
                Modo de la barra de progreso. Puede ser ninguno, normal, indeterminado, error, o una pausa.
    setOverlayIcon:
      description: >-
        Establece una superposición de 16 x 16 píxeles hasta el actual icono de barra de tareas, generalmente utilizado para transmitir a algún tipo de estatus de la solicitud o pasivamente notificar al usuario.
      parameters:
        overlay:
          description: >-
            el icono para mostrar en la esquina inferior derecha del icono de la barra de tareas. Si este parámetro es 'null', se elimina la superposición de
        description:
          description: una descripción que se facilitará a los lectores de pantalla de accesibilidad
    setHasShadow:
      description: >-
        Establece si la ventana debe tener una sombra. Windows y Linux y no hace nada.
    hasShadow:
      description: En Windows y Linux siempre devuelve true.
      returns:
        description: Si la ventana tiene una sombra.
    setThumbarButtons:
      description: >-
        Añadir una barra de herramientas de miniatura con un conjunto especificado de botones a la imagen en miniatura de una ventana en un diseño de botón de barra de tareas. Devuelve que un objeto Boolean indica si la imagen se ha agregado con éxito. El número de botones en la barra de herramientas de miniatura debe ser no mayor que 7 por escaso margen. Una vez que configura la barra de herramientas de miniatura, la barra de herramientas no puede extraerse debido a limitación de la plataforma. Pero usted puede llamar a la API con una matriz vacía para limpiar los botones. Los botones es una matriz de objetos de botón: las banderas es una matriz que puede incluir la siguientes secuencias:
      returns:
        description: Si los botones se ha agregado correctamente
    setThumbnailClip:
      description: >-
        Establece la región de la ventana para mostrar como la imagen en miniatura aparece cuando se pasa sobre la ventana en la barra de tareas. Puede restablecer la imagen de que la ventana entera especificando una región vacía: {x: 0, y: 0, ancho: 0, altura: 0}.
      parameters:
        region:
          description: Región de la ventana
    setThumbnailToolTip:
      description: >-
        Establece la descripción que aparece cuando se pasa sobre la miniatura de la ventana en la barra de tareas.
    setAppDetails:
      description: >-
        Establece las propiedades para el botón de barra de herramientas de la ventana. Nota: relaunchCommand y relaunchDisplayName deben siempre establecerse juntos. Si una de esas propiedades no se ha establecido, ni se utiliza.
      parameters:
        options:
          properties:
            appId:
              description: >-
                De la ventana. Ha establecido, de lo contrario las otras opciones no tendrá efecto.
            appIconPath:
              description: De la ventana.
            appIconIndex:
              description: >-
                Índice del icono en appIconPath. Ignorada cuando no está appIconPath. Valor predeterminado es 0.
            relaunchCommand:
              description: De la ventana.
            relaunchDisplayName:
              description: De la ventana.
    showDefinitionForSelection:
      description: Lo mismo que webContents.showDefinitionForSelection().
    setIcon:
      description: Icono de la ventana de cambios.
    setAutoHideMenuBar:
      description: >-
        Establece si la barra de menús de la ventana debe ocultarse automáticamente. Una vez la barra de menús sólo mostrará cuando los usuarios presionan la tecla Alt. Si ya está visible la barra de menú, llamada setAutoHideMenuBar(true) no ocultar inmediatamente.
    isMenuBarAutoHide:
      returns:
        description: Si la barra de menú automáticamente se oculta.
    setMenuBarVisibility:
      description: >-
        Establece si la barra de menús debe ser visible. Si la barra de menús es ocultar automáticamente, los usuarios todavía pueden traer la barra de menú oprimiendo la tecla Alt.
    isMenuBarVisible:
      returns:
        description: Si la barra de menús es visible.
    setVisibleOnAllWorkspaces:
      description: >-
        Establece si la ventana debe ser visible en los espacios de trabajo. Nota: Esta API no hace nada en Windows.
    isVisibleOnAllWorkspaces:
      description: 'Nota: Esta API siempre devuelve false en Windows.'
      returns:
        description: Si la ventana es visible en los espacios de trabajo.
    setIgnoreMouseEvents:
      description: >-
        Hace que la ventana ignorar todos los eventos de ratón. Todos los eventos de ratón ha pasado en esta ventana se pasará a la ventana, debajo de esta ventana, pero si esta ventana tiene el foco, todavía va a recibir eventos de teclado.
    setContentProtection:
      description: >-
        Evita que el contenido de la ventana de ser capturado por otras aplicaciones. En macOS establece sharingType de NSWindow en NSWindowSharingNone. En Windows llama SetWindowDisplayAffinity con WDA_MONITOR.
    setFocusable:
      description: Cambia si se puede centrar la ventana.
    setParentWindow:
      description: >-
        Padre de juegos como actual del padre de ventana, pasando null convertirá ventana actual en una ventana de nivel superior.
    getParentWindow:
      returns:
        description: La ventana primaria.
    getChildWindows:
      returns:
        description: Todas las ventanas de niño.
    setAutoHideCursor:
      description: Controla si se va a ocultar el cursor al escribir.
    setVibrancy:
      description: >-
        Añade un efecto de vibración a la ventana del navegador. Pasar null o una cadena vacía se eliminará el efecto de vibración en la ventana.
      parameters:
        type:
          description: >-
            Puede ser 'comparecencia', 'luz', 'oscuro', 'barra de título', 'selección', 'menu', 'popover', 'barra lateral', 'luz de medio' o 'ultra oscuro'. Consulte la para obtener más detalles.
    setTouchBar:
      description: >-
        Establece el diseño huecas de la ventana actual. Especificar null o undefined borra la barra táctil. Este método sólo tiene efecto si la máquina dispone de un bar de toque y se está ejecutando en el 10.12.1+ de macOS. Nota: La API de huecas es actualmente experimental y puede cambiar o ser quitado en el futuro versiones de electrón.
    setBrowserView:
      description: >-
        Nota: La API de BrowserView es actualmente experimental y puede cambiar o ser quitado en el futuro versiones de electrón.
  instanceProperties:
    webContents:
      description: >-
        Un objeto de WebContents que esta ventana posee. Todas las páginas web relacionadas con eventos y operaciones se hará a través de él. Consulte la documentación de webContents de sus métodos y eventos.
    id:
      description: Un entero que representa el ID de la ventana.
  instanceEvents:
    page-title-updated:
      description: >-
        Emitida cuando el documento cambió su título, llamada event.preventDefault() evitará que título de la ventana nativa de cambio.
    close:
      description: >-
        Emite cuando la ventana se va a cerrar. Se emite antes de la beforeunload y evento de descarga de la event.preventDefault() llamar a DOM. se cancela el cierre. Generalmente se desea utilizar el controlador beforeunload para decidir si debe cerrarse la ventana, que también se llama cuando la ventana se vuelve a cargar. En electrónica, regresa un valor undefined que sería cancelar el cierre. Por ejemplo:
    closed:
      description: >-
        Emite cuando la ventana está cerrada. Después de haber recibido este evento debe eliminar la referencia a la ventana y evitar el uso de más.
    session-end:
      description: >-
        Emite cuando sesión ventana va a terminar debido a la fuerza apagado o máquina reinicie o cierre sesión sesión.
    unresponsive:
      description: Emite cuando la página web deja de responder.
    responsive:
      description: Emite cuando la página no responde responde otra vez.
    blur:
      description: Emite cuando la ventana pierde el foco.
    focus:
      description: Emite cuando la ventana adquiere foco.
    show:
      description: Emite cuando se muestra la ventana.
    hide:
      description: Emite cuando la ventana está oculta.
    ready-to-show:
      description: >-
        Emite cuando la página web se ha vuelto (aunque no está demostrado) y ventana puede mostrarse sin un flash visual.
    maximize:
      description: Emite cuando la ventana está maximizada.
    unmaximize:
      description: Emite cuando sale de la ventana de un estado maximizado.
    minimize:
      description: Emite cuando la ventana está minimizada.
    restore:
      description: Emite cuando se restaura la ventana de un estado minimizado.
    resize:
      description: Emite cuando se cambia de tamaño la ventana.
    move:
      description: >-
        Emite cuando se mueve la ventana a una nueva posición. Nota: En macOS este evento es solamente un alias de movido.
    moved:
      description: Emitido una vez cuando la ventana se desplaza a una nueva posición.
    enter-full-screen:
      description: Emite cuando la ventana entra en un estado de pantalla completa.
    leave-full-screen:
      description: Emite cuando la ventana deja un estado de pantalla completa.
    enter-html-full-screen:
      description: >-
        Emite cuando la ventana entra en un estado de pantalla completa activado por la API de HTML.
    leave-html-full-screen:
      description: >-
        Emite cuando la ventana deja un estado de pantalla completa activado por la API de HTML.
    app-command:
      description: >-
        Emite cuando se invoca un comando de la aplicación. Éstos están típicamente relacionadas con las teclas multimedia del teclado o comandos del navegador, así como el botón "Back" en algunos ratones en Windows. Comandos son minúsculas, subrayados se sustituyen por guiones y se quitó el prefijo APPCOMMAND_. por ejemplo, APPCOMMAND_BROWSER_BACKWARD se emite como navegador-al revés.
    scroll-touch-begin:
      description: Emite cuando ha comenzado la fase de la rueda scroll.
    scroll-touch-end:
      description: Emite cuando ha terminado la fase de evento de rueda de desplazamiento.
    scroll-touch-edge:
      description: >-
        Emite cuando fase desplazamiento rueda presentó al llegar al borde del elemento.
    swipe:
      description: >-
        Emitidos en el pase de 3 dedos. Direcciones posibles son arriba, derecha, abajo, izquierdas.
    sheet-begin:
      description: Emite cuando abre la ventana de una hoja.
    sheet-end:
      description: Emite cuando la ventana ha cerrado una hoja.
BrowserWindowProxy:
  description: Manipular la ventana del navegador infantil
  instanceMethods:
    blur:
      description: Enfoque elimina de la ventana secundaria.
    close:
      description: Con fuerza, cierra la ventana de niño sin llamar a su evento de descarga.
    eval:
      description: Evalúa el código en la ventana secundaria.
    focus:
      description: Se centra la ventana secundaria (trae la ventana al frente).
    print:
      description: Invoca el cuadro de diálogo impresión en la ventana del niño.
    postMessage:
      description: >-
        Envía un mensaje a la ventana secundaria con el origen especificado o * ninguna preferencia de origen. Además de estos métodos, la ventana secundaria implementa window.opener objeto con ninguna propiedad y un método único.
  instanceProperties:
    closed:
      description: Un valor booleano que se establece en true después obtiene la ventana secundaria.
Certificate:
  properties:
    data:
      description: Datos codificado de la PEM
    issuer:
      description: Principal emisor
    issuerName:
      description: Nombre común del emisor
    issuerCert:
      description: Emisor del certificado (si no uno firmado)
    subject:
      description: Principal tema
    subjectName:
      description: Nombre común del sujeto
    serialNumber:
      description: Cadena de valor hexadecimal representada
    validStart:
      description: Fecha de inicio del certificado sea válido en segundos
    validExpiry:
      description: Fecha de vencimiento del certificado sea válido en segundos
    fingerprint:
      description: Huella digital del certificado de
CertificatePrincipal:
  properties:
    commonName:
      description: Nombre común
    organizations:
      description: Nombres de la organización
    organizationUnits:
      description: Nombres de unidad de organización
    locality:
      description: Localidad
    state:
      description: Estado o provincia
    country:
      description: País o región
ClientRequest:
  description: Hacer solicitudes HTTP/HTTPS.
  constructorMethod:
    parameters:
      - 
        description: >-
          Si 'opciones' es una cadena, se interpreta como la URL de solicitud. Si es un objeto, se pretende especificar completamente una solicitud HTTP a través de las siguientes propiedades:
  instanceMethods:
    setHeader:
      description: >-
        Agrega un encabezado HTTP adicional. El nombre del encabezado se publicó sin minúsculas. Puede ser llamado solamente antes de la primera escritura. Llamar a este método después de la primera escritura generará un error. Si el valor pasado no es una cadena, llamará a su método toString() para obtener el valor final.
      parameters:
        name:
          description: Un nombre de encabezado HTTP adicional.
        value:
          description: Un valor del encabezado HTTP adicional.
    getHeader:
      description: Devuelve objeto - el valor de un nombre de encabezado adicional establecido anteriormente.
      parameters:
        name:
          description: Especifique un nombre de encabezado adicional.
    removeHeader:
      description: >-
        Quita un nombre de encabezado adicional establecido anteriormente. Este método puede ser llamado solamente antes de la primera escritura. Tratando de llamar después de la primera escritura generará un error.
      parameters:
        name:
          description: Especifique un nombre de encabezado adicional.
    write:
      description: >-
        callback es esencialmente una función ficticia en el propósito de mantener la semejanza con la API de Node.js. Se llama asincrónicamente en el siguiente tick después pedazo contenido han sido entregados a la capa de red de cromo. Contrario a la aplicación de Node.js, no está garantizado que pedazo contenido han sido volcadas en el cable antes de devolución de llamada. Agrega un paquete de datos para el cuerpo de la solicitud. La primera operación de escritura puede provocar los encabezados de solicitud que se publicará en el alambre. Después de la primera operación de escritura, no está permitido añadir o quitar un encabezado personalizado.
      parameters:
        chunk:
          description: >-
            Un paquete de datos del cuerpo de la solicitud. Si es una cadena, se convierte en un búfer mediante la codificación especificada.
        encoding:
          description: >-
            Utilizado para convertir trozos de cadena de objetos de búfer. Por defecto 'utf-8'.
        callback:
          description: Llamado después de la operación de escritura.
    end:
      description: >-
        Envía el último paquete de los datos de la solicitud. No se permitirá operaciones posteriores de la escritura o al final. El evento final se emite justo después de la operación final.
    abort:
      description: >-
        Cancela una transacción HTTP actual. Si la solicitud ya ha emitido el evento close, la operación de interrupción no tendrá efecto. De lo contrario un evento permanente emitirá interrupción y cierre de eventos. Además, si hay un objeto de respuesta permanente, emitirá el evento abortado.
    followRedirect:
      description: >-
        Sigue cualquier petición de redirección diferido cuando el modo de redirección es manual.
  instanceProperties:
    chunkedEncoding:
      description: >-
        Un valor booleano que especifica si la solicitud utilice HTTP chunked transfer encoding o no. Por defecto false. La propiedad es de lectura y escritura, sin embargo se puede establecer solamente antes de la primera operación como los encabezados HTTP de la escritura no se ponen todavía en el alambre. Tratando de establecer la propiedad chunkedEncoding después de la primera escritura generará un error. Utilizando la codificación fragmentada es muy recomendable si desea enviar un pedido grande como datos serán transmitidos internamente en pequeños pedazos en lugar de ser protegido en la memoria de proceso electrónico.
  instanceEvents:
    response:
      returns:
        response:
          description: Un objeto que representa el mensaje de respuesta HTTP.
    login:
      description: >-
        Emite cuando un proxy de autenticación está pidiendo las credenciales de usuario. La función de devolución de llamada se espera a recibir la llamada con las credenciales de usuario: vacías credenciales será cancelar la solicitud y reportar un error de autenticación en el objeto respuesta:
    finish:
      description: >-
        Emitido justo después de que el último paquete de datos de la solicitud se ha escrito en el objeto de la solicitud.
    abort:
      description: >-
        Emite cuando se cancela la solicitud. El evento de interrupción no será destituido si la petición ya está cerrada.
    error:
      description: >-
        Emitido cuando el módulo de red no puede emitir una solicitud de red. Por lo general cuando el objeto de la solicitud emite un evento de error, posteriormente seguirá un evento close y no se proporcionará ningún objeto de respuesta.
      returns:
        error:
          description: un objeto de error proporciona alguna información acerca de la falla.
    close:
      description: >-
        Emitido como el último evento en la transacción de solicitud-respuesta HTTP. El evento close indica que no hay más eventos se emitirá en los objetos de la petición o respuesta.
    redirect:
      description: >-
        Emite cuando la redirección y el modo manual. Llamar request.followRedirect continuará con la redirección.
clipboard:
  description: Realizar la copia y pegar operaciones con el Portapapeles del sistema.
  methods:
    readText:
      returns:
        description: El contenido en el portapapeles como texto sin formato.
    writeText:
      description: Escribe el texto en el portapapeles como texto sin formato.
    readHTML:
      returns:
        description: El contenido en el portapapeles como marcado.
    writeHTML:
      description: Escribe el marcado en el portapapeles.
    readImage:
      returns:
        description: El contenido de la imagen en el portapapeles.
    writeImage:
      description: Escribe la imagen en el portapapeles.
    readRTF:
      returns:
        description: El contenido en el portapapeles como RTF.
    writeRTF:
      description: Escribe el texto en el portapapeles en RTF.
    readBookmark:
      description: >-
        Devuelve un objeto que contiene claves de título y la url que representa el marcador en el portapapeles. Los valores de título y url serán cadenas vacías cuando el marcador no está disponible.
    writeBookmark:
      description: >-
        Escribe el título y la url en el portapapeles como un favorito. Nota: La mayoría de aplicaciones en Windows no soportan de pegar marcadores en ellos así que usted puede utilizar clipboard.write para escribir un marcador y suplencia texto en el portapapeles.
    readFindText:
      returns:
        description: >-
          El texto en el portapapeles de encontrar. Este método utiliza el IPC síncrono cuando se llama desde el proceso de renderizado. El valor almacenado en memoria caché es leer de la mesa de trabajo de buscar cada vez que se activa la aplicación.
    writeFindText:
      description: >-
        Escribe el texto en el portapapeles buscar como texto sin formato. Este método utiliza el IPC síncrono cuando se llama desde el proceso de renderizado.
    clear:
      description: Borra el contenido del portapapeles.
    availableFormats:
      returns:
        description: Una variedad de formatos compatibles para el tipo de Portapapeles.
    has:
      returns:
        description: Si el portapapeles es compatible con el formato especificado.
    read:
      returns:
        description: Lee formato tipo desde el portapapeles.
    readBuffer:
      returns:
        description: Lee formato tipo desde el portapapeles.
    write:
      description: Escribe los datos en el portapapeles.
      parameters:
        data:
          properties:
            bookmark:
              description: El título de la url en el texto.
contentTracing:
  description: |-
    Recopilar datos de seguimiento de módulo de contenido de cromo para encontrar cuellos de botella de rendimiento y operaciones lentas.
  methods:
    getCategories:
      description: >-
        Obtener un conjunto de grupos de la categoría. Pueden cambiar los grupos de categoría se alcanzan nuevas rutas de código. Una vez que todos los procesos de niño han reconocido la solicitud getCategories la devolución de llamada se invoca con una variedad de grupos de la categoría.
    startRecording:
      description: >-
        Iniciar la grabación de todos los procesos. Grabación comienza inmediatamente localmente y de forma asíncrona en procesos hijo tan pronto como reciban la solicitud de EnableRecording. La devolución de llamada se llamará una vez que todos los procesos de niño han reconocido la solicitud startRecording. categoryFilter es un filtro para controlar qué grupos de categoría debe atribuirse. Un filtro puede tener un opcional - prefijo para excluir a grupos de la categoría que contienen una categoría correspondiente. No es compatible con tanto incluido y excluido patrones de categoría en la misma lista. Ejemplos: traceOptions controla qué tipo de seguimiento está habilitado, es una lista delimitada por comas. Posibles opciones son: las primeras 3 opciones son modos de grabación de la traza y por lo tanto, mutuamente excluyentes. Modos de grabación de rastro más aparecen en la cadena traceOptions, la última de ellas tiene precedencia. Si se especifica ninguno de lo modos de grabación del rastro, modo de grabación es registro hasta completa. La opción trace primero volverá a la opción por defecto (record_mode a registro hasta completo, enable_sampling y enable_systrace establecida en false) antes de aplicaban opciones analizadas desde traceOptions en él.
    stopRecording:
      description: >-
        Pare la grabación de todos los procesos. Procesos hijo normalmente almacenar en caché datos de seguimiento solamente raramente al ras y envían datos de seguimiento a los principales procesos. Esto ayuda a minimizar la sobrecarga de tiempo de ejecución de seguimiento puesto que enviar datos de seguimiento sobre IPC puede ser una operación costosa. Por lo tanto, para finalizar el trazo, forma asincrónica debemos preguntarnos todos los procesos de niño para vaciar los datos del rastro pendiente. Una vez que todos los procesos de niño han reconocido la solicitud stopRecording, devolución de llamada se llamará con un archivo que contiene los datos del trazado. Datos de seguimiento se escribirá en resultFilePath si no está vacía o en un archivo temporal. La ruta del archivo real se pasará a la devolución de llamada si no es null.
    startMonitoring:
      description: >-
        Comience a controlar en todos los procesos. Monitoreo comienza inmediatamente localmente y de forma asíncrona en procesos hijo tan pronto como reciban la solicitud de startMonitoring. Una vez que han reconocido todos los procesos hijo se llamará la petición startMonitoring la devolución de llamada.
    stopMonitoring:
      description: >-
        Detener la supervisión sobre todos los procesos. Una vez que todos los procesos de niño han reconocido la petición stopMonitoring que la devolución de llamada se llama.
    captureMonitoringSnapshot:
      description: >-
        Obtener los datos de seguimiento seguimiento actuales. Procesos hijo normalmente almacenar en caché datos de seguimiento solamente raramente al ras y envían datos de seguimiento a los principales procesos. Esto es porque puede ser una operación costosa para enviar los datos de seguimiento sobre IPC y nos gustaría evitar innecesaria ejecución arriba del trazo. Por lo tanto, para finalizar el trazo, forma asincrónica debemos preguntarnos todos los procesos de niño para vaciar los datos del rastro pendiente. Una vez que todos los procesos de niño han reconocido que la petición captureMonitoringSnapshot la devolución de llamada se llamará con un archivo contiene los datos del trazado.
    getTraceBufferUsage:
      description: >-
        Conseguir el máximo uso a través de procesos de memoria intermedia de seguimiento como un porcentaje del estado completo. Cuando se determina el valor de TraceBufferUsage se llama la devolución de llamada.
Cookie:
  properties:
    name:
      description: El nombre de la cookie.
    value:
      description: El valor de la cookie.
    domain:
      description: El dominio de la cookie.
    hostOnly:
      description: Si la cookie es una cookie sólo en el host.
    path:
      description: La ruta de la cookie.
    secure:
      description: Si la cookie está marcada como segura.
    httpOnly:
      description: Si la cookie está marcada como HTTP solamente.
    session:
      description: >-
        Si la cookie es una cookie de sesión o una cookie persistente con fecha de vencimiento.
    expirationDate:
      description: >-
        La fecha de caducidad de la cookie como el número de segundos desde la época UNIX. No previeron las cookies de sesión.
Cookies:
  description: Consultar y modificar las cookies de la sesión.
  instanceMethods:
    get:
      description: >-
        Envía una solicitud para obtener todas las cookies que empareja datos, devolución de llamada se llamará con callback (error, galletas) en completa. cookies es un Array de objetos cookie.
      parameters:
        filter:
          properties:
            url:
              description: >-
                Recupera las cookies asociadas con url. Vacío implica recuperar cookies de todas las URL.
            name:
              description: Filtra cookies por nombre.
            domain:
              description: >-
                Recupera las cookies cuyos dominios coinciden con o son subdominios de dominios
            path:
              description: Recupera las cookies cuya ruta de acceso coincide con el camino.
            secure:
              description: Filtros de galletas por su propiedad segura.
            session:
              description: Filtros sesión o cookies persistentes.
    set:
      description: >-
        Establece un cookie con detalles, devolución de llamada se llamará con callback(error) en total.
      parameters:
        details:
          properties:
            url:
              description: La url para asociar la cookie con.
            name:
              description: El nombre de la cookie. Vacía por defecto si se omite.
            value:
              description: El valor de la cookie. Vacía por defecto si se omite.
            domain:
              description: El dominio de la cookie. Vacía por defecto si se omite.
            path:
              description: La ruta de la cookie. Vacía por defecto si se omite.
            secure:
              description: >-
                Si la cookie debe marcarse como seguro. Por defecto false.
            httpOnly:
              description: >-
                Si la cookie debe marcarse como HTTP solamente. Por defecto false.
            expirationDate:
              description: >-
                La fecha de caducidad de la cookie como el número de segundos desde la época UNIX. Si se omite, entonces se convierte en una cookie de sesión de la cookie y no se conservan entre sesiones.
    remove:
      description: >-
        Elimina las cookies de coincidencia de nombre y url, callback será llamado con callback() en completa.
      parameters:
        url:
          description: La URL asociada a la cookie.
        name:
          description: El nombre de cookie para eliminar.
    flushStore:
      description: Escribe los datos de cookies no escritas en el disco.
  instanceEvents:
    changed:
      description: >-
        Emite cuando una cookie se cambia porque fue agregado, editado, eliminado o caducado.
      returns:
        cookie:
          description: La cookie que se ha cambiado
        cause:
          description: 'La causa del cambio con uno de los siguientes valores:'
        removed:
          description: '''true'' si la cookie fue quitada, ''false'' en caso contrario.'
CPUUsage:
  properties:
    percentCPUUsage:
      description: >-
        Porcentaje de CPU utilizado desde la última llamada a getCPUUsage. Primera llamada devuelve 0.
    idleWakeupsPerSecond:
      description: >-
        El número de activaciones de cpu ociosa promedio por segundo desde la última llamada a getCPUUsage. Primera llamada devuelve 0.
crashReporter:
  description: Presentar informes de accidente a un servidor remoto.
  methods:
    start:
      description: >-
        Usted está obligado a llamar a este método antes de usar cualquier otro crashReporter APIs y en cada proceso (principal/renderer) desde el que desea recopilar informes de bloqueo. Puede pasar diferentes opciones para crashReporter.start si llama desde los diferentes procesos. Nota niño procesos creados mediante el módulo child_process no tendrán acceso a los módulos de electrónica. Por lo tanto, recopilar informes de bloqueo de ellos, utilice process.crashReporter.start. Pasar las mismas opciones que arriba junto con un crashesDirectory llamado un adicional que debe apuntar a un directorio para almacenar temporalmente los informes de accidente. Puede probar esto por process.crash() llamando al chocar el proceso hijo. Nota: Para recoger informes de bloqueo de proceso secundario en Windows, necesitará añadir este código extra también. Esto iniciará el proceso de seguimiento y enviar los informes de accidente. Reemplazar submitURL, productName y crashesDirectory con los valores apropiados. Nota: Si usted necesita enviar adicional y actualizado parámetros extra después de tu primera llamada te pueden llamar setExtraParameter en macOS o llame al inicio otra vez con los parámetros extras nuevo y actualizado en Linux y Windows. Nota: En macOS, electrón utiliza a un nuevo cliente de crashpad para colección de accidente e informar. Si desea habilitar los informes de bloqueo, inicializando crashpad desde el proceso principal con crashReporter.start se requiere independientemente de que desea recopilar el proceso accidentes de. Una vez inicializado de esta manera, el controlador de crashpad recopila accidentes de todos los procesos. Todavía tienes que llamar a crashReporter.start desde el proceso de renderizado o niño, lo contrario obtener reportarán accidentes de ellos sin nombre de la empresa, productName o cualquier información adicional.
      parameters:
        options:
          properties:
            submitURL:
              description: URL que crash informes enviará como mensaje.
            productName:
              description: Por defecto app.getName().
            uploadToServer:
              description: >-
                Si deben enviarse informes de bloqueo en el servidor por defecto es true.
            ignoreSystemCrashHandler:
              description: Valor predeterminado es false.
            extra:
              description: >-
                Un objeto se puede definir que se enviará junto con el informe. Propiedades de cadena sólo se envían correctamente. No se admiten objetos anidados.
    getLastCrashReport:
      description: >-
        Devuelve la fecha y la identificación del último informe de accidente. Si no hay informes de accidente han sido enviados o el reportero de desplome no se ha iniciado, se devuelve nulo.
    getUploadedReports:
      description: >-
        Devuelve todos los informes de accidente subido. Cada informe contiene la fecha y cargado ID.
    getUploadToServer:
      description: 'Nota: Esta API sólo se puede llamar desde el proceso principal.'
      returns:
        description: >-
          Si los informes deben enviarse al servidor. Establecer a través del método del comienzo o setUploadToServer.
    setUploadToServer:
      description: >-
        Esto normalmente sería ser controlado por las preferencias del usuario. Esto no tiene ningún efecto si antes de empezar. Nota: Esta API sólo se puede llamar desde el proceso principal.
      parameters:
        uploadToServer:
          description: Si los informes deben enviarse al servidor
    setExtraParameter:
      description: >-
        Conjunto un parámetro adicional para establecer enviada con el informe de accidente. Los valores aquí especificados se enviará además a cualquier valor establecido mediante la opción extra al inicio fue llamado. Esta API sólo está disponible en macOS, si necesita añadir o actualizar parámetros extra en Linux y Windows después de la primera llamada a empezar puede llamar a comenzar de nuevo con las opciones más actualizadas.
      parameters:
        key:
          description: Clave del parámetro.
        value:
          description: >-
            Valor del parámetro. Especifica 'null' o un 'indefinido' eliminará la clave de los parámetros extras.
Debugger:
  description: Un transporte alternativo para el protocolo de depuración remoto de Chrome.
  instanceMethods:
    attach:
      description: Se adjunta al depurador a la webContents.
      parameters:
        protocolVersion:
          description: Pide depuración versión de protocolo.
    isAttached:
      returns:
        description: Si un depurador se adjunta a la webContents.
    detach:
      description: Desasocia al depurador de la webContents.
    sendCommand:
      description: Enviar le dio el mando al objetivo de depuración.
      parameters:
        method:
          description: >-
            Nombre del método, debe ser uno de los métodos definidos por el protocolo de depuración remoto.
        commandParams:
          description: Objeto JSON con los parámetros de la petición.
        callback:
          description: Respuesta
          parameters:
            error:
              description: Mensaje de error indicando el fracaso del comando.
            result:
              description: >-
                Respuesta definida por el atributo 'returns' de la descripción del comando en el protocolo de depuración remota.
  instanceEvents:
    detach:
      description: >-
        Emite cuando se termina la sesión de depuración. Esto sucede ya sea cuando webContents está cerrado o devtools se invoca para el webContents adjunto.
      returns:
        reason:
          description: Razón de depurador de desprendimiento.
    message:
      description: Emite cada vez que el evento de instrumentación de temas objetivo de depuración.
      returns:
        method:
          description: Nombre del método.
        params:
          description: >-
            Parámetros de evento definidos por el atributo 'parámetros' en el protocolo de depuración remoto.
desktopCapturer:
  description: |-
    Información de acceso de medios que pueden utilizarse para capturar audio y vídeo desde el escritorio utilizando la API de navigator.webkitGetUserMedia.
  methods:
    getSources:
      description: >-
        Comienza la recopilación de información sobre todas las fuentes de medios de escritorio disponible y llamadas callback (error, fuentes) cuando termine. fuentes es una matriz de objetos DesktopCapturerSource, cada DesktopCapturerSource representa una pantalla o una ventana individual que puede ser capturada.
      parameters:
        options:
          properties:
            types:
              description: >-
                Una matriz de cadenas que se enumera los tipos de fuentes de escritorio para ser capturado, disponible son pantalla y ventana.
            thumbnailSize:
              description: >-
                El tamaño que la imagen de la fuente de los medios de comunicación se debe escalar a. Por defecto es 150 x 150.
DesktopCapturerSource:
  properties:
    id:
      description: >-
        El identificador de una ventana o pantalla que puede ser utilizado como una restricción de chromeMediaSourceId cuando se llama a [navigator.webkitGetUserMedia]. El formato del identificador será ventana: XX o pantalla: XX, donde XX es un número generado al azar.
    name:
      description: >-
        Una fuente de pantalla será nombrada <index> toda la pantalla o la pantalla, mientras que el nombre de una fuente de la ventana coincidirá con el título de la ventana.
    thumbnail:
      description: >-
        Una imagen en miniatura. No hay ninguna garantía de que el tamaño de la miniatura es el mismo como thumbnailSize especificado en las opciones de pasar a desktopCapturer.getSources. El tamaño real depende de la escala de la pantalla o ventana.
dialog:
  description: 'Mostrar cuadros de diálogo de sistema nativo para abrir y guardar archivos, alertas, etcetera.'
  methods:
    showOpenDialog:
      description: >-
        El argumento de browserWindow permite el cuadro de diálogo que adhiera a una ventana padre, lo que es modal. Los filtros especifica una matriz de tipos de archivo que se muestre o se seleccionan cuando desea limitar al usuario a un tipo específico. Por ejemplo: la matriz de extensiones debe contener extensiones sin comodines o puntos (por ejemplo, 'png' es bueno pero 'png' y ' * png ' son malos). Para mostrar todos los archivos, utilice el ' *' comodín (no hay otro comodín es compatible). Si se pasa una devolución de llamada, la llamada a la API será asíncrona y el resultado se pasará a través de callback(filenames) Nota: en Windows y Linux un cuadro de diálogo abrir no pueden ser un selector de archivos y un selector de directorio, por lo que si establece propiedades para ['openFile', 'openDirectory'] en estas plataformas, aparecerá un selector de directorio.
      parameters:
        options:
          properties:
            buttonLabel:
              description: >-
                Etiqueta personalizada para el botón de confirmación, cuando vacío la etiqueta predeterminada se utilizará.
            properties:
              description: >-
                Contiene las funciones que debe utilizar el cuadro de diálogo. Se admiten los siguientes valores:
            message:
              description: Mensaje para mostrar por encima de casillas.
        callback:
          parameters:
            filePaths:
              description: Una gran variedad de rutas de archivo elegido por el usuario
      returns:
        description: >-
          , una matriz de rutas de archivo elegido por el usuario, siempre que la devolución de llamada lo devuelve undefined.
    showSaveDialog:
      description: >-
        El argumento de browserWindow permite el cuadro de diálogo que adhiera a una ventana padre, lo que es modal. Los filtros especifica una matriz de tipos de archivos que puede mostrarse, consulte dialog.showOpenDialog para obtener un ejemplo. Si se pasa a una devolución de llamada, la llamada a la API será asincrónica y el resultado se pasará a través de callback(filename)
      parameters:
        options:
          properties:
            buttonLabel:
              description: >-
                Etiqueta personalizada para el botón de confirmación, cuando vacío la etiqueta predeterminada se utilizará.
            message:
              description: Mensaje para mostrar por encima de los campos de texto.
            nameFieldLabel:
              description: >-
                Etiqueta personalizada para el texto que se muestra delante del campo de texto nombre de archivo.
            showsTagField:
              description: 'Mostrar el cuadro de etiquetas, por defecto true.'
      returns:
        description: >-
          , la ruta del archivo elegido por el usuario, siempre que una devolución de llamada lo devuelve undefined.
    showMessageBox:
      description: >-
        Muestra un cuadro de mensaje, que bloquea el proceso hasta que se cierra el cuadro de mensaje. Devuelve el índice del botón clicado. El argumento de browserWindow permite el cuadro de diálogo que adhiera a una ventana padre, lo que es modal. Si se pasa a una devolución de llamada, la llamada a la API será asíncrona y el resultado se pasará a través de callback(response).
      parameters:
        options:
          properties:
            type:
              description: >-
                Puede ser "", "info", "error", "cuestión" o "ADVERTENCIA". En Windows, "cuestión" muestra el mismo icono como "información", a menos que establezca un icono con la opción "icono". En macOS, "ADVERTENCIA" y "error" muestran el mismo icono de advertencia.
            buttons:
              description: >-
                Variedad de textos para los botones. En Windows, una matriz vacía dará como resultado un botón etiquetado "OK".
            defaultId:
              description: >-
                Índice del botón de la matriz de botones que se seleccionará de forma predeterminada cuando se abre el cuadro de mensaje.
            title:
              description: 'Título del cuadro de mensaje, algunas plataformas no lo mostrará.'
            message:
              description: Contenido de la caja de mensaje.
            detail:
              description: Información adicional del mensaje.
            checkboxLabel:
              description: >-
                Si, el cuadro de mensaje incluye una casilla de verificación con la etiqueta determinada. Puede examinar el estado de la casilla de verificación sólo tratándose de devolución de llamada.
            checkboxChecked:
              description: Estado inicial checked de la casilla de verificación. false por defecto.
            cancelId:
              description: >-
                El índice del botón que se utilizará para cancelar el cuadro de diálogo, con la tecla Esc. Por defecto este es asignado al primer botón "Cancelar" o "no" de la etiqueta. Si no hay tales botones etiquetados existen y esta opción no está establecida, 0 se utilizará como la respuesta de valor o de devolución de llamada de retorno. Esta opción es ignorada en Windows.
            noLink:
              description: >-
                En Windows electrón tratará de averiguar que uno de los botones son botones comunes (como "Cancelar" o "Sí") y mostrar a otros como eslabones de comando en el cuadro de diálogo. Esto puede hacer que el cuadro de diálogo aparezca en el estilo de las modernas aplicaciones de Windows. Si no te gusta este comportamiento, puede establecer noLink en true.
            normalizeAccessKeys:
              description: >-
                Normalizar las teclas de acceso de teclado a través de plataformas. Valor predeterminado es false. Permitiendo esto asume y se utiliza en las etiquetas de botón para la colocación de la llave de acceso de método abreviado de teclado y etiquetas se convertirá para que funcionen correctamente en cada plataforma, y personajes se quitan en macOS, convertido a _ en Linux y a la izquierda sin tocar en Windows. Por ejemplo, una etiqueta de botón de Vie y la w se convertirá en Vie_w en Linux y vista en macOS y puede seleccionarse mediante Alt-W en Windows y Linux.
        callback:
          parameters:
            response:
              description: El índice del botón que se hizo clic
            checkboxChecked:
              description: >-
                El estado checked de la casilla de verificación si se establece checkboxLabel. False si no.
      returns:
        description: >-
          , el índice del botón clicado, siempre que una devolución de llamada lo devuelve undefined.
    showErrorBox:
      description: >-
        Muestra un diálogo modal que muestra un mensaje de error. Esta API se puede llamar con seguridad antes de que el evento ready del módulo de aplicación emite, se utiliza generalmente para reportar errores en la etapa temprana de inicio.  Si llama antes de la aplicación readyevent en Linux, el mensaje se emite a stderr, y no aparecerá ningún cuadro de diálogo GUI.
      parameters:
        title:
          description: El título para mostrar en el cuadro de error
        content:
          description: El contenido del texto a mostrar en el cuadro de error
    showCertificateTrustDialog:
      description: >-
        En macOS, muestra un cuadro de diálogo modal muestra un mensaje y certificado de la información, y le da al usuario la opción de confiar e importación del certificado. Si usted proporciona un argumento de browserWindow el cuadro de diálogo se unirá a la ventana padre, lo que es modal. En Windows las opciones son más limitadas, debido a las API de Win32 utilizan:
      parameters:
        options:
          properties:
            certificate:
              description: El certificado de confianza e importación.
            message:
              description: El mensaje a mostrar al usuario.
Display:
  properties:
    id:
      description: Identificador único asociado con la pantalla.
    rotation:
      description: >-
        Puede ser 0, 90, 180, 270, representa la rotación de la pantalla en grados las manecillas del reloj.
    scaleFactor:
      description: Factor de escala de píxel del dispositivo de salida.
    touchSupport:
      description: 'Pueden ser disponibles, de carácter, desconocido.'
DownloadItem:
  description: Archivo de control de descargas de fuentes remotas.
  instanceMethods:
    setSavePath:
      description: >-
        La API sólo está disponible en función de callback de voluntad-descarga de la sesión. Si usuario no establece el guardar camino mediante la API, electrón usará la rutina original para determinar el guardar ruta (generalmente solicita guardar diálogo).
      parameters:
        path:
          description: Establecer el guardar ruta de archivo del elemento de descarga.
    getSavePath:
      returns:
        description: >-
          El save path del elemento de descarga. Esto será ya sea el camino establecido a través de downloadItem.setSavePath(path) o la ruta seleccionada de la muestra guardar cuadro de diálogo.
    pause:
      description: Se detiene la descarga.
    isPaused:
      returns:
        description: Si la descarga está en pausa.
    resume:
      description: >-
        Se reanuda la descarga que ha puesto en pausa. Nota: Para permitir descargas reanudables deberá el servidor descarga desde gama solicitudes de asistencia y proporcionar tanto Last-Modified y ETag valor de encabezado. De lo contrario resume() se despedir bytes recibidos anteriormente y reiniciar la descarga desde el principio.
    canResume:
      description: Se reanuda Boolean - si puede reanudar la descarga.
    cancel:
      description: Cancela la operación de descarga.
    getURL:
      returns:
        description: La url de origen donde es descargado el tema.
    getMimeType:
      returns:
        description: Los archivos mime tipo.
    hasUserGesture:
      returns:
        description: Si la descarga tiene gesto de usuario.
    getFilename:
      description: >-
        Nota: El nombre del archivo no es siempre igual a la real guardado en el disco local. Si el usuario cambia el nombre del archivo en una descarga incitado guardar cuadro de diálogo, el nombre del archivo será diferente.
      returns:
        description: El nombre de archivo del elemento de descarga.
    getTotalBytes:
      description: 'Si el tamaño es desconocido, devuelve 0.'
      returns:
        description: El tamaño total en bytes del elemento de descarga.
    getReceivedBytes:
      returns:
        description: Los bytes recibidos del elemento de descarga.
    getContentDisposition:
      returns:
        description: El campo Content-Disposition de la cabecera de respuesta.
    getState:
      description: >-
        Nota: Los siguientes métodos son útiles específicamente para retomar un tema cancelado cuando se reinicia la sesión.
      returns:
        description: >-
          El estado actual. Puede ser progresiva, terminado, cancelado o interrumpido.
    getURLChain:
      returns:
        description: La cadena de url completa del artículo incluyendo cualquier redirecciones.
    getLastModifiedTime:
      returns:
        description: Valor de encabezado Last-Modified.
    getETag:
      returns:
        description: Valor del encabezado ETag.
    getStartTime:
      returns:
        description: Número de segundos desde el epoch UNIX cuando se inició la descarga.
  instanceEvents:
    updated:
      description: >-
        Emite cuando la descarga se ha actualizado y no se hace. El estado puede ser uno de los siguientes:
    done:
      description: >-
        Emite cuando la descarga está en un estado terminal. Esto incluye una descarga completa, una descarga cancelada (via descarga interrumpida que no puede ser reanudado y downloadItem.cancel()). El estado puede ser uno de los siguientes:
globalShortcut:
  description: Detectar eventos del teclado cuando la aplicación no tiene el foco de teclado.
  methods:
    register:
      description: >-
        Se coloca un acceso directo global del acelerador. La devolución de llamada se llama cuando se presiona el atajo registrado por el usuario. Cuando el acelerador es tomado ya por otras aplicaciones, esta llamada fallará silenciosamente. Este comportamiento está diseñado por sistemas operativos, ya que no quieren aplicaciones para luchar por atajos globales.
    isRegistered:
      description: >-
        Cuando el acelerador es tomado ya por otras aplicaciones, aún esta llamada devolverá false. Este comportamiento está diseñado por sistemas operativos, ya que no quieren aplicaciones para luchar por atajos globales.
      returns:
        description: Si esta aplicación ha registrado acelerador.
    unregister:
      description: Anula el registro el acceso directo global del acelerador.
    unregisterAll:
      description: Anula el registro de todos los accesos directos globales.
IncomingMessage:
  description: Manejar las respuestas a las solicitudes HTTP/HTTPS.
  instanceProperties:
    statusCode:
      description: Un entero que indica el código de estado de respuesta HTTP.
    statusMessage:
      description: Una cadena que representa el mensaje de Estado HTTP.
    headers:
      description: >-
        Un objeto que representa los encabezados de respuesta HTTP. El objeto de cabeceras está formateado como sigue:
    httpVersion:
      description: >-
        Una cadena que indica el número de versión de protocolo HTTP. Los valores típicos son '1.0' o '1.1'. Además httpVersionMajor y httpVersionMinor son dos valores enteros legibles propiedades que devuelven respectivamente el número de versión principal y secundaria de HTTP.
    httpVersionMajor:
      description: Un entero que indica el número de versión de protocolo HTTP.
    httpVersionMinor:
      description: Un entero que indica el número de versión menor de protocolo HTTP.
  instanceEvents:
    data:
      description: >-
        El evento de datos es el método habitual de transferencia de datos de respuesta en código aplicativo.
      returns:
        chunk:
          description: Un paquete de datos del cuerpo de la respuesta.
    end:
      description: Indica que ha terminado el cuerpo de la respuesta.
    aborted:
      description: >-
        Emite cuando se ha cancelado una solicitud durante una transacción HTTP actual.
    error:
      description: >-
        error Error - por lo general tiene una cadena de error identificación de causa raíz de falla. Emite cuando se detecta un error mientras streaming eventos de datos de respuesta. Por ejemplo, si el servidor cierra del subyacente, mientras que la respuesta todavía es streaming, se emitirá un evento de error en el objeto de respuesta y posteriormente se seguirá un evento close en el objeto de la solicitud.
IOCounters:
  properties:
    readOperationCount:
      description: El número de i/os Lee las operaciones.
    writeOperationCount:
      description: El número de operaciones de E/S de escritura.
    otherOperationCount:
      description: Entonces número de i/os otras operaciones.
    readTransferCount:
      description: El número de i/os Lee a las transferencias.
    writeTransferCount:
      description: El número de transferencias de escritura de E/S.
    otherTransferCount:
      description: Entonces número de i/os otras transferencias.
ipcMain:
  description: Comunicarse de forma asincrónica desde el proceso principal a los procesos de renderizado.
  methods:
    'on':
      description: >-
        Escucha al canal, cuando llega un mensaje nuevo oyente se llamaría con el oyente (evento, args...).
    once:
      description: >-
        Agrega una función de detector de tiempo para el evento. Este oyente se invoca sólo la próxima vez que se envía un mensaje al canal, después que se retira.
    removeListener:
      description: >-
        Elimina el detector especificado de la matriz de oyente para el canal especificado.
    removeAllListeners:
      description: 'Quita todos los oyentes, o los del canal especificado.'
ipcRenderer:
  description: Comunicarse de forma asincrónica de un proceso de procesador para el proceso principal.
  methods:
    'on':
      description: >-
        Escucha al canal, cuando llega un mensaje nuevo oyente se llamaría con el oyente (evento, args...).
    once:
      description: >-
        Agrega una función de detector de tiempo para el evento. Este oyente se invoca sólo la próxima vez que se envía un mensaje al canal, después que se retira.
    removeListener:
      description: >-
        Elimina el detector especificado de la matriz de oyente para el canal especificado.
    removeAllListeners:
      description: 'Quita todos los oyentes, o los del canal especificado.'
    send:
      description: >-
        Enviar un mensaje a los principales procesos asincrónicamente a través de canal, usted puede también enviar argumentos arbitrarios. Argumentos a ser serializados en JSON internamente y por lo tanto ninguna función o cadena de prototipos serán incluido. El proceso principal maneja escuchando canal con módulo de ipcMain.
    sendSync:
      description: >-
        Enviar un mensaje al principal proceso síncrono vía canal, usted puede también enviar argumentos arbitrarios. Argumentos a ser serializados en JSON internamente y por lo tanto ninguna función o cadena de prototipos serán incluido. El proceso principal maneja escuchando canal con módulo de ipcMain y responde al establecer event.returnValue. Nota: Envío de un mensaje síncrono bloqueará el proceso de renderizado todo, a menos que sepa lo que está haciendo nunca debe usar.
    sendToHost:
      description: >-
        Como ipcRenderer.send pero el evento se enviará el elemento <webview> en la página de host en lugar del proceso principal.
JumpListCategory:
  properties:
    type:
      description: 'Uno de los siguientes:'
    name:
      description: 'Se debe establecer si es de tipo personalizado, que deben ser omitido.'
    items:
      description: >-
        Matriz de objetos si el tipo es tareas o personalizada, de lo contrario deben ser omitido.
JumpListItem:
  properties:
    type:
      description: 'Uno de los siguientes:'
    path:
      description: 'Ruta del archivo a abrir, sólo debe establecerse si el tipo de archivo.'
    program:
      description: >-
        Ruta de acceso del programa a ejecutar, generalmente debe especificar process.execPath que abre el programa actual. Sólo debe establecerse si es tarea.
    args:
      description: >-
        Los argumentos de línea de comandos cuando se ejecuta el programa. Sólo debe establecerse si es tarea.
    title:
      description: >-
        El texto que se mostrará para el elemento en la Jump List. Sólo debe establecerse si es tarea.
    description:
      description: >-
        Descripción de la tarea (aparece en un tooltip). Sólo debe establecerse si es tarea.
    iconPath:
      description: >-
        La ruta de acceso absoluta a un icono que se mostrará en una Jump List, que puede ser un archivo de recursos arbitrario que contiene un icono (.ico, .exe, .dll). Generalmente se puede especificar process.execPath para mostrar el icono del programa.
    iconIndex:
      description: >-
        El índice del icono en el archivo de recursos. Si un archivo de recursos contiene varios iconos de que este valor puede utilizarse para especificar el índice de base cero del icono que debe mostrarse para esta tarea. Si un archivo de recursos contiene solamente un icono, esta propiedad debe establecerse a cero.
MemoryInfo:
  properties:
    pid:
      description: Identificador de proceso del proceso.
    workingSetSize:
      description: La cantidad de memoria actualmente cubrió a RAM física real.
    peakWorkingSetSize:
      description: >-
        La cantidad máxima de memoria que nunca ha sido clavado en memoria RAM física real.
    privateBytes:
      description: >-
        La cantidad de memoria no compartida por otros procesos, como montón JS o contenido HTML.
    sharedBytes:
      description: >-
        La cantidad de memoria compartida entre procesos, típicamente memoria consumida por el propio código de electrón
Menu:
  description: Crear aplicación nativa menús y menús contextuales.
  staticMethods:
    setApplicationMenu:
      description: >-
        Menú de juegos como el menú de la aplicación de macOS. En Windows y Linux, se establecerá el menú como menú superior de cada ventana. Pasar null eliminará la barra de menús en Windows y Linux pero no tiene efecto en macOS. Nota: Esta API debe llamarse después del evento ready del módulo de la aplicación.
    getApplicationMenu:
      description: >-
        Nota: No soporta la instancia devuelta de menú dinámico adición o eliminación de elementos de menú. Propiedades de instancia todavía pueden ser modificados dinámicamente.
      returns:
        description: 'El menú de aplicaciones, si set, o null, si no.'
    sendActionToFirstResponder:
      description: >-
        Envía la acción a la primera respuesta de la aplicación. Se utiliza para emular comportamientos de menú predeterminados macOS. Normalmente se usaría sólo la propiedad del papel de un MenuItem. Ver el macOS guía de manejo del evento de cacao para obtener más información sobre acciones nativo de macOS.
    buildFromTemplate:
      description: >-
        En general, la plantilla es simplemente una variedad de opciones para la construcción de un MenuItem. El uso puede hacer referencia por encima. También puede anexar otros campos para el elemento de la plantilla y se conviertan en propiedades de los elementos de menú construido.
  instanceMethods:
    popup:
      description: Aparece este menú como menú contextual en el browserWindow.
      parameters:
        browserWindow:
          description: Por defecto es la ventana centrada.
        options:
          properties:
            x:
              description: Valor predeterminado es la posición actual del cursor del ratón.
            'y':
              description: (si se utiliza x) Valor predeterminado es la posición actual del cursor del ratón.
            async:
              description: >-
                Establezca en true a este retorno del método llamado inmediatamente, falsos después de que el menú ha sido seleccionado o cerrado. Por defecto false.
            positioningItem:
              description: >-
                El índice del elemento de menú se coloca bajo el cursor en las coordenadas especificadas. Valor predeterminado es -1.
    closePopup:
      description: Se cierra el menú contextual de la browserWindow.
      parameters:
        browserWindow:
          description: Por defecto es la ventana centrada.
    append:
      description: Anexa el formulario menuItem al menú.
    insert:
      description: Inserta el menuItem en la posición pos del menú.
  instanceProperties:
    items:
      description: >-
        Una MenuItem [] matriz que contiene elementos de menú. Cada menú se compone de múltiples objetos MenuItem y cada MenuItem puede tener un submenú.
MenuItem:
  description: Agregar elementos a la aplicación nativa menús y menús contextuales.
  constructorMethod:
    parameters:
      - 
        properties:
          - 
            description: >-
              Se llamará con clic (menuItem, browserWindow, evento) cuando se hace clic en el elemento de menú.
          - 
            description: >-
              Definir la acción de la opción del menú, cuando especifica que la propiedad click será ignorada. Véase.
          - 
            description: Puede ser normal, separador, submenú, checkbox o radio.
          - null
          - null
          - null
          - null
          - 
            description: Si es false, el elemento de menú será gris hacia fuera y solucionado.
          - 
            description: Si es false, el elemento de menú se oculta totalmente.
          - 
            description: Sólo debe especificarse para elementos de menú de tipo checkbox o radio.
          - 
            description: |2-
                      
              Should be specified for submenu type menu items. If submenu is specified, the type: '''submenú'' puede omitirse. Si el valor no es un menú, entonces se convertirán automáticamente a uno con Menu.buildFromTemplate.'
          - 
            description: >-
              Único dentro de un único menú. Si se ha definido y puede ser utilizado como una referencia a este artículo por el atributo de posición.
          - 
            description: >-
              Este campo permite definición de grano fino de la ubicación específica dentro de un menú determinado.
  instanceProperties:
    enabled:
      description: >-
        Un valor booleano que indica si el elemento está activado, esta propiedad se puede dinámicamente cambiar.
    visible:
      description: >-
        Un valor booleano que indica si el elemento es visible, esta propiedad se puede dinámicamente cambiar.
    checked:
      description: >-
        Un valor booleano que indica si el elemento está marcado, esta propiedad se puede dinámicamente cambiar. Un casilla de verificación menú cambiará la propiedad checked y apagar cuando se selecciona. Un elemento de menú de la radio se encenderá su propiedad checked cuando hace clic en y se apagará esa propiedad para todos los elementos adyacentes en el mismo menú. Puede Agregar una función haga clic en comportamiento adicional.
    label:
      description: Una cadena que representa la etiqueta visible de elementos de menú
    click:
      description: Una función que se desencadena cuando el MenuItem recibe un evento click
MimeTypedBuffer:
  properties:
    mimeType:
      description: El tipo MIME del búfer que desea enviar
    data:
      description: El contenido real del búfer
nativeImage:
  description: 'Crear iconos de aplicaciones mediante archivos PNG o JPG, bandeja y muelle.'
  methods:
    createEmpty:
      description: Crea una instancia de NativeImage vacíela.
    createFromPath:
      description: >-
        Crea una nueva instancia de NativeImage desde un archivo ubicado en la ruta. Este método devuelve una imagen vacía si la ruta no existe, no se puede leer, o no es una imagen válida.
    createFromBuffer:
      description: Crea una nueva instancia de la NativeImage del buffer.
      parameters:
        options:
          properties:
            width:
              description: Necesaria para los búferes de mapa de bits.
            height:
              description: Necesaria para los búferes de mapa de bits.
            scaleFactor:
              description: Por defecto 1.0.
    createFromDataURL:
      description: Crea una nueva instancia de la NativeImage de dataURL.
NativeImage:
  description: 'Forma nativa envolver imágenes como bandeja, dock, iconos de aplicaciones.'
  instanceMethods:
    toPNG:
      parameters:
        options:
          properties:
            scaleFactor:
              description: Por defecto 1.0.
      returns:
        description: Datos codificados de un búfer que contiene PNG la imagen.
    toJPEG:
      parameters:
        quality:
          description: () Entre 0 100.
      returns:
        description: Datos codificados de un búfer que contiene JPEG la imagen.
    toBitmap:
      parameters:
        options:
          properties:
            scaleFactor:
              description: Por defecto 1.0.
      returns:
        description: Un búfer que contiene una copia de datos de pixel de la imagen bitmap crudo.
    toDataURL:
      parameters:
        options:
          properties:
            scaleFactor:
              description: Por defecto 1.0.
      returns:
        description: El enlace de datos de la imagen.
    getBitmap:
      description: >-
        Es la diferencia entre getBitmap() y toBitmap(), getBitmap() no copia los datos de mapa de bits, así que tienes que utilizar el búfer devuelto inmediatamente en el actual evento lazo garrapatas, otra manera los datos pueden cambiar o destruidos.
      parameters:
        options:
          properties:
            scaleFactor:
              description: Por defecto 1.0.
      returns:
        description: Un búfer que contiene los datos de píxeles de la imagen mapa de bits raw.
    getNativeHandle:
      description: >-
        Observe que el puntero devuelto es un puntero débil a la imagen nativa subyacente en lugar de una copia, por lo que debe asegurarse de que la instancia de nativeImage asociados se mantiene alrededor de.
      returns:
        description: >-
          Un Buffer que almacena C puntero al identificador nativo subyacente de la imagen. En macOS, se devolverá un puntero a la instancia de NSImage.
    isEmpty:
      returns:
        description: Si la imagen está vacía.
    setTemplateImage:
      description: Marca la imagen como una imagen de la plantilla.
    isTemplateImage:
      returns:
        description: Si la imagen es una imagen de la plantilla.
    crop:
      parameters:
        rect:
          description: El área de la imagen para recortar
      returns:
        description: La imagen recortada.
    resize:
      description: >-
        Si sólo se especifica la altura o el ancho de la actual relación de aspecto se conservarán en la imagen redimensionada.
      parameters:
        options:
          properties:
            width:
              description: Anchura de la imagen por defecto.
            height:
              description: Valores por defecto a la altura de la imagen
            quality:
              description: >-
                La calidad de la imagen de tamaño deseada. Los posibles valores son buenos, mejor o la mejor. El valor predeterminado es mejor. Estos valores expresan un equilibrio calidad/velocidad deseada. Se convierten en un método de algoritmo específico que depende de las capacidades (CPU, GPU) de la plataforma subyacente. Es posible que los tres métodos que se asignará al mismo algoritmo en una plataforma determinada.
      returns:
        description: La imagen redimensionada.
    getAspectRatio:
      returns:
        description: Relación de aspecto de la imagen.
    addRepresentation:
      description: >-
        Añadir una representación de la imagen por un factor de escala específico. Esto puede usarse para agregar explícitamente representaciones de factor de escala diferente a la imagen. Esto se puede llamar en imágenes vacías.
      parameters:
        options:
          properties:
            scaleFactor:
              description: El factor de escala para agregar la representación de la imagen para.
            width:
              description: >-
                Por defecto es 0. Necesaria si un búfer de mapa de bits se especifica como buffer.
            height:
              description: >-
                Por defecto es 0. Necesaria si un búfer de mapa de bits se especifica como buffer.
            buffer:
              description: El búfer que contiene los datos de imagen raw.
            dataURL:
              description: >-
                La URL de los datos que contiene ya sea una base 64 codificado JPEG o PNG imagen.
net:
  description: Emitir solicitudes de HTTP/HTTPS mediante la biblioteca de red nativa del cromo
  methods:
    request:
      description: >-
        Crea una instancia de ClientRequest usando las opciones siempre que se reenvían directamente al constructor ClientRequest. El método net.request se utilizaría para emitir solicitudes seguras e inseguras HTTP según el esquema de protocolo especificado en el objeto de opciones.
      parameters:
        options:
          description: Las opciones de constructor 'ClientRequest'.
powerMonitor:
  description: Monitorear los cambios de estado de energía.
  events:
    suspend:
      description: Emite cuando se suspende el sistema.
    resume:
      description: Emitido cuando el sistema se está reanudando.
    on-ac:
      description: Emitido cuando el sistema cambia a la corriente alterna.
    on-battery:
      description: Emite cuando el sistema cambia a energía de batería.
powerSaveBlocker:
  description: Bloquear el sistema entre en modo de bajo consumo (sleep).
  methods:
    start:
      description: >-
        Comienza evitando que el sistema entrando en modo de baja potencia. Devuelve un entero que identifica del bloqueador de energía. Nota: evitar-pantalla-sueño tiene mayor prioridad prevenir-aplicación-suspensión. Sólo el tipo de prioridad más alta en vigor. En otras palabras, prevenir-pantalla-sueño siempre tiene prioridad sobre prevenir-aplicación-suspensión. Por ejemplo, una API llamada peticiones para prevenir-aplicación-suspensión y otra llamada B pide para evitar mostrar el sueño. prevenir-pantalla-sueño se utilizará hasta que B deje su petición. Después de eso, se utiliza prevenir-aplicación-suspensión.
      parameters:
        type:
          description: Ahorro de energía tipo de bloqueador.
      returns:
        description: El ID de bloqueador que se asigna a este bloqueador de corriente
    stop:
      description: Se detiene la potencia especificada Ahorre bloqueador.
      parameters:
        id:
          description: El poder guardar id blocker devuelve 'powerSaveBlocker.start'.
    isStarted:
      parameters:
        id:
          description: El poder guardar id blocker devuelve 'powerSaveBlocker.start'.
      returns:
        description: Si ha iniciado la correspondiente powerSaveBlocker.
process:
  description: Extensiones al objeto del proceso.
  methods:
    crash:
      description: Hace que el subproceso principal de la actual crisis de proceso.
    hang:
      description: Hace que el subproceso principal de la caída del proceso actual.
    setFdLimit:
      description: >-
        Conjuntos de límite de la suavidad del descriptor de archivo maxDescriptors o el límite OS, sea menor para el proceso actual.
    getProcessMemoryInfo:
      description: >-
        Devuelve un objeto dando estadísticas de uso de memoria sobre el proceso actual. Tenga en cuenta que todas las estadísticas se divulgan en Kilobytes.
      returns:
        properties:
          - 
            description: La cantidad de memoria actualmente cubrió a RAM física real.
          - 
            description: >-
              La cantidad máxima de memoria que nunca ha sido clavado en memoria RAM física real.
          - 
            description: >-
              La cantidad de memoria no compartida por otros procesos, como montón JS o contenido HTML.
          - 
            description: >-
              La cantidad de memoria compartida entre procesos, típicamente memoria consumida por el propio código de electrón
    getSystemMemoryInfo:
      description: >-
        Devuelve un objeto dando estadísticas de uso de memoria sobre todo el sistema. Tenga en cuenta que todas las estadísticas se divulgan en Kilobytes.
      returns:
        properties:
          - 
            description: >-
              La cantidad total de memoria física en Kilobytes disponibles para el sistema.
          - 
            description: >-
              La cantidad total de memoria no se utiliza por aplicaciones o caché de disco.
          - 
            description: >-
              La cantidad total de memoria swap en Kilobytes disponibles para el sistema.
          - 
            description: >-
              La cantidad libre de memoria swap en Kilobytes disponibles para el sistema.
  events:
    loaded:
      description: >-
        Emitida cuando el electrón ha cargado su script de inicialización interna y comienza a cargar la página o el script principal. Puede ser utilizado por el script de precarga para agregar nodo eliminado símbolos globales hacia el ámbito global cuando para integración de nodo:
  properties:
    noAsar:
      description: >-
        Un valor booleano que controla el soporte ASAR dentro de su aplicación. Si se establece como true desactiva el soporte para archivos de asar en módulos incorporados del nodo.
    type:
      description: >-
        Una cadena que representa el tipo del proceso actual, puede ser "navegador" (es decir, el proceso principal) o "renderer".
    resourcesPath:
      description: Una cadena que representa la ruta de acceso al directorio de recursos.
    mas:
      description: >-
        Un valor booleano. Para la compilación de Mac App Store, esta propiedad es true, para otras versiones es indefinido.
    windowsStore:
      description: >-
        Un valor booleano. Si la aplicación se ejecuta como una aplicación de Windows Store (aprox), esta propiedad es true, de lo contrario es indefinido.
    defaultApp:
      description: >-
        Un valor booleano. Cuando la aplicación se inicia por ser pasado como parámetro a la aplicación de forma predeterminada, esta propiedad es true en el proceso principal, si es indefinido.
    versions:
      properties:
        electron:
          description: Una cadena que representa la cadena de versión del electrón.
        chrome:
          description: Una cadena que representa la cadena de versión de Chrome.
ProcessMemoryInfo:
  properties:
    pid:
      description: Identificador de proceso del proceso.
    memory:
      description: Información de memoria del proceso.
protocol:
  description: Registrar un protocolo personalizado e interceptar las solicitudes de protocolo existente.
  methods:
    registerStandardSchemes:
      description: >-
        Un esquema estándar se adhiere a lo que RFC 3986 llama sintaxis genérico de URI. Por ejemplo http y https son esquemas estándar, mientras que el archivo no está. Registro de un esquema estándar, permite recursos relativos y absolutos para resolver correctamente cuando sirve. De lo contrario el sistema se comportará como el protocolo de archivo, pero sin la capacidad para resolver direcciones URL relativas. Por ejemplo cuando usted carga página con protocolo personalizado siguiente sin necesidad de registrarse como esquema estándar, la imagen no se cargará porque esquemas no estándar no pueden reconocer las direcciones URL relativas: registro de un esquema de como norma permitirá el acceso a archivos a través de la API de sistema de archivos. De lo contrario el procesador producirá un error en el esquema de seguridad. Por almacenamiento de web predeterminado apis (localStorage, sessionStorage, webSQL, indexedDB, galletas) se desactivan para sistemas no estándar. Así que en general si desea registrar un protocolo personalizado para reemplazar el protocolo http, tienes que registrarlo como un esquema estándar: Nota: este método sólo puede usarse antes de que el evento ready del módulo aplicación obtiene emitido.
      parameters:
        schemes:
          description: Custom esquemas para ser registrado como esquemas estándar.
        options:
          properties:
            secure:
              description: True para registrar el esquema como seguro. Por defecto false.
    registerServiceWorkerSchemes:
      parameters:
        schemes:
          description: Custom esquemas de registro para los trabajadores del servicio.
    registerFileProtocol:
      description: >-
        Registra un protocolo de esquema que se envíe el archivo como respuesta. Se llama al controlador con el controlador (petición, devolución de llamada) cuando una petición se va a crearse con esquema. terminación se llamará completion(null) al esquema está registrado correctamente o completion(error) cuando no. Para atender la solicitud, la devolución de llamada debe ser llamado con la ruta del archivo o un objeto que tiene una propiedad de ruta de acceso, por ejemplo callback(filePath) o callback({path: filePath}). Cuando se llama callback con nada, un número o un objeto que tiene una propiedad de error, fallará la solicitud con el número de error especificado. Para los números de error disponible que se puede utilizar, consulte la lista de errores de red. Por defecto el esquema de trata como http:, que se analiza diferentemente que los protocolos que siguen el "Sintaxis genérica de URI" como archivo:, por lo que probablemente llame a protocol.registerStandardSchemes para tener su esquema de tratados como un esquema estándar.
    registerBufferProtocol:
      description: >-
        Registra un protocolo de esquema que va a enviar un búfer de respuesta. El uso es el mismo con registerFileProtocol, excepto que la devolución de llamada debe llamar con un objeto Buffer o un objeto que tiene los datos, tipo MIME y propiedades de conjunto de caracteres. Ejemplo:
    registerStringProtocol:
      description: >-
        Registra un protocolo de esquema que va a enviar una cadena como respuesta. El uso es el mismo con registerFileProtocol, excepto que la devolución de llamada debe ser llamado con una cadena o un objeto que tiene los datos, tipo MIME y propiedades de conjunto de caracteres.
    registerHttpProtocol:
      description: >-
        Registra un protocolo de esquema que va a enviar una petición HTTP como respuesta. El uso es el mismo con registerFileProtocol, excepto que la devolución de llamada debe ser llamado con un objeto redirectRequest que tiene la dirección url, método, referente, propiedades uploadData y sesión. Por defecto el HTTP petición reutilizará la sesión actual. Si desea que la solicitud para tener una sesión diferente debe establecer sesión null. Para las peticiones POST se debe proporcionar el objeto uploadData.
      parameters:
        handler:
          parameters:
            callback:
              parameters:
                redirectRequest:
                  properties:
                    uploadData:
                      properties:
                        contentType:
                          description: Tipo MIME del contenido.
                        data:
                          description: Contenido que se enviará.
    unregisterProtocol:
      description: Anula el registro del protocolo personalizado de esquema.
    isProtocolHandled:
      description: >-
        La devolución de llamada se llamará con un booleano que indica si ya existe un controlador para el sistema.
    interceptFileProtocol:
      description: >-
        Intercepta el protocolo de esquema y utiliza el controlador como nuevo controlador de protocolo que envía un archivo como una respuesta.
    interceptStringProtocol:
      description: >-
        Intercepta el protocolo de esquema y utiliza el controlador como nuevo controlador de protocolo que envía una cadena como una respuesta.
    interceptBufferProtocol:
      description: >-
        Intercepta el protocolo de esquema y utiliza controlador como nuevo controlador de protocolo que envía un búfer como respuesta.
    interceptHttpProtocol:
      description: >-
        Intercepta el protocolo de esquema y utiliza controlador como nuevo controlador de protocolo que envía una nueva petición HTTP como respuesta.
      parameters:
        handler:
          parameters:
            callback:
              parameters:
                redirectRequest:
                  properties:
                    uploadData:
                      properties:
                        contentType:
                          description: Tipo MIME del contenido.
                        data:
                          description: Contenido que se enviará.
    uninterceptProtocol:
      description: >-
        Retire el interceptor instalado para el esquema y restablecer su controlador original.
Rectangle:
  properties:
    x:
      description: La coordenada x del origen del rectángulo
    'y':
      description: La coordenada y del origen del rectángulo
remote:
  description: Uso de módulos de proceso principal del proceso de renderizado.
  methods:
    require:
      description: por ejemplo
      returns:
        description: >-
          El objeto devuelto por require(module) en el proceso principal. Módulos especificados por su ruta de acceso relativa se resolverán en relación con el punto de entrada del proceso principal.
    getCurrentWindow:
      returns:
        description: La ventana a la que pertenece esta página web.
    getCurrentWebContents:
      returns:
        description: El contenido de la web de esta página web.
    getGlobal:
      returns:
        description: 'La variable global de nombre (por ejemplo global[name]) en el proceso principal.'
  properties:
    process:
      description: >-
        El objeto del proceso en el proceso principal. Esto es lo mismo que remote.getGlobal('process') pero se almacena en caché.
RemoveClientCertificate:
  properties:
    type:
      description: clientCertificate.
    origin:
      description: >-
        Origen del servidor cuyo certificado cliente asociado debe quitarse de la caché.
RemovePassword:
  properties:
    type:
      description: contraseña.
    origin:
      description: >-
        Cuando siempre, sólo se eliminará la información de autenticación relacionados con el origen de lo contrario la caché toda se borrará.
    scheme:
      description: >-
        Esquema de la autentificación. Puede ser básica, digest, ntlm, negociar. Deberán extraer por origen.
    realm:
      description: Reino de la autentificación. Deberán extraer por origen.
    username:
      description: >-
        Credenciales de la autentificación. Deberán extraer por origen.
    password:
      description: >-
        Credenciales de la autentificación. Deberán extraer por origen.
screen:
  description: 'Recuperar información sobre el tamaño de la pantalla, pantallas, posición del cursor, etcetera.'
  methods:
    getCursorScreenPoint:
      description: La actual posición absoluta del puntero del mouse.
    getPrimaryDisplay:
      returns:
        description: La pantalla principal.
    getAllDisplays:
      returns:
        description: Una serie de pantallas de visualización que están disponibles actualmente.
    getDisplayNearestPoint:
      returns:
        description: La pantalla más cercano al punto especificado.
    getDisplayMatching:
      returns:
        description: La pantalla que más se intersecta los límites proporcionados.
  events:
    display-added:
      description: Emite cuando se ha añadido newDisplay.
    display-removed:
      description: Emite cuando se ha eliminado oldDisplay.
    display-metrics-changed:
      description: >-
        Emite cuando cambian de uno o más parámetros en una pantalla. La changedMetrics es una matriz de cadenas que describen los cambios. Posibles cambios son límites, área de trabajo, scaleFactor y rotación.
ScrubberItem:
  properties:
    label:
      description: El texto que aparezca en este artículo
    icon:
      description: La imagen que aparezca en este artículo
SegmentedControlSegment:
  properties:
    label:
      description: El texto que aparezca en este segmento
    icon:
      description: La imagen que aparezca en este segmento
    enabled:
      description: 'Si este segmento es seleccionable. Por defecto: true'
session:
  description: 'Administrar sesiones de navegador, cookies, caché, configuración de proxy, etcetera.'
  methods:
    fromPartition:
      description: >-
        Si partición comienza con persist:, la página será utilizar una sesión persistente para todas las páginas en la aplicación con la misma partición. Si no hay persisten: prefijo, la página será utilizar una sesión en la memoria. Si la partición está vacía se devolverá la sesión predeterminada de la aplicación. Para crear una sesión con opciones, se debe asegurar que la sesión con la partición nunca se ha utilizado antes. No hay manera de cambiar las opciones de un objeto de sesión existente.
      parameters:
        options:
          properties:
            cache:
              description: Si desea activar la memoria caché.
      returns:
        description: >-
          Una instancia de la sesión de cuerdas de la partición. Cuando hay una sesión con la misma partición, se devolverá; de lo contrario se creará una nueva instancia de la sesión con opciones.
  properties:
    defaultSession:
      description: 'Un objeto de sesión, el objeto de sesión por defecto de la aplicación.'
Session:
  description: Obtener y establecer propiedades de una sesión.
  instanceMethods:
    getCacheSize:
      description: Devolución de llamada se invoca con el actual tamaño de memoria caché de la sesión.
      parameters:
        callback:
          parameters:
            size:
              description: Tamaño de caché usado en bytes.
    clearCache:
      description: Borra el caché de la sesión HTTP.
      parameters:
        callback:
          description: Cuando se realiza la operación
    clearStorageData:
      description: Borra los datos de almacenamiento web.
      parameters:
        options:
          properties:
            origin:
              description: >-
                Debe seguir representación scheme://host:port de window.location.origin.
            storages:
              description: >-
                Los tipos de almacenamientos para borrar, puede contener: appcache, cookies, archivos, indexdb, localstorage, shadercache, websql, serviceworkers
            quotas:
              description: >-
                Los tipos de cuotas para borrar, puede contener: syncable, persistente y temporal.
        callback:
          description: Se llama cuando se realiza la operación.
    flushStorageData:
      description: Escribe cualquier datos de DOMStorage no en disco.
    setProxy:
      description: >-
        Establece la configuración de proxy. Cuando pacScript y proxyRules están juntos, se omite la opción de proxyRules y pacScript configuración se aplica. El proxyRules tiene que seguir las siguientes reglas: por ejemplo: la proxyBypassRules es una lista separada por comas de las reglas que se describen a continuación:
      parameters:
        config:
          properties:
            pacScript:
              description: La URL asociada con el archivo PAC.
            proxyRules:
              description: Reglas indicando que proxy utilizar.
            proxyBypassRules:
              description: Reglas indicando que URL deben omitir la configuración de proxy.
        callback:
          description: Se llama cuando se realiza la operación.
    resolveProxy:
      description: >-
        Resuelve la información del proxy para url. La devolución de llamada se llamará con callback(proxy) cuando se realiza la solicitud.
    setDownloadPath:
      description: >-
        Juegos Descargar guardar directorio. De forma predeterminada, el directorio de descarga será las descargas en la carpeta de la aplicación respectiva.
      parameters:
        path:
          description: La ubicación de descarga
    enableNetworkEmulation:
      description: Emula la red con la configuración dada para la sesión.
      parameters:
        options:
          properties:
            offline:
              description: Si desea emular red. Por defecto false.
            latency:
              description: RTT en el ms. por defecto a 0, que desactiva la regulación de la latencia.
            downloadThroughput:
              description: >-
                Descargar tarifa en Bps. valores por defecto a 0 que será desactivar el límite de descarga.
            uploadThroughput:
              description: >-
                Subir velocidad en Bps. valores por defecto a 0 que deshabilita la carga límite.
    disableNetworkEmulation:
      description: >-
        Deshabilita cualquier emulación de red ya activo durante el período de sesiones. Se restablece a la configuración original de la red.
    setCertificateVerifyProc:
      description: >-
        Establece el certificado de verificar proc para la sesión, se llamará el proc con proc (petición, devolución de llamada) cuando se solicita una verificación de certificado de servidor. Llamar a callback(0) acepta el certificado, que callback(-2) la rechaza. Llamar setCertificateVerifyProc(null) volverá espalda al certificado por defecto verificar proc.
      parameters:
        proc:
          parameters:
            request:
              properties:
                error:
                  description: Resultado de la verificación de cromo.
            callback:
              parameters:
                verificationResult:
                  description: >-
                    Valor puede ser uno de los códigos de error de certificado de. Aparte de los códigos de error de certificado, pueden utilizar los siguientes códigos especiales.
    setPermissionRequestHandler:
      description: >-
        Establece el controlador que se puede utilizar para responder a las peticiones de permiso para la sesión. Llamar callback(true) permitirá que el permiso y la callback(false) la rechazará.
      parameters:
        handler:
          parameters:
            webContents:
              description: WebContents solicitando el permiso.
            permission:
              description: >-
                Enumeración de 'media', 'geolocalización', 'notificaciones', 'midiSysex', 'pointerLock', 'pantalla completa', 'openExternal'.
            callback:
              parameters:
                permissionGranted:
                  description: Permitir o denegar el permiso
    clearHostResolverCache:
      description: Borra la caché de resolución de host.
      parameters:
        callback:
          description: Se llama cuando se realiza la operación.
    allowNTLMCredentialsForDomains:
      description: >-
        Establece dinámicamente si siempre enviar las credenciales de autenticación HTTP NTLM o Negotiate.
      parameters:
        domains:
          description: >-
            Una lista separados por comas de los servidores que está habilitada la autenticación integrada.
    setUserAgent:
      description: >-
        Reemplaza el userAgent y acceptLanguages para esta sesión. El acceptLanguages debe una coma separada Lista ordenada de códigos de idioma, por ejemplo "en-US, fr, de, ko, zh-CN, ja". Esto no afecta a los WebContents, y cada WebContents puede utilizar webContents.setUserAgent para reemplazar al agente de sesión de usuario.
    getUserAgent:
      returns:
        description: El agente de usuario para esta sesión.
    getBlobData:
      parameters:
        identifier:
          description: UUID válido.
        callback:
          parameters:
            result:
              description: Datos de BLOB.
      returns:
        description: Los datos de blob asociados al identificador.
    createInterruptedDownload:
      description: >-
        Permite reanudar cancelado o interrumpido descargas de sesión anterior. La API generará un DownloadItem que se puede acceder con el acto de voluntad-descargar. El DownloadItem no tendrá ningún WebContents asociado y el estado inicial se interrumpirá. La descarga iniciará sólo cuando se llama la API de reanudar en el DownloadItem.
      parameters:
        options:
          properties:
            path:
              description: Ruta de acceso absoluta de la descarga.
            urlChain:
              description: Cadena completa de URL para la descarga.
            offset:
              description: Inicio gama para la descarga.
            length:
              description: Longitud total de la descarga.
            lastModified:
              description: Valor de encabezado Last-Modified.
            eTag:
              description: Valor del encabezado ETag.
            startTime:
              description: >-
                Tiempo cuando empezó a descargar en número de segundos desde el epoch UNIX.
    clearAuthCache:
      description: Borra el caché de la sesión HTTP autenticación.
      parameters:
        callback:
          description: Cuando se realiza la operación
  instanceProperties:
    cookies:
      description: Un objeto de Cookies para esta sesión.
    webRequest:
      description: Un objeto WebRequest para esta sesión.
    protocol:
      description: Un objeto de protocolo para esta sesión.
  instanceEvents:
    will-download:
      description: >-
        Emitida cuando el electrón está a punto de descargar el artículo en webContents. Llamar event.preventDefault() se cancela la descarga y artículo no estará disponible en el siguiente tick del proceso.
shell:
  description: Administrar archivos y URLs usando sus aplicaciones por defecto.
  methods:
    showItemInFolder:
      description: 'Mostrar el archivo en un archivo de administrador. Si es posible, seleccione el archivo.'
      returns:
        description: Si el elemento fue demostrado con éxito
    openItem:
      description: Abra el archivo determinado manera por defecto del escritorio.
      returns:
        description: Si el artículo fue abierto con éxito.
    openExternal:
      description: >-
        Abrir la dirección URL de protocolo externo determinado manera del escritorio por defecto. (Por ejemplo, mailto: URL en agente de correo predeterminado del usuario).
      parameters:
        options:
          properties:
            activate:
              description: >-
                True para traer la aplicación abierta en primer plano. El valor predeterminado es true.
        callback:
          description: Si especifica se realizar al aire libre de forma asincrónica.
      returns:
        description: >-
          Si una aplicación estaba disponible para abrir la URL. Si la devolución de llamada se especifica, devuelve siempre true.
    moveItemToTrash:
      description: >-
        Mover el archivo a la papelera y devuelve un estado booleano de la operación.
      returns:
        description: Si el elemento se trasladó con éxito a la basura
    beep:
      description: Juego el pitido.
    writeShortcutLink:
      description: Crea o actualiza un vínculo de acceso directo en el shortcutPath.
      parameters:
        operation:
          description: 'Por defecto es ''crear'', puede ser uno de los siguientes:'
      returns:
        description: Si el acceso directo se ha creado correctamente
    readShortcutLink:
      description: >-
        Resuelve el vínculo de acceso directo en shortcutPath. Se produce una excepción cuando ocurre algún error.
ShortcutDetails:
  properties:
    target:
      description: El objetivo de lanzar desde este acceso directo.
    cwd:
      description: El directorio de trabajo. Por defecto está vacío.
    args:
      description: >-
        Los argumentos que se aplicará para cuando se lanza desde este acceso directo. Por defecto está vacío.
    description:
      description: La descripción del acceso directo. Por defecto está vacío.
    icon:
      description: >-
        La ruta para el icono, puede ser una DLL o EXE. icono e Indice tienen que establecerse juntos. Por defecto está vacío, que utiliza el icono de destino.
    iconIndex:
      description: El identificador de recursos de icono al icono una DLL o EXE. Valor predeterminado es 0.
    appUserModelId:
      description: El usuario modelo ID. Por defecto está vacío.
systemPreferences:
  description: Obtener las preferencias del sistema.
  methods:
    isDarkMode:
      returns:
        description: Si el sistema está en modo oscuro.
    isSwipeTrackingFromScrollEventsEnabled:
      returns:
        description: Si es el deslizamiento entre las páginas de configuración.
    postNotification:
      description: >-
        Entradas evento como notificaciones nativas de macOS. El userInfo es un objeto que contiene el Diccionario de información del usuario junto con la notificación.
    postLocalNotification:
      description: >-
        Entradas evento como notificaciones nativas de macOS. El userInfo es un objeto que contiene el Diccionario de información del usuario junto con la notificación.
    subscribeNotification:
      description: >-
        Se suscribe a notificaciones nativas de macOS, devolución de llamada se llamará con callback (evento, userInfo) cuando ocurra el evento correspondiente. El userInfo es un objeto que contiene el Diccionario de información del usuario junto con la notificación. Se devuelve el identificador de suscriptor, que se puede utilizar para darse de baja del evento. Bajo el capó que este API se suscribe a NSDistributedNotificationCenter, son valores de ejemplo de evento:
    unsubscribeNotification:
      description: Quita el suscriptor con el id.
    subscribeLocalNotification:
      description: >-
        Igual que subscribeNotification, pero utiliza NSNotificationCenter para defectos locales. Esto es necesario para eventos como NSUserDefaultsDidChangeNotification
    unsubscribeLocalNotification:
      description: >-
        Igual que unsubscribeNotification, pero extrae el suscriptor NSNotificationCenter.
    getUserDefault:
      description: >-
        Obtener el valor de clave en preferencias del sistema. Esta API utiliza NSUserDefaults en macOS. Algunos popular clave y tipos son:
      parameters:
        type:
          description: >-
            Puede ser 'string', 'booleano', 'entero', 'flotar', 'double', 'url', 'matriz', 'Diccionario'
    setUserDefault:
      description: >-
        Establezca el valor de clave en preferencias del sistema. Tenga en cuenta que el tipo debe coincidir con el tipo real del valor. Se produce una excepción si no lo hacen. Esta API utiliza NSUserDefaults en macOS. Algunos popular clave y tipos son:
      parameters:
        type:
          description: >-
            Ver [getUserDefault] [#systempreferencesgetuserdefaultkey-tipo-macos]
    isAeroGlassEnabled:
      description: >-
        Este método devuelve true si está habilitada la composición DWM (Aero Glass) y false en caso contrario. Un ejemplo de uso para determinar si debe crear una ventana transparente o no (ventanas transparentes no funcionarán correctamente cuando se deshabilita la composición DWM):
    getAccentColor:
      returns:
        description: >-
          La usuarios sistema amplio acento color preferencia actual en forma hexadecimal RGBA.
    getColor:
      parameters:
        color:
          description: 'Uno de los siguientes valores:'
      returns:
        description: >-
          La configuración del sistema de color en forma hexadecimal RGB (#ABCDEF). Consulte a la documentación de Windows para obtener más detalles.
    isInvertedColorScheme:
      returns:
        description: >-
          True si un esquema de color invertido, como un tema de alto contraste, es activo, false de lo contrario.
  events:
    accent-color-changed:
      returns:
        newColor:
          description: >-
            El nuevo color RGBA el usuario asignado para ser su sistema acento color.
    inverted-color-scheme-changed:
      returns:
        invertedColorScheme:
          description: >-
            'true' si un esquema de color invertido, como un tema de contraste alto, está siendo usado, 'false' en caso contrario.
Task:
  properties:
    program:
      description: >-
        Ruta de acceso del programa a ejecutar, generalmente debe especificar process.execPath que abre el programa actual.
    arguments:
      description: Los argumentos de línea de comandos cuando se ejecuta el programa.
    title:
      description: La cadena que se mostrará en un JumpList.
    description:
      description: Descripción de la tarea.
    iconPath:
      description: >-
        La ruta de acceso absoluta a un icono que se mostrará en un JumpList, que puede ser un archivo de recursos arbitrario que contiene un icono. Generalmente se puede especificar process.execPath para mostrar el icono del programa.
    iconIndex:
      description: >-
        El índice de icono en el archivo de icono. Si un archivo de icono consta de dos o más iconos, establezca este valor para identificar el icono. Si un archivo de icono consiste en un icono, este valor es 0.
ThumbarButton:
  properties:
    icon:
      description: El icono en la barra de herramientas de miniatura.
    tooltip:
      description: El texto del tooltip del botón.
    flags:
      description: >-
        Control de Estados específicos y comportamientos del botón. Por defecto, que es ['enabled'].
TouchBar:
  description: Crear diseños de huecas para aplicaciones nativas de macOS
  staticProperties:
    TouchBarButton:
      description: Crear un botón en la barra táctil para aplicaciones nativas de macOS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: Texto del botón.
              - 
                description: ''' Botón color de fondo en formato hexadecimal, es decir'
              - 
                description: Icono del botón.
              - 
                description: Puede ser izquierda, derecha o superposición.
              - 
                description: Función a llamar cuando se hace clic en el botón.
      instanceProperties:
        label:
          description: >-
            Cadena que representa el actual texto del botón. Cambiar este valor inmediatamente actualiza el botón en la barra táctil.
        backgroundColor:
          description: >-
            Un código hexadecimal de cadena que representa el color de fondo actual del botón. Cambiar este valor inmediatamente actualiza el botón en la barra táctil.
        icon:
          description: >-
            Un NativeImage que representa el icono del botón actual. Cambiar este valor inmediatamente actualiza el botón en la barra táctil.
    TouchBarColorPicker:
      description: Crear un selector de color en la barra táctil para aplicaciones nativas de macOS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: >-
                  Matriz de cadenas de color hexadecimal para aparecer como posibles colores para seleccionar.
              - 
                description: ''' El color hexadecimal seleccionado en el selector, es decir'
              - 
                description: Función llamar cuando se selecciona un color.
                parameters:
                  - 
                    description: El color que el usuario ha seleccionado en el selector
      instanceProperties:
        availableColors:
          description: >-
            Una matriz de [] de cadenas que representan los colores disponibles del selector de color para seleccionar. Cambiar este valor inmediatamente actualiza el selector de color en la barra táctil.
        selectedColor:
          description: >-
            Color seleccionado un código hex String representando actualmente el selector de color. Cambiar este valor inmediatamente actualiza el selector de color en la barra táctil.
    TouchBarGroup:
      description: Crear un grupo en la barra táctil para aplicaciones nativas de macOS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: Artículos para mostrar como un grupo.
    TouchBarLabel:
      description: Crear una etiqueta en la barra táctil para aplicaciones nativas de macOS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: Texto que se muestra.
              - 
                description: ''' Hex color de texto, es decir'
      instanceProperties:
        label:
          description: >-
            Una cadena que representa el texto actual de la etiqueta. Cambiar este valor inmediatamente actualiza la etiqueta en la barra táctil.
        textColor:
          description: >-
            Un código hexadecimal de cadena que representa el color del texto actual de la etiqueta. Cambiar este valor inmediatamente actualiza la etiqueta en la barra táctil.
    TouchBarPopover:
      description: Crear un popover en el bar de toque para aplicaciones nativas de macOS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: Texto del botón de popover.
              - 
                description: Icono de botón de popover.
              - 
                description: Elementos para mostrar en el popover.
              - 
                description: >-
                  fiel a la pantalla un botón cerrar a la izquierda del popover, false para no mostrarlo. Valor predeterminado es true.
      instanceProperties:
        label:
          description: >-
            Cadena que representa el actual texto del botón de popover. Cambiar este valor inmediatamente actualiza el popover en el bar de toque.
        icon:
          description: >-
            Un NativeImage que representa el icono de botón actuales de popover. Cambiar este valor inmediatamente actualiza el popover en el bar de toque.
    TouchBarScrubber:
      description: Crear un depurador (selector de desplazamiento)
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: Una matriz de elementos a colocar en este depurador
              - 
                description: >-
                  Cuando el usuario golpea un objeto que no era el último elemento roscado
                parameters:
                  - 
                    description: El índice del elemento seleccionado el usuario
              - 
                description: Cuando el usuario aprovecha cualquier elemento
                parameters:
                  - 
                    description: El índice del elemento que el usuario toca
              - 
                description: Estilo del elemento seleccionado. Valor predeterminado es null.
              - 
                description: Punto estilo del recubrimiento seleccionado. Valor predeterminado es null.
              - 
                description: Por defecto false.
              - 
                description: Por defecto es libre.
              - 
                description: Por defecto es true.
      instanceProperties:
        items:
          description: >-
            Una matriz de [] de ScrubberItem que representan los elementos en este depurador. Actualizar este valor inmediatamente actualiza el control en la barra táctil. Actualización de propiedades profundas dentro de esta matriz no actualizar la barra táctil.
        selectedStyle:
          description: >-
            Una cadena que representa el estilo que deben tener los elementos seleccionados en el depurador. Actualizar este valor inmediatamente actualiza el control en la barra táctil.  Valores posibles:
        overlayStyle:
          description: >-
            Una cadena que representa el estilo que deben tener los elementos seleccionados en el depurador. Este estilo es superpuesta en la parte superior del elemento depurador en lugar de estar detrás de él. Actualizar este valor inmediatamente actualiza el control en la barra táctil.  Valores posibles:
        showArrowButtons:
          description: >-
            Valor de tipo Boolean que representa si se muestran las flechas de izquierda / derecha de la selección en este depurador. Actualizar este valor inmediatamente actualiza el control en la barra táctil.
        mode:
          description: >-
            Una cadena que representa el modo de este depurador. Actualizar este valor inmediatamente actualiza el control en la barra táctil. Valores posibles:
        continuous:
          description: >-
            Un Boolean que representa si este lavador es continua o no. Actualizar este valor inmediatamente actualiza el control en la barra táctil.
    TouchBarSegmentedControl:
      description: >-
        Crear un control segmentado (un grupo) donde un botón tiene un estado seleccionado
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: 'Estilo de los segmentos:'
                possibleValues:
                  - 
                    description: >-
                      De forma predeterminada. La apariencia del control segmentado se determina automáticamente según el tipo de ventana que se muestra el control y la posición dentro de la ventana.
                  - 
                    description: El control se muestra el estilo redondeado.
                  - 
                    description: El control se muestra el textura estilo redondeado.
                  - 
                    description: El control se muestra el estilo de ronda rect.
                  - 
                    description: El control se muestra el textura estilo cuadrado.
                  - 
                    description: El control se muestra utilizando el estilo cápsula
                  - 
                    description: El control se muestra el estilo cuadrado pequeño.
                  - 
                    description: >-
                      Los segmentos en el control son mostradas muy cerca uno del otro pero no tocar.
              - 
                description: 'El modo de selección del control:'
                possibleValues:
                  - 
                    description: >-
                      De forma predeterminada. Un elemento seleccionado en un momento, uno anula el elemento previamente seleccionado.
                  - 
                    description: Varios elementos pueden seleccionarse a la vez.
                  - 
                    description: >-
                      Hacer los segmentos actúan como botones, cada segmento puede ser presionado y lanzado pero no marcada como activa.
              - 
                description: Una matriz de segmentos en este control.
              - 
                description: >-
                  El índice del segmento seleccionado, se actualizará automáticamente con la interacción del usuario. Cuando el modo de múltiples será el último elemento seleccionado.
              - 
                description: Llamado cuando el usuario selecciona un nuevo segmento
                parameters:
                  - 
                    description: El índice del segmento seleccionado el usuario.
                  - 
                    description: >-
                      Si como resultado de la selección del usuario el segmento es seleccionado o no.
      instanceProperties:
        segmentStyle:
          description: >-
            Una cadena que representa el estilo de segmento actual de controles.  Actualizar este valor inmediatamente actualiza el control en la barra táctil.
        segments:
          description: >-
            Una matriz de [] de SegmentedControlSegment que representan los segmentos en este control.  Actualizar este valor inmediatamente actualiza el control en la barra táctil.  Actualización de propiedades profundas dentro de esta matriz no actualizar la barra táctil.
        selectedIndex:
          description: >-
            Un entero que representa el segmento seleccionado.  Cambiar este valor inmediatamente actualiza el control en la barra táctil.  Interacción del usuario con la barra táctil para actualizar este valor automáticamente.
    TouchBarSlider:
      description: Crear un control deslizante en la barra táctil para aplicaciones nativas de macOS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: Texto de la etiqueta.
              - 
                description: Valor seleccionado.
              - 
                description: Valor mínimo.
              - 
                description: Valor máximo.
              - 
                description: Función llamar cuando se cambia el regulador.
                parameters:
                  - 
                    description: El valor que el usuario ha seleccionado en el control deslizante
      instanceProperties:
        label:
          description: >-
            Cadena que representa el texto actual del control deslizante. Cambiar este valor inmediatamente actualiza el cursor en la barra táctil.
        value:
          description: >-
            Un número que representa el valor actual del control deslizante. Cambiar este valor inmediatamente actualiza el cursor en la barra táctil.
        minValue:
          description: >-
            Un número que representa valor mínimo actual del control deslizante. Cambiar este valor inmediatamente actualiza el cursor en la barra táctil.
        maxValue:
          description: >-
            Un número que representa el valor máximo actual del control deslizante. Cambiar este valor inmediatamente actualiza el cursor en la barra táctil.
    TouchBarSpacer:
      description: >-
        Crear a un espaciador entre dos elementos en la barra táctil para aplicaciones nativas de macOS
      constructorMethod:
        parameters:
          - 
            properties:
              - 
                description: 'Tamaño del espaciador, de los valores posibles son:'
                possibleValues:
                  - 
                    description: Pequeño espacio entre los elementos.
                  - 
                    description: Gran espacio entre los elementos.
                  - 
                    description: Ocupan todo el espacio disponible.
  instanceProperties:
    escapeItem:
      description: >-
        El TouchBarItem que sustituirá el botón "esc" en la barra táctil cuando se coloca. Valor null devuelve la tecla de "esc" por defecto. Cambiar este valor inmediatamente actualiza el punto de escape en la barra táctil.
Tray:
  description: Añadir los iconos y menús contextuales en área de notificación del sistema.
  instanceMethods:
    destroy:
      description: Destruye inmediatamente el icono de la bandeja.
    setImage:
      description: Establece la imagen asociada a este icono de la bandeja.
    setPressedImage:
      description: Establece la imagen asociada a este icono de la bandeja cuando está presionado en macOS.
    setToolTip:
      description: Establece el texto de suspender para este icono de la bandeja.
    setTitle:
      description: Establece el título que aparece a un lado del icono en la barra de estado.
    setHighlightMode:
      description: >-
        Establece cuando se convierte en destacado fondo de icono de la bandeja (en azul). Nota: Puede utilizar highlightMode con un BrowserWindow por la conmutación entre 'nunca' y 'siempre' modos cuando cambia la visibilidad de la ventana.
      parameters:
        mode:
          description: 'Destacar el modo con uno de los siguientes valores:'
    displayBalloon:
      description: Muestra un globo de la bandeja.
    popUpContextMenu:
      description: >-
        Aparece el menú contextual del icono de la bandeja. Cuando se pasa el menú, el menú se mostrará en lugar del menú de contexto del icono de la bandeja. La posición sólo está disponible en Windows, y es (0, 0) por defecto.
      parameters:
        position:
          description: El pop-up posición.
    setContextMenu:
      description: Establece el menú contextual para este icono.
    getBounds:
      description: Los límites de este icono de la bandeja como objeto.
    isDestroyed:
      returns:
        description: Si se destruye el icono de la bandeja.
  instanceEvents:
    click:
      description: Emite cuando se hace clic en el icono de la bandeja.
      returns:
        bounds:
          description: Los límites del icono de la bandeja
    right-click:
      description: Emite cuando la derecha hacer clic en el icono de la bandeja.
      returns:
        bounds:
          description: Los límites del icono de la bandeja
    double-click:
      description: Emite cuando doble se hace clic en el icono de la bandeja.
      returns:
        bounds:
          description: Los límites del icono de la bandeja
    balloon-show:
      description: Emitido cuando el globo de la bandeja.
    balloon-click:
      description: Emite cuando se hace clic en el globo de la bandeja.
    balloon-closed:
      description: >-
        Emitido cuando el globo de la bandeja está cerrado por tiempo de espera o usuario manualmente lo cierra.
    drop:
      description: Emite cuando se colocan objetos arrastrados en el icono de la bandeja.
    drop-files:
      description: Emite cuando arrastrado los archivos se colocan en el icono de la bandeja.
      returns:
        files:
          description: Las rutas de los archivos caídos.
    drop-text:
      description: Emite cuando texto arrastrado en el icono de la bandeja.
      returns:
        text:
          description: la cadena de texto caído
    drag-enter:
      description: Emitida cuando una operación de arrastre entra en el icono de la bandeja.
    drag-leave:
      description: Emite cuando sale de una operación de arrastre el icono de la bandeja.
    drag-end:
      description: >-
        Cuando emite una operación de arrastre termina en la bandeja o termina en otro lugar.
UploadBlob:
  properties:
    type:
      description: BLOB.
    blobUUID:
      description: UUID de datos blob para subir.
UploadData:
  properties:
    bytes:
      description: Contenido enviado.
    file:
      description: Ruta de acceso del archivo que se envía.
    blobUUID:
      description: UUID de datos blob. Utilice el método para recuperar los datos.
UploadFile:
  properties:
    type:
      description: archivo.
    filePath:
      description: Ruta del archivo a ser subido.
    offset:
      description: Por defecto es 0.
    length:
      description: Número de bytes para leer desde. Por defecto es 0.
    modificationTime:
      description: Última modificación tiempo número de seno segundos del época del UNIX.
UploadFileSystem:
  properties:
    type:
      description: sistema de ficheros.
    filsSystemURL:
      description: Sistema de archivos url para leer los datos para la carga.
    offset:
      description: Por defecto es 0.
    length:
      description: Número de bytes para leer desde. Por defecto es 0.
    modificationTime:
      description: Última modificación tiempo número de seno segundos del época del UNIX.
UploadRawData:
  properties:
    type:
      description: rawData.
    bytes:
      description: Datos a cargar.
webContents:
  description: Procesamiento y control de páginas web.
  methods:
    getAllWebContents:
      returns:
        description: >-
          Matriz de todas las instancias de WebContents. Esto incluirá contenidos de la web para todos los windows, webviews, devtools abierto y devtools páginas de fondo de extensión.
    getFocusedWebContents:
      returns:
        description: >-
          Los contenidos de la web que se centra en esta aplicación, de lo contrario devuelve null.
    fromId:
      returns:
        description: Una instancia de WebContents con el identificador dado.
WebContents:
  description: Procesar y controlar el contenido de una instancia de BrowserWindow.
  instanceMethods:
    loadURL:
      description: >-
        Carga la dirección url en la ventana. La url debe contener el prefijo de protocolo, por ejemplo el http:// o file://. Si la carga debe evitar caché http utilice la cabecera pragma para lograrlo.
      parameters:
        options:
          properties:
            httpReferrer:
              description: Un HTTP Referrer url.
            userAgent:
              description: Un agente de usuario que origina la solicitud.
            extraHeaders:
              description: Encabezados adicionales separados por "\n"
            baseURLForDataURL:
              description: >-
                Url (con separador de ruta de acceso que se arrastra) para los archivos a cargar por la url de los datos de la base. Esto es necesario sólo si la dirección url especificada es un enlace de datos y necesita cargar otros archivos.
    downloadURL:
      description: >-
        Inicia una descarga de los recursos en la dirección url sin navegar. Se activará el evento descargar voluntad de sesión.
    getURL:
      returns:
        description: La URL de la página web actual.
    getTitle:
      returns:
        description: El título de la página web actual.
    isDestroyed:
      returns:
        description: Si se destruye la página web.
    isFocused:
      returns:
        description: Si se centra la página web.
    isLoading:
      returns:
        description: Si la página web todavía está cargando recursos.
    isLoadingMainFrame:
      returns:
        description: >-
          Si todavía está cargando el marco principal (y no sólo iframes o frames dentro de ella).
    isWaitingForResponse:
      returns:
        description: >-
          Si la página web espera una respuesta de primera desde el principal recurso de la página.
    stop:
      description: Deja pendiente la navegación.
    reload:
      description: Vuelve a cargar la página web actual.
    reloadIgnoringCache:
      description: Recarga la página actual y omite la memoria caché.
    canGoBack:
      returns:
        description: Si el navegador puede volver a la página web anterior.
    canGoForward:
      returns:
        description: Si el navegador puede avanzar a la siguiente página web.
    canGoToOffset:
      returns:
        description: Si la página web puede ir a compensar.
    clearHistory:
      description: Borra el historial de navegación.
    goBack:
      description: Hace que el navegador volver una página web.
    goForward:
      description: Hace el navegador hacia una página web.
    goToIndex:
      description: Navega el navegador para el índice de la página web absoluta especificada.
    goToOffset:
      description: Se desplaza al desplazamiento especificado desde la "entrada actual".
    isCrashed:
      returns:
        description: Si el proceso de render se ha estrellado.
    setUserAgent:
      description: Reemplaza al agente de usuario de esta página web.
    getUserAgent:
      returns:
        description: El agente de usuario de esta página web.
    insertCSS:
      description: Inyecta CSS en la página web actual.
    executeJavaScript:
      description: >-
        Evalúa el código en la página. En la ventana del navegador algunas APIs HTML como requestFullScreen sólo puede ser invocado por un gesto del usuario. Establecer userGesture en true elimina esta limitación. Si el resultado del código ejecutado es una promesa el resultado de devolución de llamada será el valor resuelto de la promesa.  Te recomendamos que uses la promesa volvió a manejar el código que resulta en una promesa.
      parameters:
        userGesture:
          description: Por defecto es 'falso'.
        callback:
          description: Llamado después de ejecuta el script.
      returns:
        description: >-
          Una promesa que se resuelve con el resultado del código ejecutado o se rechaza si el resultado del código es una promesa rechazada.
    setAudioMuted:
      description: Silenciar el audio de la página web actual.
    isAudioMuted:
      returns:
        description: Si esta página ha sido silenciada.
    setZoomFactor:
      description: >-
        Cambia el factor de zoom al factor especificado. Factor de zoom es zoom % dividido por 100, así que 300% = 3.0.
      parameters:
        factor:
          description: Factor de zoom.
    getZoomFactor:
      description: >-
        Envía una solicitud para obtener el factor de zoom actual, la devolución de llamada se llamará con callback(zoomFactor).
    setZoomLevel:
      description: >-
        Cambia el nivel de zoom hasta el nivel especificado. El tamaño original es 0 y cada incremento superior o inferior representa zoom 20% mayor o menor a los límites por defecto del 300% y el 50% del tamaño original, respectivamente.
      parameters:
        level:
          description: Nivel de zoom
    getZoomLevel:
      description: >-
        Envía una solicitud para obtener el actual nivel zoom, la devolución de llamada se llamará con callback(zoomLevel).
    setZoomLevelLimits:
      description: >-
        Obsoleto: Llamar setVisualZoomLevelLimits en lugar de otro para definir los límites de nivel de zoom visual. Este método se eliminará en electrónica 2.0.
    setVisualZoomLevelLimits:
      description: Establece el nivel máximo y mínimo de pinch-to-zoom.
    setLayoutZoomLevelLimits:
      description: Establece el máximo y mínimo basado en diseño (es decir, no visual) nivel de zoom.
    undo:
      description: Se ejecuta la edición deshacer comando en página web.
    redo:
      description: Se ejecuta la edición rehacer comando en página web.
    cut:
      description: Ejecuta el comando edición en página web.
    copy:
      description: Ejecuta la copia de comando de edición en la página web.
    copyImageAt:
      description: Copiar la imagen en la posición dada en el portapapeles.
    paste:
      description: Se ejecuta la edición pasta de comando en la página web.
    pasteAndMatchStyle:
      description: Se ejecuta la edición pasteAndMatchStyle de comando en la página web.
    delete:
      description: Se ejecuta el edición eliminar comando en página web.
    selectAll:
      description: Se ejecuta la edición comando selectAll en página web.
    unselect:
      description: Ejecuta el comando Edición unselect en página web.
    replace:
      description: Se ejecuta el edición reemplazar del comando en la página web.
    replaceMisspelling:
      description: Se ejecuta la edición replaceMisspelling de comando en la página web.
    insertText:
      description: Inserta texto al elemento enfocado.
    findInPage:
      description: >-
        Inicia una solicitud para encontrar todos coincide con el texto en la página web y devuelve un entero que representa el id de solicitud utilizado para la solicitud. El resultado de la solicitud puede obtenerse mediante la suscripción de evento encontrado en la página.
      parameters:
        text:
          description: 'Contenido a buscar, no debe estar vacío.'
        options:
          properties:
            forward:
              description: 'Si buscar hacia adelante o hacia atrás, por defecto true.'
            findNext:
              description: >-
                Si la operación es la primera solicitud o un seguimiento, por defecto false.
            matchCase:
              description: 'Si la búsqueda debe ser mayúsculas y minúsculas, por defecto false.'
            wordStart:
              description: Si se mira sólo el comienzo de las palabras. por defecto false.
            medialCapitalAsWordStart:
              description: >-
                Cuando se combina con wordStart, acepta a un partido en medio de una palabra si el partido comienza con una letra mayúscula seguida de una minúscula o no carta. Acepta coincide con varios otros intra-word, por defecto es false.
    stopFindInPage:
      description: >-
        Detiene cualquier solicitud de findInPage de la webContents con la acción siempre.
      parameters:
        action:
          description: >-
            Especifica la acción que tendrá lugar cuando se termina la petición ['webContents.findInPage'].
    capturePage:
      description: >-
        Captura una instantánea de la página dentro de Rect. Al finalizar se llamará callback con callback(image). La imagen es una instancia de NativeImage que almacena los datos de la instantánea. Omitir rect se captura la página entera visible.
      parameters:
        rect:
          description: El área de la página para ser capturado
    hasServiceWorker:
      description: >-
        Comprueba si cualquier ServiceWorker es registrada y devuelve un valor boolean como respuesta a la devolución de llamada.
    unregisterServiceWorker:
      description: >-
        Anula el registro de cualquier ServiceWorker si actual y devuelve un valor boolean como respuesta a la devolución de llamada cuando la promesa JS es cumplido o falso cuando la promesa JS es rechazada.
    print:
      description: >-
        Imprime la página de la ventana. Cuando el silencio se establece en true, electrón a recoger la impresora por defecto y por defecto para la impresión del sistema. Llamando al window.print() en la página web es equivalente a llamar a webContents.print({silent: false, printBackground: false}). Page-break-antes: siempre; Estilo CSS a la fuerza a imprimir en una página nueva.
      parameters:
        options:
          properties:
            silent:
              description: No pida a usuario configuración de impresión. Valor predeterminado es false.
            printBackground:
              description: >-
                También imprime el color de fondo y la imagen de la página web. Valor predeterminado es false.
    printToPDF:
      description: >-
        Imprime página de la ventana en formato PDF con vista previa de cromo ajustes personalizados de impresión. La devolución de llamada se llamará con callback (error, datos) al finalizar. Los datos están un Buffer que contiene los datos del PDF generados. El paisaje se omitirá si se utiliza @page en-regla CSS en la página web. Por defecto, se considerará como un vacío opciones: page-break-antes: siempre; Estilo CSS a la fuerza a imprimir en una página nueva. Un ejemplo de webContents.printToPDF:
      parameters:
        options:
          properties:
            marginsType:
              description: >-
                Especifica el tipo de márgenes a utilizar. Utiliza 0 para margen predeterminado, 1 para ningún margen y 2 por margen mínimo.
            pageSize:
              description: >-
                Especifique el tamaño de página del PDF generado. Puede ser A3, A4, A5, Legal, carta, tabloide o un objeto que contiene la altura y la anchura en micrones.
            printBackground:
              description: Si desea imprimir fondos de CSS.
            printSelectionOnly:
              description: Si desea imprimir sólo la selección.
            landscape:
              description: 'verdadero paisaje, false para retrato.'
    addWorkSpace:
      description: >-
        Añade la ruta especificada al espacio de trabajo DevTools. Debe utilizarse después de la creación DevTools:
    removeWorkSpace:
      description: Quita la ruta especificada de espacio de trabajo DevTools.
    openDevTools:
      description: Abre las devtools.
      parameters:
        options:
          properties:
            mode:
              description: >-
                Abre las devtools con muelle especificado estado, puede ser derecho, parte inferior, sin estacionar, separar. Por defecto utiliza muelle estatal. En el modo flotante es posible vuelta del muelle. En separar no es el modo.
    closeDevTools:
      description: Cierra las devtools.
    isDevToolsOpened:
      returns:
        description: Si se abre el devtools.
    isDevToolsFocused:
      returns:
        description: Si ve las devtools se centra.
    toggleDevTools:
      description: Cambia las herramientas de desarrollador.
    inspectElement:
      description: 'Comienza inspección de elemento en la posición (x, y).'
    inspectServiceWorker:
      description: Abre las herramientas de desarrollador para el contexto del trabajador de servicio.
    send:
      description: >-
        Enviar un mensaje asincrónico a proceso procesador via canal, usted puede también enviar argumentos arbitrarios. Argumentos a ser serializados en JSON internamente y por lo tanto ninguna función o cadena de prototipos serán incluido. El proceso de renderizado puede manejar el mensaje escuchando el canal con el módulo ipcRenderer. Un ejemplo de envío de mensajes desde el proceso principal para el proceso de renderizado:
    enableDeviceEmulation:
      description: Habilitar la emulación de dispositivos con los parámetros dados.
      parameters:
        parameters:
          properties:
            screenPosition:
              description: 'Especificar el tipo de pantalla para emular (por defecto: escritorio)'
            screenSize:
              description: Establecer el tamaño de pantalla emulada (screenPosition == móvil)
            viewPosition:
              description: >-
                Coloque la vista en la pantalla (screenPosition == móvil) (por defecto: {x: 0, y: 0})
            deviceScaleFactor:
              description: >-
                Establecer el factor de escala del aparato (si cero por defecto de factor de escala de dispositivo original) (por defecto: 0)
            viewSize:
              description: Establecer el tamaño de vista emulado (vacío no significa override)
            fitToView:
              description: >-
                Si vista emulado debe ser reducido si es necesario para adaptarse al espacio disponible (por defecto: false)
            offset:
              description: >-
                Desplazamiento de la vista emulada dentro de espacio disponible (no en fit para ver modo) (por defecto: {x: 0, y: 0})
            scale:
              description: >-
                Escala de vista emulado dentro de espacio disponible (no en fit para ver modo) (por defecto: 1)
    disableDeviceEmulation:
      description: Desactivar la emulación de dispositivos habilitado por webContents.enableDeviceEmulation.
    sendInputEvent:
      description: >-
        Envía un evento de entrada a la página. Para eventos de teclado, el objeto de evento también tienen las siguientes propiedades: para los eventos de ratón, el objeto de evento también tienen las siguientes propiedades: para el evento mouseWheel, el objeto de evento también tienen las siguientes propiedades:
      parameters:
        event:
          properties:
            type:
              description: >-
                () El tipo de evento, puede ser mouseDown, mouseUp, mouseEnter, mouseLeave, contextMenu, mouseWheel, mouseMove, keyDown, keyUp, char.
            modifiers:
              description: >-
                Puede incluir una gran variedad de modificadores del evento, shift, control, alt, meta, isKeypad, isAutoRepeat, leftButtonDown, middleButtonDown, rightButtonDown, capsLock, numLock, izquierda, derecha.
    beginFrameSubscription:
      description: >-
        Inicio suscribirse para eventos de presentación y capturaron a Marcos, la devolución de llamada se llamará con callback (frameBuffer, dirtyRect) cuando hay un evento de presentación. El frameBuffer es un Buffer que contiene los datos de píxel crudo. En la mayoría de las máquinas, efectivamente se almacenan los datos de píxeles en formato de 32 bits BGRA, pero depende de la representación real en el orden de bits del procesador (los procesadores más modernos son poco endian, en máquinas con procesadores de big-endian, los datos están en formato ARGB de 32 bits). El dirtyRect es un objeto con x, y, ancho, características de altura que describe fue repintado que parte de la página. Si onlyDirty se establece en true, frameBuffer sólo contendrá el área de repintado. onlyDirty por defecto en false.
      parameters:
        onlyDirty:
          description: Por defecto es 'false'
    endFrameSubscription:
      description: Fin suscripción para eventos de presentación de marco.
    startDrag:
      description: >-
        Establece el elemento como arrastrar elemento para operación de arrastrar-soltar actual, archivo es la ruta absoluta del archivo a ser arrastrado, y el icono es la imagen que muestra bajo el cursor al arrastrar.
      parameters:
        item:
          properties:
            file:
              description: o archivos de la ruta o rutas a los archivos que se arrastran.
            icon:
              description: La imagen debe ser no-vacío en macOS.
    savePage:
      parameters:
        fullPath:
          description: La ruta del archivo completo.
        saveType:
          description: Especificar el guardar tipo.
        callback:
          description: ''' (error) => {} ''.'
      returns:
        description: True si se ha iniciado con éxito el proceso de guardar la página.
    showDefinitionForSelection:
      description: Muestra Diccionario emergente que busca la palabra seleccionada en la página.
    setSize:
      description: >-
        Establezca el tamaño de la página. Esto sólo es compatible con contenido de invitado <webview>.
      parameters:
        options:
          properties:
            normal:
              description: >-
                Tamaño normal de la página. Esto puede usarse en combinación con el atributo para cambiar el tamaño manualmente el contenido de la huésped de vista Web.
    isOffscreen:
      returns:
        description: Indica si está habilitado el procesamiento fuera de la pantalla.
    startPainting:
      description: 'Si la representación fuera de la pantalla es Inicio habilitado y no pintura, pintura.'
    stopPainting:
      description: 'Si la representación fuera de la pantalla es parada habilitada y la pintura, pintura.'
    isPainting:
      returns:
        description: >-
          Si la representación fuera de la pantalla está activada devuelve si actualmente lo es la pintura.
    setFrameRate:
      description: >-
        Si se habilita la representación fuera de la pantalla establece la velocidad de fotogramas en el número especificado. Se aceptan solo valores entre 1 y 60.
    getFrameRate:
      returns:
        description: Si la representación fuera de la pantalla está activada devuelve la velocidad de fotogramas actual.
    invalidate:
      description: >-
        Horarios de un repintado completo de la ventana el contenido de esta web. Si la representación fuera de la pantalla está activada invalida la estructura y genera una nueva mediante el evento de 'pintura'.
    getWebRTCIPHandlingPolicy:
      returns:
        description: Devuelve la IP de WebRTC manipulación política.
    setWebRTCIPHandlingPolicy:
      description: >-
        Configuración de la IP WebRTC manipulación política le permite controlar que IPs están expuestos vía WebRTC.  Ver BrowserLeaks para más detalles.
      parameters:
        policy:
          description: Especificar la IP de WebRTC manipulación política.
  instanceProperties:
    id:
      description: Un entero que representa el ID de este WebContents.
    session:
      description: Un objeto de sesión (sesión), utilizado por esta webContents.
    hostWebContents:
      description: Una instancia de WebContents que podría poseer este WebContents.
    devToolsWebContents:
      description: >-
        Un WebContents de DevTools para este WebContents. Nota: Los usuarios nunca deben almacenar este objeto porque puede llegar a ser nulo cuando se ha cerrado las DevTools.
    debugger:
      description: Una instancia del depurador para este webContents.
  instanceEvents:
    did-finish-load:
      description: >-
        Emite cuando la navegación se realiza, es decir, la ruleta de la pestaña ha dejado de girar y se distribuye el evento onload.
    did-fail-load:
      description: >-
        Este evento es como ha acabado la carga pero emitido cuando la carga no pudo o fue cancelada, por ejemplo, window.stop() se invoca. La lista completa de códigos de error y su significado está disponible aquí.
    did-frame-finish-load:
      description: Emitidos cuando un marco de navegación.
    did-start-loading:
      description: >-
        Corresponde a los puntos en el tiempo cuando la ruleta de la ficha comenzó a girar.
    did-stop-loading:
      description: >-
        Corresponde a los puntos en el tiempo cuando la ruleta de la pestaña dejó de girar.
    did-get-response-details:
      description: >-
        Emite cuando se dispone de información sobre un recurso solicitado. Estado indica la conexión de socket para descargar el recurso.
    did-get-redirect-request:
      description: Emite cuando se recibe una redirección al solicitar un recurso.
    dom-ready:
      description: Emite cuando se carga el documento en el marco dado.
    page-favicon-updated:
      description: Emite cuando página recibe la URL del favicon.
      returns:
        favicons:
          description: Array de URLs
    new-window:
      description: >-
        Emite cuando la página se solicita para abrir una nueva ventana para una dirección url. Podría solicitarse mediante window.open o un enlace externo como <a target='_blank'>. Por defecto se creará un nuevo BrowserWindow para la dirección url. Llamar event.preventDefault() evitará electrón automáticamente creando un nuevo BrowserWindow. Si llama a event.preventDefault() y crear manualmente una nueva BrowserWindow a continuación, debe configurar event.newGuest para hacer referencia a la nueva instancia de BrowserWindow, no hacerlo puede resultar en un comportamiento inesperado. Por ejemplo:
      returns:
        disposition:
          description: >-
            Puede ser 'default', 'primer plano-tab', 'pestaña de fondo', 'nueva ventana', 'save to disk' y 'otros'.
        options:
          description: Las opciones que se utilizarán para crear el nuevo 'BrowserWindow'.
        additionalFeatures:
          description: >-
            Las características no estándar (características no manejados por el cromo o electrón) a Window.Open (')'.
    will-navigate:
      description: >-
        Emite cuando un usuario o la página quiere empezar la navegación. Esto pasa cuando se cambia el objeto window.location o un usuario hace clic en un enlace en la página. Este evento se emite cuando la navegación se inicia mediante programación con las API como webContents.loadURL y webContents.back. También se emite no para navegación en la página, como hacer clic en enlaces de anclaje o actualizar el window.location.hash. Utilizar lo-navegar-en la página de evento para este propósito. Llamar event.preventDefault() evitará la navegación.
    did-navigate:
      description: >-
        Emiten cuando se realiza una navegación. Este evento no se emite para la navegación en la página, como hacer clic en enlaces de anclaje o actualizar el window.location.hash. Utilizar lo-navegar-en la página de evento para este propósito.
    did-navigate-in-page:
      description: >-
        Emitida cuando una navegación en la página. Cuando sucede en la página de navegación, la URL de la página cambia pero no navegación fuera de la página. Ejemplos de que esto ocurra son cuando se hace clic en enlaces de ancla o cuando se desencadena el evento hashchange de DOM.
    crashed:
      description: Emitida cuando el procesador proceso se bloquea o se mata.
    plugin-crashed:
      description: Emite cuando se ha estrellado un proceso plugin.
    destroyed:
      description: Emite cuando sea destruido webContents.
    before-input-event:
      description: >-
        Emitidos antes de enviar los eventos keydown y keyup en la página. Llamada event.preventDefault evitará los eventos keyup/keydown de página expedición.
      returns:
        input:
          description: Propiedades de entrada
          properties:
            type:
              description: KeyUp o keyDown
            key:
              description: Equivalente a
            code:
              description: Equivalente a
            isAutoRepeat:
              description: Equivalente a
            shift:
              description: Equivalente a
            control:
              description: Equivalente a
            alt:
              description: Equivalente a
            meta:
              description: Equivalente a
    devtools-opened:
      description: Emite cuando se abre DevTools.
    devtools-closed:
      description: Emite cuando está cerrado DevTools.
    devtools-focused:
      description: Emite cuando DevTools es centrado / abierto.
    certificate-error:
      description: >-
        Emite cuando se ha podido verificar el certificado para la dirección url. El uso es el mismo con el evento de error de certificado de aplicación.
      returns:
        error:
          description: El código de error
        callback:
          parameters:
            isTrusted:
              description: Indica si el certificado se puede considerar de confianza
    select-client-certificate:
      description: >-
        Emite cuando se solicite un certificado de cliente. El uso es el mismo con el certificado de cliente seleccione evento de aplicación.
      returns:
        callback:
          parameters:
            certificate:
              description: Debe ser un certificado de la lista
    login:
      description: >-
        Cuando webContents quiere hacer basic auth. El uso es el mismo con el evento de inicio de sesión de aplicación.
    found-in-page:
      description: 'Emite cuando un resultado está disponible para la petición de [webContents.findInPage].'
      returns:
        result:
          properties:
            activeMatchOrdinal:
              description: Posición del partido activo.
            matches:
              description: Número de partidos.
            selectionArea:
              description: Coordenadas de partido de la primera región.
    media-started-playing:
      description: Emite cuando los medios de comunicación comienza a jugar.
    media-paused:
      description: Emitida cuando los medios de comunicación es en pausa o hacer jugar.
    did-change-theme-color:
      description: >-
        Emite cuando cambia de color del tema de la página. Esto es generalmente debido a encontrarse con una etiqueta meta:
    update-target-url:
      description: >-
        Emite cuando se mueve el ratón sobre un enlace o el teclado mueve el enfoque a un enlace.
    cursor-changed:
      description: >-
        Emite cuando cambia el tipo de cursor. El parámetro de tipo puede ser predeterminado, Cruz, puntero, texto, espera, ayuda, e-resize, n-resize, ne-resize, nw-resize, s-resize, se-resize, sw-resize, w-resize, ns-cambiar el tamaño, ew-cambiar el tamaño, nesw redimensionar, nwse redimensionar, col-redimensionar, redimensionar fila, m panorámica panorámica e, n panorámica, panorámica ne, panorámica nw, s panorámica, panorámica se, panorámica sw, w-panorámica, movimiento, texto vertical, celular, menú contextual, alias, progreso, nodrop, copiar ninguno, no permite zoom, alejar, agarrar, asir, personalizado. Si el parámetro de tipo es personalizado, el parámetro de la imagen mantendrá la imagen del cursor personalizado en un NativeImage, y escala, el tamaño y punto de acceso mantendrá información adicional sobre el cursor personalizado.
      returns:
        scale:
          description: factor de escala para el cursor personalizado
        size:
          description: el tamaño de la 'imagen'
        hotspot:
          description: coordenadas del punto del cursor personalizado
    context-menu:
      description: Emite cuando hay un nuevo menú de contexto que debe ser manejado.
      returns:
        params:
          properties:
            x:
              description: coordenadas x
            'y':
              description: coordenada y
            linkURL:
              description: >-
                URL del enlace que incluye el nodo del menú contextual se invocó en.
            linkText:
              description: >-
                Texto asociado al enlace. Puede ser una cadena vacía si el contenido del enlace es una imagen.
            pageURL:
              description: URL de la página de nivel superior que se invoca el menú de contexto en.
            frameURL:
              description: URL de premarco que se invoca el menú de contexto en.
            srcURL:
              description: >-
                Fuente URL para el elemento que se invoca el menú de contexto en. Elementos con fuente URLs son imágenes, audio y video.
            mediaType:
              description: >-
                Tipo de nodo del menú contextual se invocó en. Puede ser ninguno, imagen, audio, vídeo, canvas, archivo o plugin.
            hasImageContents:
              description: >-
                Si se invoca el menú de contexto en una imagen que no esté contenido.
            isEditable:
              description: Si el contexto es editable.
            selectionText:
              description: Texto de la selección que se invoca el menú de contexto en.
            titleText:
              description: >-
                Texto de título o alt de la selección que el contexto se invocó en.
            misspelledWord:
              description: 'La palabra mal escrita bajo el cursor, si cualquier.'
            frameCharset:
              description: >-
                La codificación de caracteres de la estructura en la cual se invoca el menú.
            inputFieldType:
              description: >-
                Si se invoca el menú de contexto en un campo de entrada, el tipo de ese campo. Los valores posibles son none, texto, contraseña, otros.
            menuSourceType:
              description: >-
                Fuente de entrada que invoca el menú de contexto. Puede ser ninguno, ratón, teclado, touch, touchMenu.
            mediaFlags:
              description: Las banderas para el elemento multimedia en que se invoca el menú de contexto.
              properties:
                inError:
                  description: Si el elemento multimedia se ha estrellado.
                isPaused:
                  description: Si el elemento multimedia está en pausa.
                isMuted:
                  description: Si el elemento multimedia se silencia.
                hasAudio:
                  description: Si el elemento multimedia tiene audio.
                isLooping:
                  description: Si el elemento multimedia es bucle.
                isControlsVisible:
                  description: Controles de elemento multimedia sean visibles.
                canToggleControls:
                  description: Controles de elemento multimedia sean toggleable.
                canRotate:
                  description: Si se puede girar el elemento multimedia.
            editFlags:
              description: >-
                Estos marcadores indican si el procesador cree que es capaz de realizar la acción correspondiente.
              properties:
                canUndo:
                  description: Si cree que el procesador puede deshacer.
                canRedo:
                  description: Si cree que el procesador puede rehacer.
                canCut:
                  description: Si cree que el procesador puede cortar.
                canCopy:
                  description: Si cree que el procesador puede copiar
                canPaste:
                  description: Si cree que el procesador puede pegar.
                canDelete:
                  description: Si cree que el procesador pueden eliminar.
                canSelectAll:
                  description: Si cree que el procesador puede seleccionar todo.
    select-bluetooth-device:
      description: >-
        Emite cuando el dispositivo bluetooth debe ser seleccionado en la llamada a navigator.bluetooth.requestDevice. Para utilizar navigator.bluetooth api webBluetooth debe ser activado.  Si no se llama event.preventDefault, se seleccionará el primer dispositivo disponible. devolución de llamada debe llamar con el deviceId que se seleccionarán, pasando la cadena vacía para devolución de llamada se cancelará la solicitud.
    paint:
      description: >-
        Emite cuando se genera un nuevo marco. Solamente el área sucio se pasa en el búfer.
      returns:
        image:
          description: Los datos de la imagen del marco entero.
    devtools-reload-page:
      description: Cuando la ventana devtools instruye a la webContents a cargar
    will-attach-webview:
      description: >-
        Cuando emite contenidos de la web de <webview> se está conectado a los contenidos de esta web. Llamar event.preventDefault() destruirá la página guest. Este evento puede utilizarse para configurar webPreferences para la webContents de un <webview> antes de que se carga y proporciona la capacidad de configuración que no se puede establecer a través de atributos <webview>.
      returns:
        webPreferences:
          description: >-
            Las preferencias de la web que serán utilizadas por la página de invitado. Este objeto puede modificarse para ajustar las preferencias de la página de invitado.
        params:
          description: >-
            Los otros parámetros de '<webview>' como la 'fuente' URL. Este objeto puede ser modificado para ajustar los parámetros de la página de invitado.
webFrame:
  description: Personalizar la representación de la página web actual.
  methods:
    setZoomFactor:
      description: >-
        Cambia el factor de zoom al factor especificado. Factor de zoom es zoom % dividido por 100, así que 300% = 3.0.
      parameters:
        factor:
          description: Factor de zoom.
    getZoomFactor:
      returns:
        description: El factor de zoom actual.
    setZoomLevel:
      description: >-
        Cambia el nivel de zoom hasta el nivel especificado. El tamaño original es 0 y cada incremento superior o inferior representa zoom 20% mayor o menor a los límites por defecto del 300% y el 50% del tamaño original, respectivamente.
      parameters:
        level:
          description: Nivel de zoom
    getZoomLevel:
      returns:
        description: El nivel de zoom actual.
    setZoomLevelLimits:
      description: >-
        Obsoleto: Llamar setVisualZoomLevelLimits en lugar de otro para definir los límites de nivel de zoom visual. Este método se eliminará en electrónica 2.0.
    setVisualZoomLevelLimits:
      description: Establece el nivel máximo y mínimo de pinch-to-zoom.
    setLayoutZoomLevelLimits:
      description: Establece el máximo y mínimo basado en diseño (es decir, no visual) nivel de zoom.
    setSpellCheckProvider:
      description: >-
        Establece un proveedor para corrección ortográfica en los campos de entrada y áreas de texto. El proveedor debe ser un objeto que tiene un método de corrección ortográfica que devuelve si pasa la palabra se deletrea correctamente. Un ejemplo de nodo-corrector ortográfico como proveedor:
      parameters:
        provider:
          properties:
            spellCheck:
              description: Devuelve booleano
    registerURLSchemeAsSecure:
      description: >-
        Se registra el esquema como esquema de seguro. Planes de seguros no activan las advertencias de contenido mixtas. Por ejemplo, https y datos son planes de seguros porque no puede ser corrompidos por los atacantes de la red activa.
    registerURLSchemeAsBypassingCSP:
      description: >-
        Recursos se cargarán desde este esquema independientemente de la política de seguridad contenido de la página actual.
    registerURLSchemeAsPrivileged:
      description: >-
        Registra el esquema como seguro, omite la política de seguridad de contenidos para recursos, permite registrar ServiceWorker y es compatible con API de fetch. Especificar una opción con el valor false para omitir el registro. Un ejemplo de registro de un régimen privilegiado, sin pasar por política de seguridad de contenido:
      parameters:
        options:
          properties:
            secure:
              description: True por defecto.
            bypassCSP:
              description: True por defecto.
            allowServiceWorkers:
              description: True por defecto.
            supportFetchAPI:
              description: True por defecto.
            corsEnabled:
              description: True por defecto.
    insertText:
      description: Inserta texto al elemento enfocado.
    executeJavaScript:
      description: >-
        Evalúa el código en la página. En la ventana del navegador algunas APIs HTML como requestFullScreen sólo puede ser invocado por un gesto del usuario. Establecer userGesture en true elimina esta limitación.
      parameters:
        userGesture:
          description: Por defecto es 'falso'.
        callback:
          description: Llamado después de ejecuta el script.
      returns:
        description: >-
          Una promesa que se resuelve con el resultado del código ejecutado o se rechaza si el resultado del código es una promesa rechazada.
    getResourceUsage:
      description: >-
        Devuelve un objeto que describe la información sobre el uso de cachés de memoria interna de Blink. Esto generará:
    clearCache:
      description: >-
        Intenta liberar memoria que ya no se utiliza (como imágenes de una navegación anterior). Nota que ciegamente llamar a este método probablemente hace electrones más lentos ya que tendrá que rellenar estos vaciar cachés, usted sólo debe llamar si se ha producido un evento en su aplicación que te hace pensar que su página está usando menos memoria (es decir, han navegado desde una página super pesada a una casi vacía y la intención de permanecer allí).
WebRequest:
  description: >-
    Interceptar y modificar el contenido de una solicitud en diversas etapas de su vida.
  instanceMethods:
    onBeforeRequest:
      description: >-
        El oyente se llamará con el oyente (detalles, callback) cuando un pedido está a punto de ocurrir. El uploadData es una matriz de objetos de UploadData. La devolución de llamada debe ser llamado con un objeto de respuesta.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Matriz de patrones de URL que se utilizará para filtrar las peticiones que no coinciden con los patrones de URL.
        listener:
          parameters:
            callback:
              parameters:
                response:
                  properties:
                    redirectURL:
                      description: >-
                        La solicitud original se impide ser enviado o terminado y en su lugar se redirige a la URL dada.
    onBeforeSendHeaders:
      description: >-
        El oyente se llamará con el oyente (detalles, callback) antes de enviar una solicitud HTTP, una vez que los encabezados de solicitud están disponibles. Esto puede ocurrir después de que se realiza una conexión TCP con el servidor, pero antes de cualquier http se envían los datos. La devolución de llamada debe ser llamado con un objeto de respuesta.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Matriz de patrones de URL que se utilizará para filtrar las peticiones que no coinciden con los patrones de URL.
    onSendHeaders:
      description: >-
        El oyente se llamará con listener(details) justo antes de una solicitud va a ser enviado al servidor, modificaciones de la respuesta anterior de onBeforeSendHeaders son accesibles por el momento este oyente es despedido.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Matriz de patrones de URL que se utilizará para filtrar las peticiones que no coinciden con los patrones de URL.
    onHeadersReceived:
      description: >-
        El oyente se llamará con el oyente (detalles, callback) cuando se han recibido encabezados de respuesta HTTP de una solicitud. La devolución de llamada debe ser llamado con un objeto de respuesta.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Matriz de patrones de URL que se utilizará para filtrar las peticiones que no coinciden con los patrones de URL.
    onResponseStarted:
      description: >-
        El oyente se llamará con listener(details) cuando se recibe el primer byte del cuerpo de la respuesta. Para las solicitudes HTTP, esto significa que las cabeceras de la línea y la respuesta de estado están disponibles.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Matriz de patrones de URL que se utilizará para filtrar las peticiones que no coinciden con los patrones de URL.
        listener:
          parameters:
            details:
              properties:
                fromCache:
                  description: Indica si la respuesta fue obtenida de la memoria caché de disco.
    onBeforeRedirect:
      description: >-
        El oyente se llamará con listener(details) cuando una redirección de servidor iniciado está a punto de ocurrir.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Matriz de patrones de URL que se utilizará para filtrar las peticiones que no coinciden con los patrones de URL.
        listener:
          parameters:
            details:
              properties:
                ip:
                  description: La dirección IP del servidor que la solicitud se envió realmente a.
    onCompleted:
      description: >-
        El oyente se llamará con listener(details) cuando una petición se ha completado.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Matriz de patrones de URL que se utilizará para filtrar las peticiones que no coinciden con los patrones de URL.
    onErrorOccurred:
      description: El oyente se llamará con listener(details) cuando se produce un error.
      parameters:
        filter:
          properties:
            urls:
              description: >-
                Matriz de patrones de URL que se utilizará para filtrar las peticiones que no coinciden con los patrones de URL.
        listener:
          parameters:
            details:
              properties:
                error:
                  description: La descripción del error.
webviewTag:
  description: Mostrar contenido web externo en un marco aislado y proceso.
  methods:
    loadURL:
      description: >-
        Cargas la url en la vista Web, la url deben contener el prefijo de protocolo, por ejemplo el http:// o file://.
      parameters:
        options:
          properties:
            httpReferrer:
              description: Un HTTP Referrer url.
            userAgent:
              description: Un agente de usuario que origina la solicitud.
            extraHeaders:
              description: Encabezados adicionales separados por "\n"
            baseURLForDataURL:
              description: >-
                Url (con separador de ruta de acceso que se arrastra) para los archivos a cargar por la url de los datos de la base. Esto es necesario sólo si la dirección url especificada es un enlace de datos y necesita cargar otros archivos.
    getURL:
      returns:
        description: La URL de la página de invitado.
    getTitle:
      returns:
        description: El título de la página de invitado.
    isLoading:
      returns:
        description: Si página huésped todavía está cargando recursos.
    isWaitingForResponse:
      returns:
        description: >-
          Si la página de huésped está esperando una respuesta de primera para el principal recurso de la página.
    stop:
      description: Deja pendiente la navegación.
    reload:
      description: Recarga la página de invitado.
    reloadIgnoringCache:
      description: Recarga la página guest y omite la memoria caché.
    canGoBack:
      returns:
        description: Si la página de huésped puede volver.
    canGoForward:
      returns:
        description: Si la página de invitado puede ir hacia adelante.
    canGoToOffset:
      returns:
        description: Si la página de invitado puede ir a compensar.
    clearHistory:
      description: Borra el historial de navegación.
    goBack:
      description: Hace que la página de huéspedes volver.
    goForward:
      description: Hace que la página de huéspedes hacia adelante.
    goToIndex:
      description: Navega en el índice especificado de la absoluto.
    goToOffset:
      description: Se desplaza al desplazamiento especificado desde la "entrada actual".
    isCrashed:
      returns:
        description: Si el proceso de render se ha estrellado.
    setUserAgent:
      description: Reemplaza al agente de usuario de la página de invitado.
    getUserAgent:
      returns:
        description: El agente de usuario para la página de invitado.
    insertCSS:
      description: Inyecta CSS en la página de invitado.
    executeJavaScript:
      description: >-
        Evalúa el código en la página. Si se establece userGesture, crea el contexto del gesto de usuario en la página. APIs de HTML como requestFullScreen, que requiere acción del usuario, puede tomar ventaja de esta opción para la automatización.
      parameters:
        userGesture:
          description: Por defecto 'false'.
        callback:
          description: Llamado después de ejecuta el script.
    openDevTools:
      description: Abre una ventana DevTools para página de invitado.
    closeDevTools:
      description: Cierra la ventana DevTools de página de invitado.
    isDevToolsOpened:
      returns:
        description: Si página de huéspedes tiene una ventana de DevTools adjunta.
    isDevToolsFocused:
      returns:
        description: Si se centra DevTools ventana de página de invitado.
    inspectElement:
      description: 'Comienza inspección de elemento en la posición (x, y) de la página de invitado.'
    inspectServiceWorker:
      description: >-
        Abre las DevTools para el contexto del trabajador del servicio presente en la página de invitado.
    setAudioMuted:
      description: Página de huésped sistema silenciado.
    isAudioMuted:
      returns:
        description: Si página guest ha enmudecido.
    undo:
      description: Se ejecuta deshacer comando edición en página.
    redo:
      description: Se ejecuta rehacer comando edición en página.
    cut:
      description: Ejecuta el comando edición en página.
    copy:
      description: Ejecuta edición de comandos de copia de página.
    paste:
      description: Ejecuta edición comando pegar en la página.
    pasteAndMatchStyle:
      description: Ejecuta pasteAndMatchStyle edición de comando en la página.
    delete:
      description: Ejecuta edición comando eliminar página.
    selectAll:
      description: Se ejecuta la edición comando selectAll en página.
    unselect:
      description: Ejecuta el comando Edición unselect en página.
    replace:
      description: Ejecuta edición reemplazar del comando en la página.
    replaceMisspelling:
      description: Ejecuta replaceMisspelling edición de comando en la página.
    insertText:
      description: Inserta texto al elemento enfocado.
    findInPage:
      description: >-
        Inicia una solicitud para encontrar todos coincide con el texto en la página web y devuelve un entero que representa el id de solicitud utilizado para la solicitud. El resultado de la solicitud puede obtenerse mediante la suscripción de evento encontrado en la página.
      parameters:
        text:
          description: 'Contenido a buscar, no debe estar vacío.'
        options:
          properties:
            forward:
              description: 'Si buscar hacia adelante o hacia atrás, por defecto true.'
            findNext:
              description: >-
                Si la operación es la primera solicitud o un seguimiento, por defecto false.
            matchCase:
              description: 'Si la búsqueda debe ser mayúsculas y minúsculas, por defecto false.'
            wordStart:
              description: Si se mira sólo el comienzo de las palabras. por defecto false.
            medialCapitalAsWordStart:
              description: >-
                Cuando se combina con wordStart, acepta a un partido en medio de una palabra si el partido comienza con una letra mayúscula seguida de una minúscula o no carta. Acepta coincide con varios otros intra-word, por defecto es false.
    stopFindInPage:
      description: Detiene cualquier solicitud de findInPage de la vista Web con la acción siempre.
      parameters:
        action:
          description: Especifica la acción que tendrá lugar cuando se termina la petición.
    print:
      description: 'Imprime la página de web de vista Web. Lo mismo que webContents.print([options]).'
      parameters:
        options:
          properties:
            silent:
              description: No pida a usuario configuración de impresión. Valor predeterminado es false.
            printBackground:
              description: >-
                También imprime el color de fondo y la imagen de la página web. Valor predeterminado es false.
    printToPDF:
      description: >-
        Imprime la página de web de vista Web como PDF, lo mismo que webContents.printToPDF (opciones, callback).
      parameters:
        options:
          properties:
            marginsType:
              description: >-
                Especifica el tipo de márgenes a utilizar. Utiliza 0 para margen predeterminado, 1 para ningún margen y 2 por margen mínimo.
            pageSize:
              description: >-
                Especifique el tamaño de página del PDF generado. Puede ser A3, A4, A5, Legal, carta, tabloide o un objeto que contiene la altura y la anchura en micrones.
            printBackground:
              description: Si desea imprimir fondos de CSS.
            printSelectionOnly:
              description: Si desea imprimir sólo la selección.
            landscape:
              description: 'verdadero paisaje, false para retrato.'
    capturePage:
      description: >-
        Captura una instantánea de la página de webview. Igual que webContents.capturePage ([correcto], devolución de llamada).
      parameters:
        rect:
          description: El área de la página para ser capturado
    send:
      description: >-
        Enviar un mensaje asincrónico a proceso procesador via canal, usted puede también enviar argumentos arbitrarios. El proceso de renderizado puede manejar el mensaje en el evento de canal con el módulo ipcRenderer. Consulte webContents.send para obtener ejemplos.
    sendInputEvent:
      description: >-
        Envía un evento de entrada a la página. Ver webContents.sendInputEvent para una descripción detallada del objeto de evento.
    setZoomFactor:
      description: >-
        Cambia el factor de zoom al factor especificado. Factor de zoom es zoom % dividido por 100, así que 300% = 3.0.
      parameters:
        factor:
          description: Factor de zoom.
    setZoomLevel:
      description: >-
        Cambia el nivel de zoom hasta el nivel especificado. El tamaño original es 0 y cada incremento superior o inferior representa zoom 20% mayor o menor a los límites por defecto del 300% y el 50% del tamaño original, respectivamente.
      parameters:
        level:
          description: Nivel de zoom
    showDefinitionForSelection:
      description: Muestra Diccionario emergente que busca la palabra seleccionada en la página.
    getWebContents:
      returns:
        description: El contenido de la web asociado a este webview.
  attributes:
    src:
      description: >-
        Devuelve la URL visible. Escritura a este atributo inicia navegación primer nivel. Asignación de fuente su propio valor volverá a cargar la página actual. El atributo src puede también aceptar las URL de datos, como datos: texto / mundo llano, Hola,!.
    autosize:
      description: >-
        Cuando este atributo está presente el recipiente webview se redimensione automáticamente dentro de los límites especificados por los atributos minwidth, minheight, largoMax y maxheight. Estas limitaciones no afectan el webview si autosize está habilitado. Cuando autosize está activada, el tamaño del contenedor de vista Web no puede ser menor que los valores mínimos o mayor que el máximo.
    nodeintegration:
      description: >-
        Cuando este atributo está presente la página de la huésped en webview tendrá integración del nodo y puede utilizar proceso y nodo APIs como requieren para acceder a recursos de bajo nivel del sistema. Integración de nodos está deshabilitado por defecto en la página de invitado.
    plugins:
      description: >-
        Cuando este atributo está presente la página de la huésped en webview será capaz de utilizar plugins de navegador. Plugins están desactivados por defecto.
    preload:
      description: >-
        Especifica una secuencia de comandos que se cargará antes otros scripts en la página de invitado. El protocolo de dirección URL de secuencia de comandos debe ser de cualquiera de los dos: o asar:, porque se cargará por requieren en página de huéspedes bajo el capó. Cuando la página de invitado no tiene integración de nodo que este script todavía tendrá acceso a todo nodo APIs, pero objetos globales inyectados por nodo se eliminarán después esta secuencia de comandos ha terminado de ejecutarse.
    httpreferrer:
      description: Establece el referrer URL de la página de invitado.
    useragent:
      description: >-
        Establece al agente de usuario de la página de huésped antes de que la página se navega a. Una vez que se carga la página, utilice el método setUserAgent para cambiar al agente de usuario.
    disablewebsecurity:
      description: >-
        Cuando este atributo está presente la página invitado tendrá seguridad web deshabilitado. Seguridad Web está habilitada de forma predeterminada.
    partition:
      description: >-
        Se establece la sesión de la página. Si partición comienza con persist:, la página será utilizar una sesión persistente para todas las páginas en la aplicación con la misma partición. Si no hay persisten: prefijo, la página será utilizar una sesión en la memoria. Asignando la misma partición, páginas múltiples pueden compartir la misma sesión. Si la partición no se establece la sesión predeterminada de la aplicación se utilizará. Este valor puede modificarse sólo antes de la primera navegación, puesto que no es posible cambiar la sesión de un proceso de renderizado activo. Posteriores intentos de modificar el valor fallará con una excepción de DOM.
    allowpopups:
      description: >-
        Cuando este atributo está presente la página de huéspedes podrán abrir nuevas ventanas. Pop-ups se desactivan por defecto.
    webpreferences:
      description: >-
        Una lista de cadenas que especifica las preferencias de la web en la vista Web, separados por. La lista completa de cadenas de preferencia compatibles puede encontrarse en BrowserWindow. La cadena sigue el mismo formato que la cadena de funciones window.open. Un nombre por sí mismo se da un valor booleano true. Puede establecer una preferencia a otro valor incluyendo un =, seguido por el valor. Valores especiales sí y 1 se interpretan como verdadera, mientras no y 0 se interpreta como false.
    blinkfeatures:
      description: >-
        Una lista de cadenas que especifica las funciones de abrir y cerrar a habilitarse separados por. La lista completa de cadenas de funciones compatibles puede encontrarse en el archivo RuntimeEnabledFeatures.json5.
    disableblinkfeatures:
      description: >-
        Una lista de cadenas que especifica las funciones de abrir y cerrar desactivar separados por. La lista completa de cadenas de funciones compatibles puede encontrarse en el archivo RuntimeEnabledFeatures.json5.
    guestinstance:
      description: >-
        Un valor que enlaza el webview para un webContents específico. Cuando un webview carga primero se crea un nuevo webContents y este atributo se establece en su identificador de instancia. Establecer este atributo en un webview nuevo o existente conecta a la webContents existente actualmente que hace que en un webview diferentes. El webview existente verá el evento destroy y entonces creará un nuevo webContents cuando se carga una nueva url.
    disableguestresize:
      description: >-
        Cuando este atributo está presente el contenido de webview se prevendrán de tamaño cuando se cambia el tamaño el elemento webview. Esto puede usarse en combinación con webContents.setSize para cambiar el tamaño manualmente el contenido de vista Web en reacción a un cambio de tamaño de ventana. Esto puede hacer cambiar el tamaño más rápido en comparación con confiar en los límites del elemento webview para cambiar automáticamente el tamaño de los contenidos.
  domEvents:
    load-commit:
      description: >-
        Se desencadena cuando una carga se ha comprometido. Esto incluye la navegación dentro del documento actual así como cargas de nivel de documento auxiliar, pero no incluye cargas de recursos asincrónicos.
    did-finish-load:
      description: >-
        Se desencadena cuando se realiza la navegación, es decir, la ruleta de la pestaña dejará de girar y se distribuye el evento onload.
    did-fail-load:
      description: >-
        Este evento es como ha acabado la carga, pero se desencadena cuando la carga no pudo o fue cancelada, por ejemplo, window.stop() se invoca.
    did-frame-finish-load:
      description: Dispararon cuando un marco de navegación.
    did-start-loading:
      description: >-
        Corresponde a los puntos en el tiempo cuando la ruleta de la ficha empieza a girar.
    did-stop-loading:
      description: >-
        Corresponde a los puntos en el tiempo cuando la ruleta de la pestaña deja de girar.
    did-get-response-details:
      description: >-
        Dispararon cuando detalles sobre un recurso solicitado está disponible. Estado indica conexión de socket para descargar el recurso.
    did-get-redirect-request:
      description: Se desencadena cuando una redirección fue recibida mientras solicita un recurso.
    dom-ready:
      description: Se desencadena cuando se carga el documento en el marco dado.
    page-title-updated:
      description: >-
        Se desencadena cuando se establece el título de página durante la navegación. explicitSet es falso cuando el título se sintetiza desde la url del archivo.
    page-favicon-updated:
      description: Se desencadena cuando página recibe la URL del favicon.
      returns:
        favicons:
          description: Array de URLs.
    enter-html-full-screen:
      description: Se desencadena cuando la página entra en pantalla completa por API de HTML.
    leave-html-full-screen:
      description: Se desencadena cuando página sale pantalla completa activado por la API de HTML.
    console-message:
      description: >-
        Se desencadena cuando la ventana del guest registra un mensaje de consola. El siguiente ejemplo de código reenvía todos los mensajes de registro a la consola de embebido sin tener en cuenta para nivel de registro u otras propiedades.
    found-in-page:
      description: Se desencadena cuando un resultado está disponible para la petición de webview.findInPage.
      returns:
        result:
          properties:
            activeMatchOrdinal:
              description: Posición del partido activo.
            matches:
              description: Número de partidos.
            selectionArea:
              description: Coordenadas de partido de la primera región.
    new-window:
      description: >-
        Se desencadena cuando la página invitado intenta abrir una nueva ventana del navegador. El siguiente ejemplo de código abre la nueva url en navegador de predeterminado del sistema.
      returns:
        disposition:
          description: >-
            Puede ser 'default', 'primer plano-tab', 'pestaña de fondo', 'nueva ventana', 'save to disk' y 'otros'.
        options:
          description: >-
            Las opciones que se deben utilizar para la creación de la nueva 'BrowserWindow'.
    will-navigate:
      description: >-
        Emite cuando un usuario o la página quiere empezar la navegación. Esto pasa cuando se cambia el objeto window.location o un usuario hace clic en un enlace en la página. Este evento se emite cuando la navegación se inicia mediante programación con las API como <webview>.loadURL y <webview>.back. También no es emitido durante la navegación en la página, como hacer clic en enlaces de anclaje o actualizar el window.location.hash. Utilizar lo-navegar-en la página de evento para este propósito. Llamada event.preventDefault() no tiene ningún efecto.
    did-navigate:
      description: >-
        Emiten cuando se realiza una navegación. Este evento no se emite para la navegación en la página, como hacer clic en enlaces de anclaje o actualizar el window.location.hash. Utilizar lo-navegar-en la página de evento para este propósito.
    did-navigate-in-page:
      description: >-
        Emitida cuando una navegación en la página. Cuando sucede en la página de navegación, la URL de la página cambia pero no navegación fuera de la página. Ejemplos de que esto ocurra son cuando se hace clic en enlaces de ancla o cuando se desencadena el evento hashchange de DOM.
    close:
      description: >-
        Se desencadena cuando la página huésped trata de cerrarse. Código de ejemplo siguiente desplaza el webview para cerca: en blanco cuando el cliente intenta cerrarse.
    ipc-message:
      description: >-
        Se desencadena cuando la página guest ha enviado un mensaje asincrónico a la página de embebido. Con sendToHost método y ipc-mensaje evento puede comunicarse entre huéspedes página y embebido:
    crashed:
      description: Se desencadena cuando el proceso de renderizado se estrelló.
    gpu-crashed:
      description: Se desencadena cuando el proceso de la gpu se estrelló.
    plugin-crashed:
      description: Dispararon cuando se estrelló un proceso plugin.
    destroyed:
      description: Se desencadena cuando se destruye el WebContents.
    media-started-playing:
      description: Emite cuando los medios de comunicación comienza a jugar.
    media-paused:
      description: Emitida cuando los medios de comunicación es en pausa o hacer jugar.
    did-change-theme-color:
      description: >-
        Emite cuando cambia de color del tema de la página. Esto es generalmente debido a encontrarse con una etiqueta meta:
    update-target-url:
      description: >-
        Emite cuando se mueve el ratón sobre un enlace o el teclado mueve el enfoque a un enlace.
    devtools-opened:
      description: Emite cuando se abre DevTools.
    devtools-closed:
      description: Emite cuando está cerrado DevTools.
    devtools-focused:
      description: Emite cuando DevTools es centrado / abierto.